<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aspose.Network</name>
    </assembly>
    <members>
        <member name="T:Aspose.Windows.Forms.FileDataObjectCollection">
            <summary>
            Represents the collection for FileDataObject.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDataObjectCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Windows.Forms.FileDataObjectCollection"/> class.
            </summary>
        </member>
        <member name="T:Aspose.iCalendar.RecurrenceRule">
            <summary>
            Represents one recurrence or exception rule in a recurrence pattern.
            </summary>
            <remarks>
            <p>Corresponds to RRULE or EXRULE part in iCalendar.</p>
            <p>To construct a recurrence rule, you typically need to:</p>
            <p>1. Specify the type of the rule in <see cref="P:Aspose.iCalendar.RecurrenceRule.Frequency"/>.</p>
            <p>2. Specify how the recurrence pattern ends using <see cref="P:Aspose.iCalendar.RecurrenceRule.EndType"/>, 
            <see cref="P:Aspose.iCalendar.RecurrenceRule.Count"/> or <see cref="P:Aspose.iCalendar.RecurrenceRule.Until"/>.</p>
            <p>3. Specify values in one or more ByXXX collections.</p>
            <p>Note, that if ByXXX rule part values are found which are beyond the available
            scope (ie, BYMONTHDAY=30 in February), they are simply ignored.</p>
            <p>
            Information, not contained in the rule, necessary to determine the various recurrence instance 
            start time and dates are derived from <see cref="P:Aspose.iCalendar.RecurrencePattern.StartDate"/>. For example,
            "FREQ=YEARLY;BYMONTH=1" doesn't specify a specific day within the month or a time. This information 
            would be the same as what is specified for DTSTART.</p>
            <p>
            ByXXX rule parts modify the recurrence in some manner. ByXXX rule parts for a period of time which is 
            the same or greater than the frequency generally reduce or limit the number of occurrences of the
            recurrence generated. For example, "FREQ=DAILY;BYMONTH=1" reduces the number of recurrence instances 
            from all days (if BYMONTH tag is not present) to all days in January. ByXXX rule parts for a period of
            time less than the frequency generally increase or expand the number of occurrences of the recurrence. 
            For example, "FREQ=YEARLY;BYMONTH=1,2" increases the number of days within the yearly recurrence set 
            from 1 (if BYMONTH tag is not present) to 2.</p>
            <p>
            If multiple ByXXX rule parts are specified, then after evaluating the specified Frequency and Interval
            rule parts, the ByXXX rule parts are applied to the current set of evaluated occurrences in the following
            order: <see cref="P:Aspose.iCalendar.RecurrenceRule.ByMonth"/>, <see cref="P:Aspose.iCalendar.RecurrenceRule.ByWeekNo"/>, <see cref="P:Aspose.iCalendar.RecurrenceRule.ByYearDay"/>, <see cref="P:Aspose.iCalendar.RecurrenceRule.ByMonthDay"/>, 
            <see cref="P:Aspose.iCalendar.RecurrenceRule.ByDay"/>, <see cref="P:Aspose.iCalendar.RecurrenceRule.ByHour"/>, <see cref="P:Aspose.iCalendar.RecurrenceRule.ByMinute"/>, <see cref="P:Aspose.iCalendar.RecurrenceRule.BySecond"/> and 
            <see cref="P:Aspose.iCalendar.RecurrenceRule.BySetPos"/>; then <see cref="P:Aspose.iCalendar.RecurrenceRule.Count"/> and <see cref="P:Aspose.iCalendar.RecurrenceRule.Until"/> are evaluated.</p>
            </remarks>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.iCalendar.RecurrenceRule"/> class.
            </summary>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.SetRuleEnd(System.String[])">
            <summary>
            Extract value and type as of ending rule and set it
            </summary>
            <param name="splitRRuleOptions">
            The string containing rule in a format iCalendar
            </param>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExtractFrequency(System.String[])">
            <summary>
            Extract of frequency repetition
            </summary>
            <param name="splitRRuleOptions">
            The string containing rule in a format iCalendar
            </param>
            <returns>
            Frequency 
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExtractDayOfWeek(System.String)">
            <summary>
            Extracts day of week from day of week string
            </summary>
            <param name="DayOfWeekString">
            The string containing day of week in a format iCalendar
            </param>
            <returns>
            Day of week
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.LoadPropertiesFromRuleString(System.String)">
            <summary>
            Load properties from rule string into class property
            </summary>
            <param name="ruleiCalendar">
            The string containing recurrence rule in a format iCalendar
            </param>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.AddDate(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Adds the next date in the array if it approaches under a rule
            </summary>
            <param name="dates">
            The array of dates calculated before
            </param>
            <param name="d">
            Added date
            </param>
            <returns>
            The array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.AddDateForExpand(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Adds the next date in the array if it approaches under a rule for expand expanding
            </summary>
            <param name="dates">
            The array of dates calculated before
            </param>
            <param name="d">
            Added date
            </param>
            <returns>
            The array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsValidByxxxForExpande(System.DateTime)">
            <summary>
            Checks date on correspondence to conditions BYxxx for expanding rule
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a conditions and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.GenerateSecondly(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Generation of dates for FREQ=SECONDLY parameter
            </summary>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.GenerateMinutely(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Generation of dates for FREQ=MINUTELY parameter
            </summary>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.GenerateHourly(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Generation of dates for FREQ=HOURLY parameter
            </summary>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.GenerateDaily(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Generation of dates for FREQ=DAILY parameter
            </summary>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.GenerateWeekly(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Generation of dates for FREQ=WEEKLY parameter
            </summary>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.GenerateMonthly(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Generation of dates for FREQ=MONTHLY parameter
            </summary>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.GenerateYearly(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Generation of dates for FREQ=YEARLY parameter
            </summary>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsEndRRule(System.DateTime,System.Int32)">
            <summary>
            Checks the current date on the ending of a recurrent rule
            </summary>
            <param name="d">
            Current date
            </param>
            <param name="datesCount">
            Amount of the dates generated up to it
            </param>
            <returns>
            Returns true if date can be inserted into the array and false if is not
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsInRange(System.DateTime)">
            <summary>
            Whether checks there is a date in a range set at generation
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date is in a range set at generation and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsByMonth(System.DateTime)">
            <summary>
            Checks date on correspondence to condition BYMONTH
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a condition and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsByWeekNumber(System.DateTime)">
            <summary>
            Checks date on correspondence to condition BYWEEKNO
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a condition and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsByYearDay(System.DateTime)">
            <summary>
            Checks date on correspondence to condition BYYEAR
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a condition and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsByMonthDay(System.DateTime)">
            <summary>
            Checks date on correspondence to condition BYMONTHDAY
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a condition and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsByDay(System.DateTime)">
            <summary>
            Checks date on correspondence to condition BYDAY
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a condition and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsByHour(System.DateTime)">
            <summary>
            Checks date on correspondence to condition BYHOUR
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a condition and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsByMinute(System.DateTime)">
            <summary>
            Checks date on correspondence to condition BYMINUTE
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a condition and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsBySecond(System.DateTime)">
            <summary>
            Checks date on correspondence to condition BYSECOND
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a condition and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.IsValidByxxx(System.DateTime)">
            <summary>
            Checks date on correspondence to conditions BYxxx
            </summary>
            <param name="d">
            Checked up date
            </param>
            <returns>
            Returns true if date corresponds to a conditions and false if is not present
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleMinutely(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency MINUTELY
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleHourly(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency HOURLY
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleDaily(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency DAILY
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleWeekly(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency WEEKLY
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleMonthly(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency MONTHLY
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleMonthlyByMonthDay(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency MONTHLY (BYMONTHDAY)
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleMonthlyByDay(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency MONTHLY (BYDAY)
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleYearly(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency YEARLY
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleYearlyByMonth(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency YEARLY (BYMONTH)
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleYearlyByWeekNo(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency YEARLY (BYMONTH)
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleYearlyByYearDay(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency YEARLY (BYYEARDAY)
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExpandRuleYearlyByDay(Aspose.iCalendar.DateCollection@,System.DateTime)">
            <summary>
            Expands a rule for frequency YEARLY (BYDAY)
            </summary>
            <param name="dates">
            The array of dates generated before
            </param>
            <param name="d">
            Current date
            </param>
            <returns>
            Returns the array of dates
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRule.ExtractBySetPos(Aspose.iCalendar.DateCollection@,Aspose.iCalendar.DateCollection@)">
            <summary>
            Deletes from the array of date not appropriate to rule BYSETPOS
            </summary>
            <param name="dates">
            The array of dates
            </param>
            <param name="datesSetPos">
            The array of dates appropriate to rule BYSETPOS
            </param>
        </member>
        <member name="F:Aspose.iCalendar.RecurrenceRule.startDate">
            <summary>
            Date ending of the generate recurrence pattern
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.RecurrenceRule.genStartDate">
            <summary>
            Date started of the recurrence pattern
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.RecurrenceRule.genEndDate">
            <summary>
            Date started of the generate recurrence pattern
            </summary>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.WeekStart">
            <summary>
            Gets or sets the starting day of the week.
            </summary>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.Frequency">
            <summary>
            Gets or sets the type of the recurrence rule.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.EndType">
            <summary>
            Gets or sets the end type.
            </summary>
            <value>The end type.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.Until">
            <summary>
            Gets or sets the until.
            </summary>
            <value>The until.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.BySecond">
            <summary>
            Gets the by second.
            </summary>
            <value>The by second.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.ByMinute">
            <summary>
            Gets the by minute.
            </summary>
            <value>The by minute.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.ByHour">
            <summary>
            Gets the by hour.
            </summary>
            <value>The by hour.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.ByMonth">
            <summary>
            Gets the by month.
            </summary>
            <value>The by month.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.ByDay">
            <summary>
            Gets the by day.
            </summary>
            <value>The by day.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.BySetPos">
            <summary>
            Gets the by set pos.
            </summary>
            <value>The by set pos.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.ByMonthDay">
            <summary>
            Gets the by month day.
            </summary>
            <value>The by month day.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.ByYearDay">
            <summary>
            Gets the by year day.
            </summary>
            <value>The by year day.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRule.ByWeekNo">
            <summary>
            Gets the by week no.
            </summary>
            <value>The by week no.</value>
        </member>
        <member name="T:Aspose.Network.Icmp.ReceiveCompletedEventArgs">
            <summary>
            Provides data for the ReceiveCompleted event. When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.ReceiveCompletedEventArgs.AsyncResult">
            <summary>
            Gets the result of the asynchronous operation requested.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.ReceiveCompletedEventArgs.Sender">
            <summary>
            Gets the sender of the event
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.ReceiveCompletedEventArgs.Message">
            <summary>
            Gets the message received from the server.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.EchoReplyMessage">
            <summary>
            Represents a echo reply message.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.IcmpMessage">
            <summary>
            Represents the request/response message in ICMP protocol.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.Checksum">
            <summary>
            Gets or sets the Checksum.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.Code">
            <summary>
            Gets or sets the code.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.MessageType">
            <summary>
            Gets or sets the message type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.DataBlock">
            <summary>
            Gets or sets the data block.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.DestinationAddress">
            <summary>
            Gets the message destination address.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.Flags">
            <summary>
            Gets the flags.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.FragmentOffset">
            <summary>
            Gets the offset of the fragment.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.HeaderChecksum">
            <summary>
            Gets the header checksum.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.HeaderLength">
            <summary>
            Gets the length of header.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.HeaderLengthInBytes">
            <summary>
            Gets the length of header in bytes.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.Identification">
            <summary>
            Gets the Identification.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.Protocol">
            <summary>
            Gets the protocol.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.SourceAddress">
            <summary>
            Gets the source address.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.TimeToLive">
            <summary>
            Gets the time to live.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.TotalLength">
            <summary>
            Gets the total length.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.TypeOfService">
            <summary>
            Gets the service type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpMessage.Version">
            <summary>
            Gets the version.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoReplyMessage.#ctor">
            <summary>
            Initializes a new instance of the EchoReplyMessage class.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoReplyMessage.Identifier">
            <summary>
            Gets or sets identifier.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoReplyMessage.SequenceNumber">
            <summary>
            Gets or sets the sequence number.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.EchoClient">
            <summary>
            Allows applications to ping a host using the Internet Control Message Protocol (ICMP) 
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.IcmpClient">
            <summary>
            Implements an Internet Control Message Protocol (ICMP) client.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.#ctor(System.Net.IPAddress)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Icmp.IcmpClient"/>.
            </summary>
            <param name="host">The host address.</param>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.#ctor(System.Net.IPEndPoint)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Icmp.IcmpClient"/>.
            </summary>
            <param name="host">The IPEndPoint that represents the host.</param>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.#ctor(System.Net.IPEndPoint,System.Int32)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Icmp.IcmpClient"/>.
            </summary>
            <param name="host">The IPEndPoint that represents the host.</param>
            <param name="receiveTimeout">The receive timeout.</param>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.#ctor(System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Icmp.IcmpClient"/>.
            </summary>
            <param name="host">The host address.</param>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.#ctor(System.String,System.Int32)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Icmp.IcmpClient"/>.
            </summary>
            <param name="host">The host address.</param>
            <param name="receiveTimeout">The receive timeout.</param>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.BeginReceive">
            <summary>
            Initiates an asynchronous receive operation by spcified message
            </summary>		
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.BeginReceive(System.Object)">
            <summary>
            Initiates an asynchronous receive operation by spcified message
            </summary>		
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.BeginReceive(System.Object,System.AsyncCallback)">
            <summary>
            Initiates an asynchronous receive operation by spcified message
            </summary>		
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>		
            <param name="asyncCallback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.BeginSend(Aspose.Network.Icmp.IcmpMessage)">
            <summary>
            Initiates an asynchronous send operation by spcified message
            </summary>
            <param name="icmpMessage">An IcmpMessage, to be sent to the server</param>		
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.BeginSend(Aspose.Network.Icmp.IcmpMessage,System.Object)">
            <summary>
            Initiates an asynchronous send operation by spcified message
            </summary>
            <param name="icmpMessage">An IcmpMessage, to be sent to the server</param>
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>				
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.BeginSend(Aspose.Network.Icmp.IcmpMessage,System.Object,System.AsyncCallback)">
            <summary>
            Initiates an asynchronous send operation by spcified message
            </summary>
            <param name="icmpMessage">An EchoMessage, to be sent to the server</param>
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>		
            <param name="asyncCallback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.Dispose">
            <summary>
            Dispose the instance
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.EndReceive(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous receive operation.
            </summary>
            <param name="asyncResult">The IAsyncResult that identifies the asynchronous receive operation to finish, and from which to retrieve an end result.</param>
            <returns>The IcmpMessage received from the server.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.EndSend(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous send operation.
            </summary>
            <param name="asyncResult">The IAsyncResult that identifies the asynchronous send operation to finish, and from which to retrieve an end result.</param>		
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.Receive">
            <summary>
            Receive messages from the server.
            </summary>
            <returns>The ICMP messages returned.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.IcmpClient.Send(Aspose.Network.Icmp.IcmpMessage)">
            <summary>
            Send the icmp message to the server
            </summary>
            <param name="icmpMessage">An IcmpMessage, to be sent to the server. </param>
        </member>
        <member name="E:Aspose.Network.Icmp.IcmpClient.ReceiveCompleted">
            <summary>
            Occurs when a message has been received from the server.This event is raised by the asynchronous operation, BeginReceive.
            </summary>
        </member>
        <member name="E:Aspose.Network.Icmp.IcmpClient.SendCompleted">
            <summary>
            Occurs when a message has been sent to the server.This event is raised by the asynchronous operation, BeginSend.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpClient.Host">
            <summary>
            Gets or sets the host.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpClient.SendTimeout">
            <summary>
            Gets or sets the send timeout
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpClient.ReceiveTimeout">
            <summary>
            Gets or sets the receive timeout
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpClient.SynchronizingObject">
            <summary>
            Gets or sets the object used to marshal the event handler calls issued as a result of an IcmpClient send or receive event.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.IcmpClient.TimeToLive">
            <summary>
            Gets or sets the time to live
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.#ctor(System.Net.IPAddress)">
            <summary>
            Intialize a new instance of the class <see cref="T:Aspose.Network.Icmp.EchoClient"/>.
            </summary>
            <param name="host">The address of the host</param>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.#ctor(System.Net.IPEndPoint)">
            <summary>
            Intialize a new instance of the class <see cref="T:Aspose.Network.Icmp.EchoClient"/>.
            </summary>
            <param name="host">The address of the host</param>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.#ctor(System.String)">
            <summary>
            Intialize a new instance of the class <see cref="T:Aspose.Network.Icmp.EchoClient"/>.
            </summary>
            <param name="host">The address of the host</param>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.BeginEcho(Aspose.Network.Icmp.EchoMessage)">
            <summary>
            Initiates an asynchronous echo operation by spcified message.
            </summary>
            <param name="message">An EchoMessage, to be sent to the server</param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.BeginEcho(System.Byte[])">
            <summary>
            Initiates an asynchronous echo operation by spcified message.
            </summary>
            <param name="message">The binary message data.</param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.BeginEcho(System.String)">
            <summary>
            Initiates an asynchronous echo operation by spcified message.
            </summary>
            <param name="message">The string message data.</param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.BeginEcho(Aspose.Network.Icmp.EchoMessage,System.Object)">
            <summary>
            Initiates an asynchronous echo operation by spcified message.
            </summary>
            <param name="message">An EchoMessage, to be sent to the server</param>
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.BeginEcho(System.Byte[],System.Object)">
            <summary>
            Initiates an asynchronous echo operation by spcified message.
            </summary>
            <param name="message">The binary message data.</param>
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.BeginEcho(System.String,System.Object)">
            <summary>
            Initiates an asynchronous echo operation by spcified message.
            </summary>
            <param name="message">The string message data.</param>
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.BeginEcho(Aspose.Network.Icmp.EchoMessage,System.Object,System.AsyncCallback)">
            <summary>
            Initiates an asynchronous echo operation by spcified message.
            </summary>
            <param name="message">An EchoMessage, to be sent to the server</param>
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>		
            <param name="asyncCallback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.BeginEcho(System.Byte[],System.Object,System.AsyncCallback)">
            <summary>
            Initiates an asynchronous echo operation by spcified message.
            </summary>
            <param name="message">The bianry message data.</param>
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>		
            <param name="asyncCallback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.BeginEcho(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Initiates an asynchronous echo operation by spcified message.
            </summary>
            <param name="message">The string message data.</param>
            <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>		
            <param name="asyncCallback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.Echo(System.Byte[])">
            <summary>
            Send an echo message to the server
            </summary>
            <param name="message">The message to be sent</param>
            <returns>An EchoRelyMessage, that returns from the server</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.Echo(System.String)">
            <summary>
            Send an echo message to the server
            </summary>
            <param name="message">The message to be sent</param>
            <returns>An EchoRelyMessage, that returns from the server</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.Echo">
            <summary>
            Send an echo message to the server
            </summary>		
            <returns>An EchoRelyMessage, that returns from the server</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.Echo(Aspose.Network.Icmp.EchoMessage)">
            <summary>
            Send an echo message to the server
            </summary>
            <param name="message">The message to be sent</param>
            <returns>An EchoRelyMessage, that returns from the server</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.EndEcho(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous Echo operation.
            </summary>
            <param name="asyncResult">The IAsyncResult that identifies the asynchronous echo operation to finish, and from which to retrieve an end result.</param>
            <returns>The EchoReplyMessage received from the server.</returns>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoClient.IncreaseSequenceNumber">
            <summary>
            Increases the sequence number.
            </summary>
            <returns>The sequence number.</returns>
        </member>
        <member name="E:Aspose.Network.Icmp.EchoClient.EchoCompleted">
            <summary>
            Occurs when an echo message has been received from the server.This event is raised by the asynchronous operation, BeginEcho.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoClient.Identifier">
            <summary>
            Gets or sets the indifier.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoClient.ResponseTime">
            <summary>
            Gets the response time
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoClient.ResponseTimeToLive">
            <summary>
            Gets the response time to live
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiRecipientCollection">
            <summary>
            Represents a collection of MapiRecipient objects. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiRecipientCollection.#ctor">
            <summary>
            Initializes a new instance of the MapiRecipientCollection class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.MXResourceRecord">
            <summary>
            Represents a MX DNS resource record
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.ResourceRecord">
            <summary>
            Represents the general resource record object in RFC 1035.
            </summary>
            <remarks>Provides a general resource record object in RFC 1035. </remarks>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecord.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see>.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.ResourceRecord.DataLength">
            <summary>
            Gets or sets the length of data
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.ResourceRecord.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.ResourceRecord.Class">
            <summary>
            Gets or sets the class of query
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.ResourceRecord.Type">
            <summary>
            Gets or sets the type of query.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.ResourceRecord.DataBlock">
            <summary>
            Gets or sets the data block
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.ResourceRecord.TTL">
            <summary>
            Gets or sets the time to live.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MXResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MXResourceRecord">MXResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MXResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MXResourceRecord">MXResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.MXResourceRecord.ExchangeName">
            <summary>
            Gets or sets the exchange name
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.MXResourceRecord.Preference">
            <summary>
            Gets or sets the preference
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.MBResourceRecord">
            <summary>
            Represents a MB DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MBResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MBResourceRecord">MBResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MBResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MBResourceRecord">MBResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.MBResourceRecord.Mailbox">
            <summary>
            Gets or sets the mail box
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Resources">
            <summary>
            Defines a RESOURCES iCalendar component property.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Property">
            <summary> Defines an iCalendar property. Subclasses of this class provide additional validation and typed values for specific
            iCalendar properties.
            </summary>
            <author>  
            </author>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Content">
            <summary> Base class for calendar content in the form of
            properties and parameters.
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Property.PRODID">
            <summary> 'prodid' and 'version' are both REQUIRED, but MUST NOT occur more than once.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Property.CALSCALE">
            <summary> 'calscale' and 'method' are optional, but MUST NOT occur more than once.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Property.CLASS">
            <summary> the following are optional, but MUST NOT occur more than once.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Property.ATTACH">
            <summary> the following are optional, and MAY occur more than once.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Property.COUNTRY">
            <summary> the following are vvenue only properties.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.ParameterCollection)">
            <summary>
            Constructor made protected to enforce the use of <code>PropertyFactory</code> for property instantiation.
            </summary>
            <param name="name">The name.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.#ctor(Aspose.Network.iCalendar.ObjectModel.Property)">
            <summary>
            Creates a deep copy of the specified property. That is, the name, parameter list, and value are duplicated from
            the specified property. This constructor should only be called from sub-classes to ensure type integrity is
            maintained.
            </summary>
            <param name="property">a property to copy</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.GetParameters">
            <summary>
            Gets the parameters.
            </summary>
            <returns>Returns the parameters.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.GetParameters(System.String)">
            <summary>
            Convenience method for retrieving a list of named parameters.
            </summary>
            <param name="name">name of parameters to retrieve</param>
            <returns>
            a parameter list containing only parameters with the specified name
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.GetParameter(System.String)">
            <summary>
            Convenience method for retrieving a single parameter.
            </summary>
            <param name="name">name of the parameter to retrieve</param>
            <returns>
            the first parameter from the parameter list with the specified name
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
            <throws>  IOException possibly thrown by setting the value of certain properties </throws>
            <throws>  URISyntaxException possibly thrown by setting the value of certain properties </throws>
            <throws>  ParseException possibly thrown by setting the value of certain properties </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Property.Validate">
            <summary>
            Perform validation on a property.
            </summary>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Property.CalendarProperty">
            <summary>
            Indicates whether this property is a calendar property.
            </summary>
            <value><c>true</c> if [calendar property]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Property.ComponentProperty">
            <summary>
            Indicates whether this property is a component property.
            </summary>
            <value><c>true</c> if [component property]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Property.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Property.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Resources.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Resources.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Resources"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Resources.#ctor(Aspose.Network.iCalendar.ObjectModel.ResourceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Resources"/> class.
            </summary>
            <param name="resources">The resources.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Resources.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.ResourceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Resources"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="resources">The resources.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Resources.GetResources">
            <summary>
            Gets the resources.
            </summary>
            <returns>Returns the resources.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Resources.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Resources.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus">
            <summary> Defines a REQUEST-STATUS iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus"/> class.
            </summary>
            <param name="status">The status.</param>
            <param name="description">The description.</param>
            <param name="data">a string representation of extension data</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="statusCode">The status code.</param>
            <param name="description">The description.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus.ExData">
            <summary>
            Gets or sets the ex data.
            </summary>
            <value>The ex data.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.RequestStatus.StatusCode">
            <summary>
            Gets or sets the status code.
            </summary>
            <value>The status code.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.ProdId">
            <summary> Defines a PRODID iCalendar property.</summary>
            <author> 
            </author>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Escapable">
            <summary> Implementors by definition require their string value to be converted to/from an escaped form when converting to/from
            and iCalendar representation.
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ProdId.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ProdId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.ProdId"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ProdId.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.ProdId"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ProdId.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
            <throws>  IOException possibly thrown by setting the value of certain properties </throws>
            <throws>  URISyntaxException possibly thrown by setting the value of certain properties </throws>
            <throws>  ParseException possibly thrown by setting the value of certain properties </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ProdId.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.DateList">
            <summary>
            Defines a list of iCalendar dates. If no value type is specified a list
            defaults to DATE-TIME instances.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.#ctor(System.Int32)">
            <summary>
            Creates a new instance with the specified initial capacity.
            </summary>
            <param name="initialCapacity">the initial capacity of the list</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.#ctor(Aspose.Network.iCalendar.ObjectModel.Parameters.Value)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.DateList"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.#ctor(Aspose.Network.iCalendar.ObjectModel.Parameters.Value,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Default constructor.
            </summary>
            <param name="type">The type.</param>
            <param name="timezone">The timezone.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.Parameters.Value)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.DateList"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <throws>  ParseException </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.Parameters.Value,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Parses the specified string representation to create a list of dates.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="timezone">The timezone.</param>
            <throws>  ParseException </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.#ctor(Aspose.Network.iCalendar.ObjectModel.DateList,Aspose.Network.iCalendar.ObjectModel.Parameters.Value)">
            <summary>
            Constructs a new date list of the specified type containing
            the dates in the specified list.
            </summary>
            <param name="list">a list of dates to include in the new list</param>
            <param name="type">the type of the new list</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.Add(Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Add a date to the list. The date will be updated to reflect the
            timezone of this list.
            </summary>
            <param name="date">the date to add</param>
            <returns>true</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.Add(System.Object)">
            <summary>
            Overrides superclass to throw an <code>IllegalArgumentException</code>
            Where argument is not a <code>net.fortuna.ical4j.model.Date</code>.
            </summary>
            <param name="date">The date.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateList.Remove(Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Remove a date from the list.
            </summary>
            <param name="date">the date to remove</param>
            <returns>
            true if the list contained the specified date
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.DateList.Type">
            <summary>
            Returns the VALUE parameter specifying the type of dates (ie. date or
            date-time) stored in this date list.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.DateList.Utc">
            <summary>
            Indicates whether this list is in local or UTC format. This property will
            have no affect if the type of the list is not DATE-TIME.
            </summary>
            <value><c>true</c> if UTC; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.DateList.TimeZone">
            <summary>
            Applies the specified timezone to all dates in the list.
            All dates added to this list will also have this timezone
            applied.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.CategoryCollection">
            <summary> Defines a list of iCalendar categories.</summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.CategoryCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.CategoryCollection.#ctor(System.String)">
            <summary>
            Parses the specified string representation to create a list of categories.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.CategoryCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.CategoryCollection.Add(System.String)">
            <summary>
            Add an address to the list.
            </summary>
            <param name="category">the category to add</param>
            <returns>true</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.CategoryCollection.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>an iterator</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.CategoryCollection.Remove(System.String)">
            <summary>
            Remove a category from the list.
            </summary>
            <param name="category">the category to remove</param>
            <returns>
            true if the list contained the specified category
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.CategoryCollection.Empty">
            <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Network.iCalendar.ObjectModel.CategoryCollection"/> is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
            <returns> boolean indicates if the list is empty
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.CategoryCollection.Count">
            <summary>
            the count of categories in the list.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection">
            <summary>
            Represents a collection of X509Certificate2 objects. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies a range of elements.
            </summary>
            <param name="array">The target array.</param>
            <param name="index">The zero-based index from the source.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator">
            <summary>
            Gets an Enumerator of the colleciton.
            </summary>
            <returns>An Enumerator.</returns>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor">
            <summary>
            Initializes a new instance of the X509Certificate2Collection class without any X509Certificate2 information.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Adds an object to the end of the X509Certificate2Collection.
            </summary>
            <param name="certificate">An X.509 certificate represented as an X509Certificate2 object. </param>
            <returns>The X509Certificate2Collection index at which the certificate has been added.</returns>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.Clear">
            <summary>
            Removes all objects from the collection.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Gets a value indicating whether the current X509Certificate2Collection contains the specified X509Certificate2.
            </summary>
            <param name="value">The X509Certificate2 to locate. </param>
            <returns>true if the X509Certificate2 is contained in this collection; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.CopyTo(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2[],System.Int32)">
            <summary>
            Copies the X509Certificate2 values in the current X509Certificate2Collection to a one-dimensional Array instance at the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the values copied from X509Certificate2Collection.</param>
            <param name="index">The index into array to begin copying. </param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Removes a specific X509Certificate2 from the current X509Certificate2Collection.
            </summary>
            <param name="value">The X509Certificate2 to remove from the current X509CertificateCollection.</param>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the System.Collections.ArrayList is synchronized (thread safe).        
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2Collection.Item(System.Int32)">
            <summary>
            Gets or sets the entry at the specified index of the current X509Certificate2Collection.
            </summary>
            <param name="index">The zero-based index of the entry to locate in the current X509Certificate2Collection. </param>
            <returns>The X509Certificate2 at the specified index of the current X509Certificate2Collection.</returns>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpClientBulkSendAgent">
            <summary>
            Represents a multi-threading agent for E-mail delivery using SmtpClient.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.#ctor(Aspose.Network.Mail.SmtpClient)">
            <summary>
            Initialize an instance of SmtpclientBulkSendAgent class with specified SmtpClient.
            </summary>
            <param name="client">The SmtpClient settings used to send E-mail messages.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.#ctor(Aspose.Network.Mail.SmtpClient,System.Int32)">
            <summary>
            Initialize an instance of SmtpclientBulkSendAgent class with specified SmtpClient.
            </summary>
            <param name="client">The SmtpClient settings used to send E-mail messages.</param>
            <param name="concurrent">The concurrent threads number.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.WaitForIdle">
            <summary>
            Wait for the thread pool to be idle
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.WaitForIdle(System.Int32)">
            <summary>
            Wait for the thread pool to be idle
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.AddMessages(Aspose.Network.Mail.MailMessageCollection)">
            <summary>
            Add messages to Message Pool.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.AddMessage(Aspose.Network.Mail.MailMessage)">
            <summary>
            Add messages to Message Pool.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.Start">
            <summary>
            Start the Bulk send.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.Stop">
            <summary>
            Stop the bulk sending.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.ClearMessages">
            <summary>
            Clear the Email messages in the Message Pool.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.DoSendMailMessage(System.Object)">
            <summary>
            Do email message sending in each thread.
            </summary>
            <param name="state">The state object.</param>
            <returns>The state object.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.Dispose">
            <summary>
            Releases the unmanaged resources used by the SmtpClientBulkSendAgent.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the SmtpClientBulkSendAgent, and optionally disposes of the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClientBulkSendAgent.Finalize">
            <summary>
            Frees resources used by the SmtpClientBulkSendAgent class.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.FailedDeliveryMessages">
            <summary>
            Gets the failed delivery Email messages.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.MessagePool">
            <summary>
            Gets the message pool.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.ActiveThreads">
            <summary>
            Gets the number of active threads.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.TotolSent">
            <summary>
            Gets the number of total sent Email messages.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.TotalFailed">
            <summary>
            Gets the number of total failed Email messages.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.TotalQueued">
            <summary>
            Gets the number of total queued Email messages.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.TotalProcessed">
            <summary>
            Gets the number of total processed Email messages.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.Client">
            <summary>
            Gets or sets the smtpclient.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.InnerExceptions">
            <summary>
            Gets the exception list.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClientBulkSendAgent.DeliveryInterval">
            <summary>
            Gets the interval of mail message delivery.
            </summary>
        </member>
        <member name="E:Aspose.Network.Mail.SmtpClientBulkSendAgent.LastMessageSending">
            <summary>
            Occurs if the the last message in MessagePool send is begining.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.IFormatter">
            <summary>
            Represents the interface for formatting log entry messsages.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.IFormatter.Format(Aspose.Network.Logging.LogEntry)">
            <summary>
            Formats a log entry and return a string to be outputted.
            </summary>
            <param name="entry">The Log entry to format.</param>
            <returns>String representing the log entry.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.IFormatter.Format(System.DateTime)">
            <summary>
            Formats a datetime and return a string to be outputted.
            </summary>
            <param name="datatime">The datetime.</param>
        </member>
        <member name="P:Aspose.Network.Logging.IFormatter.Header">
            <summary>
            Gets the header string.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.IFormatter.Footer">
            <summary>
            Gest the footer string.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.Formatter">
            <summary>
            Represents the interface for formatting log entry messsages.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.Formatter.#ctor">
            <summary>
            Creates an instance of Formatter.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.Formatter.Format(Aspose.Network.Logging.LogEntry)">
            <summary>
            Formats a log entry and return a string to be outputted.
            </summary>
            <param name="entry">Log entry to format.</param>
            <returns>String representing the log entry.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.Formatter.Format(System.DateTime)">
            <summary>
            Formats a datetime and return a string to be outputted.
            </summary>
            <param name="date">The datetime.</param>
        </member>
        <member name="P:Aspose.Network.Logging.Formatter.Header">
            <summary>
            Gets or sets the header.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.Formatter.Footer">
            <summary>
            Gets or sets the footer.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.FtpClient">
            <summary>
            Implements a File Transfer Protocol (FTP) client.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Ftp.FtpClient"/>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.#ctor(System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Ftp.FtpClient"/>.
            </summary>
            <param name="host">The host address of the Ftp server.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.#ctor(System.String,System.Int32)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Ftp.FtpClient"/>.
            </summary>
            <param name="host">The host address of the Ftp server.</param>
            <param name="port">The port of the Ftp server.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Ftp.FtpClient"/>.
            </summary>
            <param name="host">The host address of the Ftp server.</param>
            <param name="username">The username to log in the Ftp server.</param>
            <param name="password">The password to log in the Ftp server.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Ftp.FtpClient"/>.
            </summary>
            <param name="host">The host address of the Ftp server.</param>
            <param name="port">The port of the Ftp server.</param>
            <param name="username">The username to log in the Ftp server.</param>
            <param name="password">The password to log in the Ftp server.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Abort">
            <summary>
            Stops the operations with the FTP server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginAbort(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously stops the operations with the FTP server. 
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndAbort(System.IAsyncResult)">
            <summary>
            Ends an asynchronous abort process.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.GetCurrentDirectory">
            <summary>
            Gets the current working directory.
            </summary>
            <returns>The current working directory.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginGetCurrentDirectory(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously gets the current working direcotry. 
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndGetCurrentDirectory(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for getting the current working directory.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ChangeDirectory(System.String)">
            <summary>
            Changes the current working directory to specified path.
            </summary>
            <param name="remotePath">The remote path.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginChangeDirectory(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously changes the directory.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndChangeDirectory(System.IAsyncResult)">
            <summary>
            Ends an asynchronous changing the direcotry.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ChangeDirectoryUp">
            <summary>
            Changes the current working directory up to its parent directory.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginChangeDirectoryUp(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously changes the directory up to its parent.
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndChangeDirectoryUp(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for changing the directory up.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Exists(System.String)">
            <summary>
            Determines whether the romote path exists or not.
            </summary>
            <param name="remotePath">The remote path to be tested.</param>
            <returns>True if te remote path is existing; otherwise false.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginExists(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously determines whether the path exists.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndExists(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for determining whether the path exists.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <returns>True if te remote path is existing; otherwise false.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ListDirectoryDetails(System.String)">
            <summary>
            Lists the details of the specified remote path on the Ftp server.
            </summary>
            <param name="remotePath">The remote path on the Ftp server</param>
            <returns>The collection of <see cref="T:Aspose.Network.Ftp.ListItem"/> in the remote path.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ListDirectoryDetails">
            <summary>
            Lists the details of the current working directory on the Ftp server.
            </summary>
            <returns>The collection of <see cref="T:Aspose.Network.Ftp.ListItem"/> in the working path.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginListDirectoryDetails(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously lists the details of the specified remote path.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginListDirectoryDetails(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously lists the details of the working path.
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndListDirectoryDetails(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for listing the directory details.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <returns>The collection of <see cref="T:Aspose.Network.Ftp.ListItem"/> in the remote path.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.GetModificationTime(System.String)">
            <summary>
            Gets the modification time of the file on the Ftp server.
            </summary>
            <param name="remotePath">The remote path on the Ftp server.</param>
            <returns>The modification time.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginGetModificationTime(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously gets the modification time of the specified file.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndGetModificationTime(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for getting the modification time.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <returns>The modification time.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.MakeDirectory(System.String)">
            <summary>
            Creates the specified directory on the Ftp server.
            </summary>
            <param name="remoteDirectoryPath">The remote direcotry path.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginMakeDirectory(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously makes a new directory.
            </summary>
            <param name="remoteDirectoryPath">The remote direcotry path.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndMakeDirectory(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for making a new directory.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.AppendFile(System.IO.Stream,System.String)">
            <summary>
            Appends the content of local stream to the file on the Ftp server.
            </summary>
            <param name="sourceStream">The source stream.</param>
            <param name="remotePath">The remote path.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.AppendFile(System.String,System.String)">
            <summary>
            Appends the content of local file to remote file on the Ftp server.
            </summary>
            <param name="localPath">The path of the local file.</param>
            <param name="remotePath">The path of the remote file.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginAppendFile(System.String,System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously appends the content of local file to remote file on the Ftp server.
            </summary>
            <param name="localPath">The path of the local file.</param>
            <param name="remotePath">The path of the remote file.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginAppendFile(System.IO.Stream,System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously appends the content of local stream to remote file on the Ftp server.
            </summary>
            <param name="sourceStream">The source stream.</param>
            <param name="remotePath">The remote path.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndAppendFile(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for appending contents to the remote file.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ResetTransferType(Aspose.Network.Ftp.TransferType)">
            <summary>
            Resets the tranfer type.
            </summary>
            <param name="type">The tansfer type to set.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Upload(System.String,System.String)">
            <summary>
            Uploads the specified local file to the Ftp server.
            </summary>
            <param name="localFilePath">The path of the local file.</param>
            <param name="remoteFilePath">The path of the remote destination.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.UploadMultiFiles(System.String,System.String,System.Boolean)">
            <summary>
            Uploads multiple files.
            </summary>
            <param name="localFolderPath">The local folder.</param>
            <param name="remotePath">The remote path.</param>
            <param name="recursive">Indicates whether to recursive the sub folders.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Upload(System.IO.Stream,System.String)">
            <summary>
            Uploads the content of the specified local stream to the Ftp server.
            </summary>
            <param name="localStream">The local source stream.</param>
            <param name="remoteFilePath">The path of the remote destination.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginUpload(System.IO.Stream,System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously uploads the contents of the specified stream to remote file.
            </summary>
            <param name="localStream">The local source stream.</param>
            <param name="remoteFilePath">The path of the remote destination.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginUpload(System.String,System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously uploads the contents of the specified file to remote file.
            </summary>
            <param name="localFilePath">The path of the local file.</param>
            <param name="remoteFilePath">The path of the remote destination.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndUpload(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for uploading.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.UploadUnique(System.String)">
            <summary>
            Uploads the contents of the specified file to a uniquely named file on the FTP server.
            </summary>
            <param name="localFilePath">The path of the local file.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.UploadUnique(System.IO.Stream)">
            <summary>
            Uploads the contents of the specified stream to a uniquely named file on the FTP server.
            </summary>
            <param name="localStream">The local source stream.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginUploadUnique(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously uploads the contents of the specified stream to remote file with an unique name.
            </summary>
            <param name="localFilePath">The path of the local file.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginUploadUnique(System.IO.Stream,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously uploads the contents of the specified file to remote file with an unique name.
            </summary>
            <param name="localStream">The local stream</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndUploadUnique(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for uploading the contents with an unique name.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.RemoveDirectory(System.String)">
            <summary>
            Removes the specified directory on the Ftp server.
            </summary>
            <param name="remotePath">The remote directory path.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginRemoveDirectory(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously removes the specified directory.
            </summary>
            <param name="remotePath">The remote directory path.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndRemoveDirectory(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for removing directory.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Rename(System.String,System.String)">
            <summary>
            Renames the specified remote file.
            </summary>
            <param name="oldName">The old name of the remote file.</param>
            <param name="newName">The new name of the remote file.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginRename(System.String,System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously renames the specified remote file. 
            </summary>
            <param name="oldName">The old name of the remote file.</param>
            <param name="newName">The new name of the remote file.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndRename(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for renaming the remote file.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Delete(System.String)">
            <summary>
            Deletes the specified file on the Ftp server.
            </summary>
            <param name="remoteFilePath">The path of the remote file.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginDelete(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously deletes the specified file on the Ftp server.
            </summary>
            <param name="remoteFilePath">The path of the remote file.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndDelete(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for deleting the remote file.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Download(System.String,System.String)">
            <summary>
            Downlaods a remote file.
            </summary>
            <param name="remotePath">The remote file path.</param>
            <param name="localPath">The local file name.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Download(System.String,System.String,System.IO.FileMode)">
            <summary>
            Downlaods a remote file.
            </summary>
            <param name="remotePath">The remote file path.</param>
            <param name="localPath">The local file name.</param>
            <param name="mode">The filemode to create local file.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Download(System.String,System.String,System.Boolean)">
            <summary>
            Downloads the specified file from the Ftp server.
            </summary>
            <param name="remotePath">The path of the remote file.</param>
            <param name="localPath">The path of the local file.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Download(System.String,System.IO.Stream)">
            <summary>
            Downloads the remote file from the Ftp server.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="destinationStream">The destination stream.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginDownload(System.String,System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously downloads the specified file on the Ftp server.
            </summary>
            <param name="remotePath">The path of the remote file.</param>
            <param name="localPath">The path of the local file.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginDownload(System.String,System.IO.Stream,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously downloads the specified file on the Ftp server.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="destinationStream">The destination stream.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndDownload(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for downloading the specified file on the Ftp server.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ResumeDownload(System.String,System.String,System.Int64)">
            <summary>
            Resumes the download process at the specified offset.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="destinationPath">The local destination path.</param>
            <param name="offset">The start offset.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ResumeDownload(System.String,System.String,System.IO.FileMode)">
            <summary>
            Resumes a download operation with specified options.
            </summary>
            <param name="remotePath">The remote file name.</param>
            <param name="destinationPath">The local file name.</param>
            <param name="mode">The file mode to create a local file.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ResumeDownload(System.String,System.String)">
            <summary>
            Resumes a download operation with specified options.
            </summary>
            <param name="remotePath">The remote file name.</param>
            <param name="destinationPath">The local file name.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ResumeDownload(System.String,System.IO.Stream,System.Int64)">
            <summary>
            Resumes the download process at the specified offset.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="destinationStream">The local destination stream.</param>
            <param name="offset">The start offset.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginResumeDownload(System.String,System.String,System.Int64,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously resumes the download process.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="destinationPath">The local destination path.</param>
            <param name="offset">The start offset.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginResumeDownload(System.String,System.IO.Stream,System.Int64,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously resumes the download process.
            </summary>
            <param name="remotePath">The remote path.</param>
            <param name="destinationStream">The local destination stream.</param>
            <param name="offset">The start offset.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndResumeDownload(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for resuming download.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ResumeUpload(System.String,System.String,System.Int64)">
            <summary>
            Resumes the upload process at the specified offset.
            </summary>
            <param name="localPath">The local file path.</param>
            <param name="destinationPath">The remote destination path.</param>
            <param name="offset">The start offset.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ResumeUpload(System.IO.Stream,System.String,System.Int64)">
            <summary>
            Resumes the upload process at the specified offset.
            </summary>
            <param name="localStream">The local stream.</param>
            <param name="destinationPath">The remote destination path.</param>
            <param name="offset">The start offset.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginResumeUpload(System.String,System.String,System.Int64,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously resumes the upload process.
            </summary>
            <param name="localPath">The path of local file.</param>
            <param name="destinationPath">The remote destination path.</param>
            <param name="offset">The start offset.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginResumeUpload(System.IO.Stream,System.String,System.Int64,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously resumes the upload process.
            </summary>
            <param name="localStream">The local stream.</param>
            <param name="destinationPath">The remote destination path.</param>
            <param name="offset">The start offset.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndResumeUpload(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for resuming upload.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.StructureMount(System.String)">
            <summary>
            Mounts a file system data structure for the FTP client.
            </summary>
            <param name="remotePath">The path of remote directory or file system structure.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.KeepAlive">
            <summary>
            Keep the connection active between the Ftp server and local client.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginKeepAlive(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously sends the keep alive message to the Ftp server.
            </summary>		
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndKeepAlive(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for sending keep alive messages.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.CloseDataChannel">
            <summary>
            Close the data channel.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginCloseDataChannel(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously closes the data channel.
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndCloseDataChannel(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for closing the data channel.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.CloseControlChannel">
            <summary>
            Close the control channel.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginCloseControlChannel(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously closes the control channel.
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndCloseControlChannel(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for resuming upload.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ResumeSupported">
            <summary>
            Determines whether the Ftp server supports resuming data transfer.
            </summary>
            <returns>True, if resume supported; otherwise False.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginResumeSupported(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously queries whether the Ftp server supports resuming data transfer.
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndResumeSupported(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for querying the resuming support of the Ftp server.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Login">
            <summary>
            Logs into the Ftp server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Login(System.String)">
            <summary>
            Logs into the Ftp server.
            </summary>
            <param name="accountInfo">The account information.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginLogin(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously logs in the Ftp server.
            </summary>
            <param name="accountInfo">The account information.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginLogin(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously logs in the Ftp server.
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndLogin(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for logging the Ftp server.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Connect">
            <summary>
            Connects to the Ftp server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Connect(System.Boolean)">
            <summary>
            Connects to the Ftp server.
            </summary>
            <param name="autoLogin">Determines whether automatically log into the server.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Connect(System.String,System.Boolean)">
            <summary>
            Connects to the Ftp server.
            </summary>
            <param name="accountInfo">The account information.</param>
            <param name="autoLogin">Determines whether automatically log into the server.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginConnect(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously connects to the Ftp server.
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginConnect(System.Boolean,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously connects to the Ftp server.
            </summary>
            <param name="autoLogin">Determines whether automatically log into the server.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginConnect(System.String,System.Boolean,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously connects to the Ftp server.
            </summary>
            <param name="accountInfo">The account information.</param>
            <param name="autoLogin">Determines whether automatically log into the server.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndConnect(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for connecting the Ftp server.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Disconnect">
            <summary>
            Disconnect to the Ftp server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginDisconnect(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously disconnects to the Ftp server.
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndDisconnect(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for disconnecting.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Dispose">
            <summary>
            Dispose the FtpClient instance.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.GetServerStatus">
            <summary>
            Gets the status of the Ftp server.
            </summary>
            <returns>The status of the server.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginGetServerStatus(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously gets the status of the Ftp server.
            </summary>		
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndGetServerStatus(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for getting the status of the Ftpserver.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <returns>The status of the server.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.GetServerSystemInfo">
            <summary>
            Gets the system infomation about the Ftp server.
            </summary>
            <returns>The system information.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginGetServerSystemInfo(System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously gets the system information of the Ftp server.
            </summary>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndGetServerSystemInfo(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for getting the system information.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
            <returns>The system information.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Quote(System.String)">
            <summary>
            Send Quote command
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Site(System.String)">
            <summary>
            Sends the site command.
            </summary>
            <param name="command">The site specific command.</param>
            <returns>The response from the server.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.GetFileSize(System.String)">
            <summary>
            Gets the size of the specifed file on the Ftp server.
            </summary>
            <param name="remoteFilePath">The path of the remote file.</param>
            <returns>The size of the remote file.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginGetFileSize(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously gets the size of the specified file.
            </summary>
            <param name="remoteFilePath">The path of the remote file.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndGetFileSize(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for getting the size of the specified file.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.ReInitialize(System.Int32)">
            <summary>
            Reinitializes the account and settings for the FTP client.
            </summary>
            <param name="sleep">the number of milliseconds to pause before clearing</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.BeginReInitialize(System.Int32,System.Object,System.AsyncCallback)">
            <summary>
            Asynchronously reinitializes.
            </summary>
            <param name="sleep">the number of milliseconds to pause before clearing</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.EndReInitialize(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for reinitializing.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.FtpClient.Clone">
            <summary>
            Creates a copy of current instance.
            </summary>
            <returns>A copy of FtpClient.</returns>
        </member>
        <member name="E:Aspose.Network.Ftp.FtpClient.TransferProgress">
            <summary>
            Occurs when the transfering buffer is full and the bytes are flushed.
            </summary>
        </member>
        <member name="E:Aspose.Network.Ftp.FtpClient.TransferCompleted">
            <summary>
            Occurs when the transfering completed.
            </summary>
        </member>
        <member name="E:Aspose.Network.Ftp.FtpClient.TransferBroken">
            <summary>
            Occurs when the transfering is broken unexpectedly. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.CommandReceiveTimeout">
            <summary>
            Gets or sets the receive timeout for the control channel.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.CommandSendTimeout">
            <summary>
            Gets or sets the send timeout for the control channel.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.BannerMessage">
            <summary>
            Gets the banner message returned from the Ftp server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.ExitMessage">
            <summary>
            Gets the exit message returned from the Ftp server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.WelcomeMessage">
            <summary>
            Gets the welcome message returned from the Ftp server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.TransferType">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Ftp.TransferType">TransferType</see>  
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.Connected">
            <summary>
            Determines whether connected to the remote server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.DataConnectionMode">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Ftp.DataConnectionMode">DataConnectionMode</see>
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.DataReceiveTimeout">
            <summary>
            Gets or sets the receive timeout for the control channel.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.DataSendTimeout">
            <summary>
            Gets or sets the send timeout for the data channel.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.Port">
            <summary>
            Gets or sets the port to connect to Ftp server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.Host">
            <summary>
            Gets or sets the Ftp host
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.DataReceiveBufferSize">
            <summary>
            Gets or sets the receive buffer size of the data channel.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.DataSendBufferSize">
            <summary>
            Gets or sets the send buffer size of the data channel.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.Username">
            <summary>
            Gets username using to log into the ftp server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.Password">
            <summary>
            gets password, using to log into the ftp server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.Encoding">
            <summary>
            Gets or sets the <see cref="T:System.Text.Encoding"/> to use to encode and decode commands and responses. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.FtpClient.SynchronizingObject">
            <summary>
            Gets or sets the object used to marshal the event handler calls issued as a result of a FtpClient events.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiMessage">
             <summary>
             Represents an Outlook Message format document that can be parsed.
             </summary>
             <remarks>
             Instances of the MapiMessage class are used to represent Microsoft Outlook Message document files that are 
             parsed by MapiMessageReader class. 
             To access the sender, recipient, and contents of an e-mail message, use the associated properties of the MapiMessage class.
            </remarks>
             <example>
             <p>The following exmaple demonstrates how to read Outlook Message files.</p>
             [C#]
             <code>
            		//Open Outlook Message files
            		MapiMessage msg = MapiMessage.FromFile(@"c:\outlookmessage.msg");
            		
                    //read subject
                    Console.WriteLine("Subject:" + msg.Subject);
             
                    //sender name
                    Console.WriteLine("From:" + msg.SenderName);
                    
                    //message body
                    Console.WriteLine("Body:" + msg.Body);
             
                    //Attachments
                    foreach(MapiAttachment att in msg.Attachments)
                    {
                        Console.WriteLine("Attachment Name:"+att.FileName);
                        att.Save(att.FileName);
                    }    
             </code>
             [VB.NET]
             <code>
                    'Open Outlook Message files 
                    Dim msg As MapiMessage = MapiMessage.FromFile("c:\outlookmessage.msg") 
            
                    'read subject 
                    Console.WriteLine("Subject:" + msg.Subject) 
            
                    'sender name 
                    Console.WriteLine("From:" + msg.SenderName) 
            
                    'message body 
                    Console.WriteLine("Body:" + msg.Body) 
            
                    'Attachments 
                    For Each att As MapiAttachment In msg.Attachments 
                        Console.WriteLine("Attachment Name:" + att.FileName) 
                        att.Save(att.FileName) 
                    Next
             </code>
             </example>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiPropertyContainer">
            <summary>
            Represents the base class for <seealso cref="T:Aspose.Network.Outlook.MapiAttachment"/>, <seealso cref="T:Aspose.Network.Outlook.MapiRecipient"/>, <seealso cref="T:Aspose.Network.Outlook.MapiMessage"/>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.TryGetPropertyString(System.Int64,System.Int32)">
            <summary>
            Try to get a property data as string with specified tag and code page.
            </summary>
            <param name="tag">The property tag key.</param>
            <param name="codepage">The code page.</param>
            <returns>String that contains the contents of property data.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.TryGetPropertyData(System.Int64)">
            <summary>
            Try to get the property data with specified tag key.
            </summary>
            <param name="tag">The tag key.</param>
            <returns>The property data.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.TryGetPropertyString(System.Int64)">
            <summary>
            Try to get a property data as string with specified tag.
            </summary>
            <param name="tag">The property tag key.</param>
            <returns>String that contains the contents of property data.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.GetPropertyString(System.Int64,System.Int32)">
            <summary>
            Gets the string value of the property specified by tag
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <param name="codepage">The specified codepage used to get string value</param>
            <returns>The value of the property. If the property does not exist, returns NULL; otherwise, returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.GetPropertyString(System.Int64)">
            <summary>
            Gets the string value of the property specified by tag.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <returns>The value of the property. If the property does not exist, returns NULL; otherwise, returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.GetPropertyBytes(System.Int64)">
            <summary>
            Gets the string value of the property specified by tag.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <returns>The value of the property. If the property does not exist, returns NULL; otherwise, returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.GetPropertyInt32(System.Int64)">
            <summary>
            Gets the int32 value of the property specified by tag.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <returns>The value of the property. If the property does not exist, returns NULL; otherwise, returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.GetPropertyLong(System.Int64)">
            <summary>
            Gets the value of the property specified by tag as Long (int64) type.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <returns>The value of the property. If the property does not exist, returns NULL; otherwise, returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.GetPropertyShort(System.Int64)">
            <summary>
            Gets the value of the property specified by tag as Short type.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <returns>The value of the property. If the property does not exist, returns NULL; otherwise, returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.GetPropertyBoolean(System.Int64)">
            <summary>
            Gets the value of the property specified by tag as Boolean type.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <returns>The value of the property. If the property does not exist, returns NULL; otherwise, returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.GetPropertyDateTime(System.Int64)">
            <summary>
            Gets the value of the property specified by tag as DateTime type.
            </summary>
            <param name="key">The MAPI property tag.</param>
            <returns>The value of the property. If the property does not exist, returns NULL; otherwise, returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.TryGetPropertyString(System.Int64,System.String@,System.Int32)">
            <summary>
            Gets the value of the specified property as String type. A return value indicates whether the operation succeeded.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <param name="value">When this method returns, contains the value of the specified property, if the property exists. This parameter is passed uninitialized. </param>
            <param name="codepage">The specified codepage used to get string value</param>
            <returns>true if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.TryGetPropertyString(System.Int64,System.String@)">
            <summary>
            Gets the value of the specified property as String type. A return value indicates whether the operation succeeded.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <param name="value">When this method returns, contains the value of the specified property, if the property exists. This parameter is passed uninitialized. </param>
            <returns>true if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.TryGetPropertyDateTime(System.Int64,System.DateTime@)">
            <summary>
            Gets the value of the specified property as DateTime type. A return value indicates whether the operation succeeded.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <param name="value">When this method returns, contains the value of the specified property, if the property exists. This parameter is passed uninitialized. </param>
            <returns>true if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.TryGetPropertyLong(System.Int64,System.Int64@)">
            <summary>
            Gets the value of the specified property as Long type. A return value indicates whether the operation succeeded.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <param name="value">When this method returns, contains the value of the specified property, if the property exists. This parameter is passed uninitialized. </param>
            <returns>true if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyContainer.TryGetPropertyInt32(System.Int64,System.Int32@)">
            <summary>
            Gets the value of the specified property as Int32 type. A return value indicates whether the operation succeeded.
            </summary>
            <param name="tag">The MAPI property tag.</param>
            <param name="value">When this method returns, contains the value of the specified property, if the property exists. This parameter is passed uninitialized. </param>
            <returns>true if s was converted successfully; otherwise, false.</returns>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyContainer.Properties">
            <summary>
            The collection of properties.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyContainer.CodePage">
            <summary>
            The code page used.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.#ctor">
            <summary>
            Create an instance of MapiMessage.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.FromFile(System.String)">
            <summary>
            Create an instance of MapiMessage from the specified file.
            </summary>
            <param name="path">The name of the file to be loaded. </param>
            <returns>Returns a MapiMessage instance which is loaded from the specified file.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.FromStream(System.IO.Stream)">
            <summary>
            Create an instance of MapiMessage from the specified stream.
            </summary>
            <param name="stream">The stream to be loaded. </param>
            <returns>Returns a MapiMessage instance which is loaded from the specified stream.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.FromProperties(Aspose.Network.Outlook.MapiPropertyCollection)">
            <summary>
            Creates an instance of MapiMessage from a collection of Mapi properties.
            </summary>
            <param name="properties">A collection of MapiProperty.</param>
            <returns>Returns a MapiMessage instance which is loaded from the specified properties.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.RemoveAttachments(System.String)">
            <summary>
            Removes all of the attachments from the specified Outlook Message files.
            </summary>
            <param name="path">The name of the Outlook Message file. </param>
            <example>
            <p>The following exmaple demonstrates how to destroy attachments in Outlook Message files.</p>
            [C#]
            <code>
            	//Remove attachments from Outlook Message files
            	MapiAttachmentCollection attachments = MapiMessage.RemoveAttachments(@"c:\outlookmessage.msg");
                   
                //Attachments
                foreach(MapiAttachment att in attachments)
                {
                   Console.WriteLine("Attachment Name:"+att.FileName);
                   att.Save(att.FileName);
                }
            </code>
            [VB.NET]
            <code>
            	'Remove attachments from Outlook Message files
                MapiAttachmentCollection attachments = MapiMessage.RemoveAttachments("c:\outlookmessage.msg");
            
                'Attachments 
                For Each att As MapiAttachment In msg.Attachments 
                     Console.WriteLine("Attachment Name:" + att.FileName) 
                     att.Save(att.FileName) 
                Next
            </code>
            </example>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.DestroyAttachments(System.String)">
            <summary>
            Destroies the attachments in the specified Outlook Message files. DestroyAttachments will ignore the attachment parsing.
            </summary>
            <param name="path">The name of the Outlook Message file.</param>
            <example>
            <p>The following exmaple demonstrates how to destroy attachments in Outlook Message files.</p>
            [C#]
            <code>
            	//Destroy attachments from Outlook Message files
            	MapiMessage.DestroyAttachment(@"c:\outlookmessage.msg");
            </code>
            [VB.NET]
            <code>
            	'Destroy attachments from Outlook Message files
            	MapiMessage.DestroyAttachment("c:\outlookmessage.msg")
            </code>
            </example>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.IsStoreUnicodeOk">
            <summary>
            Determines if string properties are Unicode encoded or not.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.SetStringPropertyValue(System.Int64,System.String)">
            <summary>
            Sets the string property value.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.SetMessageFlags(Aspose.Network.Outlook.MapiMessageFlags)">
            <summary>
            Sets the message flags.
            </summary>
            <param name="flags">The flags.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.Save(System.String)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.Save(System.IO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.FromMailMessage(System.String)">
            <summary>
            Froms the mail message.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessage.FromMailMessage(Aspose.Network.Mail.MailMessage)">
            <summary>
            Froms the mail message.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.BodyRtf">
            <summary>
            Gets the RTF formatted message text.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.Body">
            <summary>
            Gets the message text.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.NormalizedSubject">
            <summary>
            Gets normalized subject of the message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.DisplayTo">
            <summary>
            Gets a list of the display names of the primary (To) message recipients, separated by semicolons (;). 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.DisplayNamePrefix">
            <summary>
            Gets a prefix of the display name.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.DisplayName">
            <summary>
            Gets the display name for the message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.DisplayCc">
            <summary>
            Gets a list of the display names of any carbon copy (CC) message recipients, separated by semicolons (;). 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.DisplayBcc">
            <summary>
            Gets a list of the display names of any blind carbon copy (BCC) message recipients, separated by semicolons (;).
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.SenderEmailAddress">
            <summary>
            Gets the message sender's e-mail address.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.SenderAddressType">
            <summary>
            Gets the message sender's e-mail address type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.SenderName">
            <summary>
            Gets the message sender's display name.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.TransportMessageHeaders">
            <summary>
            Gets the transport-specific message envelope information.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.InternetMessageId">
            <summary>
            Gets the message id of the message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.ConversationTopic">
            <summary>
            Gets the topic of the first message in a conversation thread. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.SentRepresentingEmailAddress">
            <summary>
            Gets the e-mail address for the messaging user represented by the sender.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.SentRepresentingAddressType">
            <summary>
            Gets the address type for the messaging user represented by the sender.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.SentRepresentingName">
            <summary>
            Gets the display name for the messaging user represented by the sender.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.SubjectPrefix">
            <summary>
            Gets a subject prefix that typically indicates some action on a message, such as "FW: " for forwarding. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.Subject">
            <summary>
            Gets the subject of the message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.MessageClass">
            <summary>
            Gets a subject prefix that typically indicates some action on a message, such as "FW: " for forwarding. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.Attachments">
            <summary>
            Gets the attachments in the message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.PropertyStream">
            <summary>
            Gets the property stream.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.Recipients">
            <summary>
            Gets the recipients of the message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.SubStorages">
            <summary>
            Gets the sub storages.
            </summary>
            <value>The sub storages.</value>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.NamedPropertyMapping">
            <summary>
            Gets the named property mapping.
            </summary>
            <value>The named property mapping.</value>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiMessage.ClientSubmitTime">
            <summary>
            Gets the client submit time of the message.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.RTResourceRecord">
            <summary>
            Represents a RT DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.RTResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.RTResourceRecord">RTResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.RTResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.RTResourceRecord">RTResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.RTResourceRecord.IntermediateHost">
            <summary>
            Gets or sets the intermediate host
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.RTResourceRecord.Preference">
            <summary>
            Gets or sets the preference
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.NSResourceRecord">
            <summary>
            Represents a NS DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.NSResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.NSResourceRecord">NSResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.NSResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.NSResourceRecord">NSResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.NSResourceRecord.NameServer">
            <summary>
            Gets or sets the name server
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.DnsClient">
            <summary>
            Allows applications to resolve domain names by using the Domain Name System Protocol (DNS).
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.DnsClient.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.DnsClient">DnsClient</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.DnsClient.Resolve(Aspose.Network.Dns.Question)">
            <summary>
            Resolve the Dns query question.
            </summary>
            <param name="question">The query question to be resolved.</param>
            <returns><b>true</b>, if received message is available; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.DnsClient.BeginResolve(Aspose.Network.Dns.Question,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously resolves the question. 
            </summary>
            <param name="quesion">The Dns question to be resolved.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.DnsClient.BeginResolve(Aspose.Network.Dns.QueryMessage,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously resolves the question. 
            </summary>
            <param name="queryMessage">The Dns question message to be resolved</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.DnsClient.EndResolve(System.IAsyncResult)">
            <summary>
            Ends an asynchronous resolving process.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Dns.DnsClient.Resolve(Aspose.Network.Dns.QueryMessage)">
            <summary>
            Delivery the query message to the DNS servers
            </summary>
            <param name="queryMessge">The query message to be sent.</param>
            <returns><b>true</b>, if the response message is available; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.DnsClient.ReverseResolve(System.Net.IPAddress)">
            <summary>
            Reverse resolve the host address.
            </summary>
            <param name="host">The host to be resolved.</param>
            <returns><b>true</b>, if the response message is available; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.DnsClient.GetAvailableDnsServers">
            <summary>
            Gets the available DNS servers list.
            </summary>
            <returns>The IP address list of the local DNS servers.</returns>
        </member>
        <member name="P:Aspose.Network.Dns.DnsClient.LastException">
            <summary>
            Gets the last exception and error messages.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.DnsClient.DnsServers">
            <summary>
            Gets or sets the DNS servers used to query.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.DnsClient.Port">
            <summary>
            Gets or sets the TCP socket port when connecting to the romote servers.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.DnsClient.ReceiveTimeout">
            <summary>
            Gets or set the receive timeout. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.DnsClient.ReceivedMessage">
            <summary>
            Gets the <see cref="T:Aspose.Network.Dns.QueryMessage">QueryMessage</see>	received from the remote servers. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Pop3.Pop3MessageInfo">
            <summary>
            The Pop3MessageInfo represents the E-Mail message info fetched from the Pop3 server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.CC">
            <summary>
            Gets CC of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.Date">
            <summary>
            Gets Date of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.From">
            <summary>
            Gets the From property.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.Headers">
            <summary>
            Gets the Headers of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.Size">
            <summary>
            Gets the size of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.ReplyTo">
            <summary>
            Gets the ReplyTo of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.Sender">
            <summary>
            Gets the Sender of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.SequenceNumber">
            <summary>
            Gets the Sequence Number of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.Subject">
            <summary>
            Gets the Subject of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.To">
            <summary>
            Gets the receiptants of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.Number">
            <summary>
            Gets the Sequence Number of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.UniqueId">
            <summary>
            Gets the Unique Id of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MessageInfo.Identifier">
            <summary>
            Gets the Unique Id of the E-Mail message.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.MimeHeaderCollection">
            <summary>
            Represents a collection of MimeHeader objects. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.Add(Aspose.Network.Mime.MimeHeader)">
            <summary>
            Adds the specified header.
            </summary>
            <param name="header">The header.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.Add(System.String,System.String)">
            <summary>
            Adds the specified header name.
            </summary>
            <param name="headerName">Name of the header.</param>
            <param name="headerValue">The header value.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.FindFirst(System.String)">
            <summary>
            Finds the first.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.GetEnumerator(System.Int32,System.Int32)">
            <summary>
            Gets the enumerator.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.Insert(System.Int32,Aspose.Network.Mime.MimeHeader)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="header">The header.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="headerName">Name of the header.</param>
            <param name="headerValue">The header value.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.Remove(Aspose.Network.Mime.MimeHeader)">
            <summary>
            Removes the specified header.
            </summary>
            <param name="header">The header.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeaderCollection.Replace(System.String,System.String)">
            <summary>
            Replaces the specified header name.
            </summary>
            <param name="headerName">Name of the header.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Aspose.Network.Mime.MimeHeaderCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeHeaderCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Mime.MimeHeader"/> with the specified header name.
            </summary>
            <value></value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeHeaderCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Mime.MimeHeader"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeHeaderCollection.SyncRoot">
            <summary>
            Gets the sync root.
            </summary>
            <value>The sync root.</value>
        </member>
        <member name="T:Aspose.Network.Mail.AttachmentCollection">
            <summary>
            Stores attachments to be sent as part of an e-mail message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.AttachmentCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.AttachmentCollection"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.WeekDayList">
            <summary>
            Defines a list of days.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDayList.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDayList.#ctor(System.Int32)">
            <summary>
            Creates a new instance with the specified initial capacity.
            </summary>
            <param name="initialCapacity">the initial capacity of the list</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDayList.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDayList.Add(Aspose.Network.iCalendar.ObjectModel.WeekDay)">
            <summary>
            Adds the specified week day.
            </summary>
            <param name="weekDay">a day to add to the list</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDayList.Add(System.Object)">
            <summary>
            Overrides superclass to throw an <code>IllegalArgumentException</code>
            where argument is not a <code>net.fortuna.ical4j.model.WeekDay</code>.
            </summary>
            <param name="weekDay">The week day.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDayList.Remove(Aspose.Network.iCalendar.ObjectModel.WeekDay)">
            <param name="weekDay">a day to remove from the list
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDayList.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Tel">
            <summary> Defines a TEL iCalendar component property.</summary>
            <author> 
            </author>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Tel.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Tel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Tel"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Tel.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Tel"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Tel.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Tel.GetValue">
            <summary>
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer">
            <summary> Defines an ORGANIZER iCalendar component property.
            
            <pre>
            4.8.4.3 Organizer
            
            Property Name: ORGANIZER
            
            Purpose: The property defines the organizer for a calendar component.
            
            Value Type: CAL-ADDRESS
            
            Property Parameters: Non-standard, language, common name, directory
            entry reference, sent by property parameters can be specified on this
            property.
            
            Conformance: This property MUST be specified in an iCalendar object
            that specifies a group scheduled calendar entity. This property MUST
            be specified in an iCalendar object that specifies the publication of
            a calendar user's busy time. This property MUST NOT be specified in
            an iCalendar object that specifies only a time zone definition or
            that defines calendar entities that are not group scheduled entities,
            but are entities only on a single user's calendar.
            
            Description: The property is specified within the &quot;VEVENT&quot;, &quot;VTODO&quot;,
            &quot;VJOURNAL calendar components to specify the organizer of a group
            scheduled calendar entity. The property is specified within the
            &quot;VFREEBUSY&quot; calendar component to specify the calendar user
            requesting the free or busy time. When publishing a &quot;VFREEBUSY&quot;
            calendar component, the property is used to specify the calendar that
            the published busy time came from.
            
            The property has the property parameters CN, for specifying the
            common or display name associated with the &quot;Organizer&quot;, DIR, for
            specifying a pointer to the directory information associated with the
            &quot;Organizer&quot;, SENT-BY, for specifying another calendar user that is
            acting on behalf of the &quot;Organizer&quot;. The non-standard parameters may
            also be specified on this property. If the LANGUAGE property
            parameter is specified, the identified language applies to the CN
            parameter value.
            
            Format Definition: The property is defined by the following notation:
            
            organizer  = &quot;ORGANIZER&quot; orgparam &quot;:&quot;
            cal-address CRLF
            
            orgparam   = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; cnparam) / (&quot;;&quot; dirparam) / (&quot;;&quot; sentbyparam) /
            (&quot;;&quot; languageparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            
            )
            
            Example: The following is an example of this property:
            
            ORGANIZER;CN=John Smith:MAILTO:jsmith@host1.com
            
            The following is an example of this property with a pointer to the
            directory information associated with the organizer:
            
            ORGANIZER;CN=JohnSmith;DIR=&quot;ldap://host.com:6666/o=3DDC%20Associ
            ates,c=3DUS??(cn=3DJohn%20Smith)&quot;:MAILTO:jsmith@host1.com
            
            The following is an example of this property used by another calendar
            user who is acting on behalf of the organizer, with responses
            intended to be sent back to the organizer, not the other calendar
            user:
            
            ORGANIZER;SENT-BY=&quot;MAILTO:jane_doe@host.com&quot;:
            MAILTO:jsmith@host1.com
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer.#ctor(System.String)">
            <summary>
            Constructs a new instance with the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Organizer.CalAddress">
            <summary>
            Gets or sets the cal address.
            </summary>
            <value>The cal address.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtStamp">
            <summary> Defines a DTSTAMP iCalendar component property.
            
            <pre>
            4.8.7.2 Date/Time Stamp
            
            Property Name: DTSTAMP
            
            Purpose: The property indicates the date/time that the instance of
            the iCalendar object was created.
            
            Value Type: DATE-TIME
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: This property MUST be included in the &quot;VEVENT&quot;, &quot;VTODO&quot;,
            &quot;VJOURNAL&quot; or &quot;VFREEBUSY&quot; calendar components.
            
            Description: The value MUST be specified in the UTC time format.
            
            This property is also useful to protocols such as [IMIP] that have
            inherent latency issues with the delivery of content. This property
            will assist in the proper sequencing of messages containing iCalendar
            objects.
            
            This property is different than the &quot;CREATED&quot; and &quot;LAST-MODIFIED&quot;
            properties. These two properties are used to specify when the
            particular calendar data in the calendar store was created and last
            modified. This is different than when the iCalendar object
            representation of the calendar service information was created or
            last modified.
            
            Format Definition: The property is defined by the following notation:
            
            dtstamp    = &quot;DTSTAMP&quot; stmparam &quot;:&quot; date-time CRLF
            
            stmparam   = *(&quot;;&quot; xparam)
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.UtcProperty">
            <summary> Superclass for all properties with date-time values that must be specified in UTC time.</summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty">
            <summary> Base class for properties with a DATE or DATE-TIME value. Note that some sub-classes may only allow either a DATE or
            a DATE-TIME value, for which additional rules/validation should be specified.
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.timezone">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.ParameterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new instance of the named property with an initial timezone.
            </summary>
            <param name="name">property name</param>
            <param name="timezone">initial timezone</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.SetValue(System.DateTime,System.Boolean)">
            <summary>
            Sets the value.
            </summary>
            <param name="dtValue">The dt value.</param>
            <param name="utc">if set to <c>true</c> [UTC].</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.SetValue(System.DateTime)">
            <summary>
            Sets the value.
            </summary>
            <param name="dtValue">The dt value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.SetValue(System.String)">
            <summary> Default setValue() implementation. Allows for either DATE or DATE-TIME values.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.Date">
            <summary>
            Sets the date value of this property. The timezone and value of this
            instance will also be updated accordingly.
            </summary>
            <value>The date.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.TimeZone">
            <summary>
            Publically available method to update the current timezone.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.DateProperty.Utc">
            <summary>
            Indicates whether the current date value is specified in UTC time.
            </summary>
            <value><c>true</c> if UTC; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.UtcProperty.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.ParameterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.UtcProperty"/> class.
            </summary>
            <param name="name"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.UtcProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.UtcProperty"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.UtcProperty.GetDateTime">
            <summary>
            Gets the date time.
            </summary>
            <returns>Returns the date-time.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.UtcProperty.setDateTime(Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <summary>
            Sets the date time.
            </summary>
            <param name="dateTime">The dateTime to set.</param>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.UtcProperty.TimeZone">
            <summary>
            Publically available method to update the current timezone.
            </summary>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.UtcProperty.DateTime">
            <summary>
            Gets or sets the date time.
            </summary>
            <value>The date time.</value>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStamp.#ctor">
            <summary>
            Default constructor. Initialises the dateTime value to the time of instantiation.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStamp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtStamp"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStamp.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtStamp"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStamp.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aValue">a value string for this component
            </param>
            <throws>  ParseException where the specified value string is not a valid date-time/date representation </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStamp.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <param name="aDate">a date representing a date-time
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStamp.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aDate">a date representing a date-time
            </param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl">
            <summary> A factory for creating iCalendar properties. Note that if relaxed parsing is enabled (via specifying the system
            property: icalj.parsing.relaxed=true) illegal property names are allowed.
            </summary>
            <author>  
            </author>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.AbstractContentFactory">
            <summary> Abstract implementation of a content factory.</summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.AbstractContentFactory.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.AbstractContentFactory.allowIllegalNames">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.#ctor">
            <summary> Constructor made private to prevent instantiation.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createActionFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createAttachFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createAttendeeFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createCalScaleFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createCategoriesFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createClazzFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createCommentFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createCompletedFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createContactFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createCountryFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createCreatedFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createDescriptionFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createDtEndFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createDtStampFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createDtStartFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createDueFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createDurationFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createExDateFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createExRuleFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createExtendedAddressFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createFreeBusyFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createGeoFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createLastModifiedFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createLocalityFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createLocationFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createLocationTypeFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createMethodFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createNameFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createOrganizerFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createPercentCompleteFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createPostalcodeFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createPriorityFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createProdIdFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createRDateFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createRecurrenceIdFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createRegionFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createRelatedToFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createRepeatFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createRequestStatusFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createResourcesFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createRRuleFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createSequenceFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createStatusFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createStreetAddressFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createSummaryFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createTelFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createTranspFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createTriggerFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createTzIdFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createTzNameFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createTzOffsetFromFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createTzOffsetToFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createTzUrlFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createUidFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createUrlFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createVersionFactory">
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createProperty(System.String)">
            <summary> Creates an uninitialised property.</summary>
            <param name="name">name of the property
            </param>
            <returns> a property
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.createProperty(System.String,Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Creates a property.
            </summary>
            <param name="name">name of the property</param>
            <param name="parameters">a list of property parameters</param>
            <param name="value">a property value</param>
            <returns>a component</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.isExperimentalName(System.String)">
            <param name="name">
            </param>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.PropertyFactoryImpl.Instance">
            <returns> Returns the instance.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.PeriodList">
            <summary> Defines a list of iCalendar periods. NOTE: By implementing the
            <code>java.util.SortedSet</code> interface period lists will always be
            sorted according to natural ordering.
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.PeriodList"/> class.
            </summary>
            <param name="utc">if set to <c>true</c> [UTC].</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.#ctor(System.String)">
            <summary>
            Parses the specified string representation to create a list of periods.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.Add(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary>
            Add a period to the list.
            </summary>
            <param name="period">the period to add</param>
            <returns>true</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.Add(System.Object)">
            <summary>
            Overrides superclass to throw an <code>IllegalArgumentException</code>
            where argument is not a <code>net.fortuna.ical4j.model.Period</code>.
            </summary>
            <param name="period">The period.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.Remove(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary>
            Remove a period from the list.
            </summary>
            <param name="period">the period to remove</param>
            <returns>
            true if the list contained the specified period
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.Normalise">
            <summary>
            Returns a normalised version of this period list. Normalisation includes
            combining overlapping periods, removing periods contained by other
            periods, combining adjacent periods, and removing periods that consume
            no time. NOTE: If the period list is
            already normalised then this period list is returned.
            </summary>
            <returns>a period list</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.Add(Aspose.Network.iCalendar.ObjectModel.PeriodList)">
            <summary>
            A convenience method that adds all the periods in the specified list to
            this list. Normalisation is also performed automatically after all
            periods have been added.
            </summary>
            <param name="periods">The periods.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PeriodList.Subtract(Aspose.Network.iCalendar.ObjectModel.PeriodList)">
            <summary>
            Subtracts the intersection of this list with the specified list of
            periods from this list and returns the results as a new period list. If
            no intersection is identified this list is returned.
            </summary>
            <param name="subtractions">The subtractions.</param>
            <returns>a period list</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.PeriodList.Utc">
            <summary>
            Indicates whether this list is in local or UTC format.
            </summary>
            <value><c>true</c> if UTC; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.PeriodList.TimeZone">
            <summary>
            Applies the specified timezone to all dates in the list.
            All dates added to this list will also have this timezone
            applied.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameter">
            <summary> Defines an iCalendar parameter. Subclasses of this class provide additional validation and typed values for specific
            iCalendar parameters.
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.ABBREV">
            <summary> Region abbreviation.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.ALTREP">
            <summary> Alternate text representation.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.CN">
            <summary> Common name.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.CUTYPE">
            <summary> Calendar user type.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.DELEGATED_FROM">
            <summary> Delegator.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.DELEGATED_TO">
            <summary> Delegatee.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.DIR">
            <summary> Directory entry.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.ENCODING">
            <summary> Inline encoding.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.FMTTYPE">
            <summary> Format type.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.FBTYPE">
            <summary> Free/busy time type.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.LANGUAGE">
            <summary> Language for text.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.MEMBER">
            <summary> Group or list membership.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.PARTSTAT">
            <summary> Participation status.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.RANGE">
            <summary> Recurrence identifier range.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.RELATED">
            <summary> Alarm trigger relationship.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.RELTYPE">
            <summary> Relationship type.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.ROLE">
            <summary> Participation role.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.RSVP">
            <summary> RSVP expectation.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.SENT_BY">
            <summary> Sent by.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.TYPE">
            <summary> Type.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.TZID">
            <summary> Reference to time zone object.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.VALUE">
            <summary> Property value data type.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.VVENUE">
            <summary> Reference to vvenue component</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameter.EXPERIMENTAL_PREFIX">
            <summary> Prefix to all experimental parameters.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameter.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameter.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameter.Copy">
            <summary>
            Deep copy of parameter.
            </summary>
            <returns>new parameter</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Parameter.Quotable">
            <summary> Indicates whether the current parameter value should be quoted.</summary>
            <returns> true if the value should be quoted, otherwise false
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Parameter.Name">
            <returns> Returns the name.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Parameter.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.CalendarParserFactory">
            <summary> Provides access to the configured {@link CalendarParser} instance. Alternative factory implementations may be
            specified via the following system property:
            
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.CalendarParserFactory.instance">
            <summary> The system property used to specify an alternate {@link CalendarParser} implementation.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.CalendarParserFactory.createParser">
            <summary> Returns a new instance of the configured {@link CalendarParser}.</summary>
            <returns> a calendar parser instance
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.CalendarParserFactory.Instance">
            <returns>
            </returns>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpFailedBulkSendException">
            <summary>
            Represents the exception thrown in bulk sending email message.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpException">
            <summary>
            Represents the exception that is thrown when the SmtpClient is not able to complete a Send or SendAsync operation. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpException.#ctor">
            <summary>
            Initializes a new instance of the SmtpException class. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SmtpException class. 
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the SmtpException class from the specified instances of the SerializationInfo and StreamingContext classes. 
            </summary>
            <param name="info">A SerializationInfo that contains the information required to serialize the new SmtpException. </param>
            <param name="context">A StreamingContext that contains the source and destination of the serialized stream associated with the new instance.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SmtpException class. 
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpFailedBulkSendException.#ctor">
            <summary>
            Initializes a new instance of the SmtpFailedBulkSendException class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpFailedBulkSendException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SmtpFailedBulkSendException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpFailedBulkSendException.#ctor(System.String,Aspose.Network.Mail.MailMessageCollection,System.Collections.ArrayList)">
            <summary>
            Initializes a new instance of the SmtpFailedBulkSendException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="failedMessages">The email message fail to send.</param>
            <param name="innerExceptions">The inner exceptions.</param>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpFailedBulkSendException.FailedSentMessages">
            <summary>
            Gets the email message that fail to send.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpFailedBulkSendException.InnerExceptions">
            <summary>
            Gets a list of inner exceptions.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.SendCompletedEventHandler">
            <summary>
             Event handler for Send an E-Mail message.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.BulkSendCompletedEventHandler">
            <summary>
            Event handler for BulkSend a collection fo E-Mail messages.
            </summary>    
        </member>
        <member name="T:Aspose.Network.Mail.SmtpClient">
            <summary>
            <p>The SmtpClient calss allows applications to send e-mail by using the Simple Mail Transfer Protocol (SMTP).</p>
            <p>Not only be able to deliver e-mail message to SMTP server, SmtpClient also provide other common e-mail delivery methods, 
            including writing e-mail messages to the File System, and Message Queque etc.</p>
            
            <p>The SmtpClient class fully supports the Asynchronous and Synchronous programming model.</p>
            
            <p>The SmptClient the major entry for the developers who want to send out mail messages.</p>
            </summary>
            <example>
            <p>The following exmaple demonstrates how to use SmtpClient class to send out e-mail messages.</p>
            [C#]
            <code>
               MailMessage msg = new MailMessage();
               msg.From = "somebody@somedomain.com";
               msg.To = "onebody@onedomain.com";
               msg.Subject = "Hello";
               msg.TextBody = "Hello, nice to know you!";            
               SmtpClient client = new SmtpClient("smtp.somebody.com", "somebody", "password");        
               client.Send(msg);
            </code>
            [VB.NET]
            <code>
               Dim to As String = "onebody@somedomain.com" 
               Dim from As String = "somebody@somedomain.com" 
               Dim subject As String = "Say Hello" 
               Dim body As String = "Hello, how are you?" 
               Dim message As MailMessage = New MailMessage(from, to, subject, body) 
               Dim client As SmtpClient = New SmtpClient("Smtp.somedomain.com", "somebody", "password") 
               client.Send(message)
            </code>
            </example>
            <note>
            Simple Mail Transfer Protocol (SMTP) is defined in RFC 2821, which is available at http://www.ietf.org.
            </note>
        </member>
        <member name="T:Aspose.Network.ProtocolClient">
            <summary>
            Represents the base class for network protocol clients.
            </summary>
        </member>
        <member name="M:Aspose.Network.ProtocolClient.#ctor">
            <summary>
            Inistializes a new instance of the ProtocolClient class.
            </summary>
        </member>
        <member name="M:Aspose.Network.ProtocolClient.Dispose">
            <summary>
            Releases the unmanaged resources used by the ProtocolClient.
            </summary>
        </member>
        <member name="M:Aspose.Network.ProtocolClient.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the ProtocolClient, and optionally disposes of the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources.</param>
        </member>
        <member name="P:Aspose.Network.ProtocolClient.Host">
            <summary>
            Gets or sets host.
            </summary>
        </member>
        <member name="P:Aspose.Network.ProtocolClient.Port">
            <summary>
            Gets or sets port.
            </summary>
        </member>
        <member name="P:Aspose.Network.ProtocolClient.Timeout">
            <summary>
            Gets or sets connection timeout.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.IMailTransferAgent">
            <summary>
            Provides the base interface for mail transfer agents.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.IMailTransferAgent.Send(Aspose.Network.Mail.MailMessage)">
            <summary>
            Sends an Email message.
            </summary>
            <param name="message">The Email message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.IMailTransferAgent.Clone">
            <summary>
            Creates a copy of the current instance.
            </summary>
            <returns>A copy of current instance.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.#ctor">
            <summary>
            Initializes a new instance of the SmtpClient class
            </summary>
            <example>
            The following code example demonstrates calling this constructor.
            [C#]        
            <code>
                string to = "onebody@somedomain.com";
                string from = "somebody@somedomain.com";
                string subject = "Say Hello";
                string body = "Hello, how are you?";
                MailMessage message = new MailMessage(from, to, subject, body);
                SmtpClient client = new SmtpClient();                
                client.Host = "Smtp.somedomain.com";
                client.Username = "somebody";
                client.Password = "password";
                client.Send(message);
            </code>
             [VB.NET]
            <code>
               Dim to As String = "onebody@somedomain.com" 
               Dim from As String = "somebody@somedomain.com" 
               Dim subject As String = "Say Hello" 
               Dim body As String = "Hello, how are you?" 
               Dim message As MailMessage = New MailMessage(from, to, subject, body) 
               Dim client As SmtpClient = New SmtpClient() 
               client.Host = "Smtp.somedomain.com"
               client.Username = "somebody"
               client.Password = "password"
               client.Send(message)
            </code>
            </example>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SmtpClient class that sends e-mail by using the specified SMTP server.
            </summary>
            <remarks>
            The host parameter is used to initialize the value of the Host property.
            </remarks>
            <example>
            The following code example demonstrates calling this constructor.
            [C#]        
            <code>
                string to = "onebody@somedomain.com";
                string from = "somebody@somedomain.com";
                string subject = "Say Hello";
                string body = "Hello, how are you?";
                MailMessage message = new MailMessage(from, to, subject, body);
                SmtpClient client = new SmtpClient("Smtp.somedomain.com");                
                client.Username = "somebody";
                client.Password = "password";
                client.Send(message);
            </code>
             [VB.NET]
            <code>
               Dim to As String = "onebody@somedomain.com" 
               Dim from As String = "somebody@somedomain.com" 
               Dim subject As String = "Say Hello" 
               Dim body As String = "Hello, how are you?" 
               Dim message As MailMessage = New MailMessage(from, to, subject, body) 
               Dim client As SmtpClient = New SmtpClient("Smtp.somedomain.com") 
               client.Username = "somebody"
               client.Password = "password"
               client.Send(message)
            </code>
            </example>
            <param name="host">A String that contains the name or IP address of the host computer used for SMTP transactions.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the SmtpClient class that sends e-mail by using the specified SMTP server and port. 
            </summary>
            <remarks>
            The host and port parameters set the value of the Host and Port properties, respectively.
            </remarks>
            <example>
            The following code example demonstrates calling this constructor.
            [C#]        
            <code>
                string to = "onebody@somedomain.com";
                string from = "somebody@somedomain.com";
                string subject = "Say Hello";
                string body = "Hello, how are you?";
                MailMessage message = new MailMessage(from, to, subject, body);
                SmtpClient client = new SmtpClient("Smtp.somedomain.com", 25);                
                client.Username = "somebody";
                client.Password = "password";
                client.Send(message);
            </code>
             [VB.NET]
            <code>
               Dim to As String = "onebody@somedomain.com" 
               Dim from As String = "somebody@somedomain.com" 
               Dim subject As String = "Say Hello" 
               Dim body As String = "Hello, how are you?" 
               Dim message As MailMessage = New MailMessage(from, to, subject, body) 
               Dim client As SmtpClient = New SmtpClient("Smtp.somedomain.com", 25) 
               client.Username = "somebody"
               client.Password = "password"
               client.Send(message)
            </code>
            </example>
            <param name="host">A String that contains the name or IP address of the host used for SMTP transactions.</param>
            <param name="port">An Int32 greater than zero that contains the port to be used on host.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the SmtpClient class. 
            </summary>
            <remarks>
            The host , username and password parameters set the value of the Host, Username, and Password properties, respectively.
            </remarks>
            <example>
            The following code example demonstrates calling this constructor.
            [C#]        
            <code>
                string to = "onebody@somedomain.com";
                string from = "somebody@somedomain.com";
                string subject = "Say Hello";
                string body = "Hello, how are you?";
                MailMessage message = new MailMessage(from, to, subject, body);
                SmtpClient client = new SmtpClient("Smtp.somedomain.com", "somebody", "password");                
                client.Send(message);
            </code>
             [VB.NET]
            <code>
               Dim to As String = "onebody@somedomain.com" 
               Dim from As String = "somebody@somedomain.com" 
               Dim subject As String = "Say Hello" 
               Dim body As String = "Hello, how are you?" 
               Dim message As MailMessage = New MailMessage(from, to, subject, body) 
               Dim client As SmtpClient = New SmtpClient("Smtp.somedomain.com", "somebody", "password") 
               client.Send(message)
            </code>
            </example>
            <param name="host">A String that contains the name or IP address of the host used for SMTP transactions.</param>
            <param name="username">A String that contains the username for SMTP server authentication.</param>
            <param name="password">A String that contains the password for SMTP authentication</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the SmtpClient class. 
            </summary>
            <remarks>
            <para>The host , port, username and password parameters set the value of the Host, Port, Username, and Password properties, respectively.</para>
            <para>The default Smtp server port is 25.</para>
            </remarks>
            <example>
            The following code example demonstrates calling this constructor.
            [C#]        
            <code>
                string to = "onebody@somedomain.com";
                string from = "somebody@somedomain.com";
                string subject = "Say Hello";
                string body = "Hello, how are you?";
                MailMessage message = new MailMessage(from, to, subject, body);        
                SmtpClient client = new SmtpClient("Smtp.somedomain.com", 25, "somebody", "password");                
                client.Send(message);
            </code>
             [VB.NET]
            <code>
               Dim to As String = "onebody@somedomain.com" 
               Dim from As String = "somebody@somedomain.com" 
               Dim subject As String = "Say Hello" 
               Dim body As String = "Hello, how are you?" 
               Dim message As MailMessage = New MailMessage(from, to, subject, body) 
               Dim client As SmtpClient = New SmtpClient("Smtp.somedomain.com", 25, "somebody", "password") 
               client.Send(message)
            </code>
            </example>
            <param name="host">A String that contains the name or IP address of the host used for SMTP transactions.</param>
            <param name="port">An Int32 greater than zero that contains the port to be used on host.</param>
            <param name="username">A String that contains the username for SMTP server authentication.</param>
            <param name="password">A String that contains the password for SMTP authentication</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.Send(Aspose.Network.Mail.MailMessage)">
             <summary>
             Sends the specified message to an SMTP server for delivery. 
             </summary>
             <param name="message">A MailMessage that contains the message to send.</param>
             <remarks>
             This method blocks while the e-mail is transmitted. You can specify a time-out value using the Timeout property to ensure that the method returns after a specified amount of time elapses.
            
             Before calling this method, the Host and Port properties must be set by passing this information into the SmtpClient(String,Int32) constructor. 
             
             You cannot call this method if there is a message being sent asynchronously.
             </remarks>
             <example>
             The following code example demonstrates using this method.
             [C#]
             <code>
                MailMessage msg = new MailMessage();
                msg.From = "somebody@somedomain.com";
                msg.To = "onebody@somedomain.com, onebody2@somedomain.com";
                msg.Subject = "Hello, Smtp";
                msg.TextBody = "Send e-mail using SmptClient";
                SmtpClient client = new SmtpClient("Smtp.somedomain.com", 25);        
                client.Send(msg);
             </code>
             [VB.NET]
             <code>
                Dim msg As MailMessage = New MailMessage 
                msg.From = "somebody@somedomain.com" 
                msg.To = "onebody@somedomain.com, onebody2@somedomain.com" 
                msg.Subject = "Hello, Smtp" 
                msg.TextBody = "Send e-mail using SmptClient" 
                Dim client As SmtpClient = New SmtpClient("Smtp.somedomain.com", 25) 
                client.Send(msg)
             </code>
             </example>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.Send(Aspose.Network.Mail.MailMessage,Aspose.Network.Mail.MailAddress)">
            <summary>
            Sends the specified message to an SMTP server with specified sender.
            </summary>
            <param name="message">A MailMessage that contains the message to send.</param>
            <param name="sender">The sender address that uses to talk to smtp server.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)">
             <summary>
             Sends the specified e-mail message to an SMTP server for delivery. The message sender, recipients, subject, and message body are specified using String objects. 
             </summary>
             <param name="from">A String that contains the address information of the message sender.</param>
             <param name="recipients">A String that contains the addresses that the message is sent to.</param>
             <param name="subject">A String that contains the subject line for the message.</param>
             <param name="body">A String that contains the message body.</param>
             <remarks>
             This method blocks while the e-mail is transmitted. You can specify a time-out value using the Timeout property to ensure that the method returns after a specified amount of time elapses.
            
             Before calling this method, the Host and Port properties must be set by passing this information into the SmtpClient(String,Int32) constructor. 
             
             You cannot call this method if there is a message being sent asynchronously.
             </remarks>
             <example>
             The following code example demonstrates using this method.
             [C#]
             <code>
                SmtpClient client = new SmtpClient("Smtp.youdomain.com", 25);
                //ignore authentication
                client.AuthenticationMethod = SmtpAuthentication.None;
                client.Send("from@youdomain.com", "receipt1@youdomain.com, receipt2@youdomain.com", "Hello, Smtp", "Send e-mail using SmptClient");
             </code>
             [VB.NET]
             <code>
             </code>
             </example>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.SendAsync(Aspose.Network.Mail.MailMessage,System.Object)">
            <summary>
            Sends the specified e-mail message to an SMTP server for delivery. This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes. 
            </summary>
            <remarks>
            <para>To receive notification when the e-mail has been sent or the operation has been canceled, add an event handler to the SendCompleted event. You can cancel a SendAsync operation by calling the SendAsyncCancel method. </para>
            <para>After calling SendAsync, you must wait for the e-mail transmission to complete before attempting to send another e-mail message using Send or SendAsync.</para>
            <para>Before calling this method, the Host and Port must be set properly.</para>
            <para>Your application can detect a server certificate validation error by examining the Error property passed into the SendCompletedEventHandler delegate.</para>
            <para>The Timeout property does not have any effect on a SendAsync call.</para>
            <para>To send mail and block while it is transmitted to the SMTP server, use one of the Send methods.</para>
            </remarks>
            <example>
            [C#]
            <code>
                public class SimpleAsynchronousExample
                {
                static bool mailSent = false;
                private static void SendCompletedCallback(object sender, AsyncCompletedEventArgs e)
                {
                // Get the unique identifier for this asynchronous operation.
                String token = (string) e.UserState;
                
                if (e.Cancelled)
                {
                Console.WriteLine("[{0}] Send canceled.", token);
                }
                if (e.Error != null)
                {
                Console.WriteLine("[{0}] {1}", token, e.Error.ToString());
                } else
                {
                Console.WriteLine("Message sent.");
                }
                mailSent = true;
                }
            
                public static void Main(string[] args)
                {
                 //create smtp client
                SmtpClient client = new SmtpClient("Smtp.somedomain.com", 25, "someone", "password");
            
                // Specify the e-mail sender.        
                MailAddress from = new MailAddress("someone@somedomain.com", "Mr. Someone");
            
                // Set destinations for the e-mail message.
                MailAddress to = new MailAddress("somebody@somedomain.com");
            
                // Specify the message content.
                MailMessage message = new MailMessage(from, to);
                message.TextBody = "Hello, how are you?";        
                message.Subject = "Say hello";        
            
                // Set the method that is called back when the send operation ends.
                client.SendCompleted += new 
                SendCompletedEventHandler(SendCompletedCallback);
            
                // The userState can be any object that allows your callback 
                // method to identify this send operation.
                // For this example, the userToken is a string constant.
                string userState = "test message1";
                client.SendAsync(message, userState);
                Console.WriteLine("Sending message... press c to cancel mail. Press any other key to exit.");
                string answer = Console.ReadLine();
                // If the user canceled the send, and mail hasn't been sent yet,
                // then cancel the pending operation.
                if (answer.StartsWith("c") &amp;&amp; mailSent == false)
                {
                client.SendAsyncCancel();
                }
                // Clean up.
                message.Dispose();
                Console.WriteLine("Goodbye.");
                }
                }
                }
            </code>
            </example>
            <param name="message">A MailMessage that contains the message to send.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.SendAsync(Aspose.Network.Mail.MailMessage)">
            <summary>
            Sends the specified e-mail message to an SMTP server for delivery. This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes. 
            </summary>
            <remarks>
            <para>To receive notification when the e-mail has been sent or the operation has been canceled, add an event handler to the SendCompleted event. You can cancel a SendAsync operation by calling the SendAsyncCancel method. </para>
            <para>After calling SendAsync, you must wait for the e-mail transmission to complete before attempting to send another e-mail message using Send or SendAsync.</para>
            <para>Before calling this method, the Host and Port must be set properly.</para>
            <para>Your application can detect a server certificate validation error by examining the Error property passed into the SendCompletedEventHandler delegate.</para>
            <para>The Timeout property does not have any effect on a SendAsync call.</para>
            <para>To send mail and block while it is transmitted to the SMTP server, use one of the Send methods.</para>
            </remarks>
            <example>
            [C#]
            <code>
                public class SimpleAsynchronousExample
                {
                static bool mailSent = false;
                private static void SendCompletedCallback(object sender, AsyncCompletedEventArgs e)
                {
                // Get the unique identifier for this asynchronous operation.
                String token = (string) e.UserState;
                
                if (e.Cancelled)
                {
                Console.WriteLine("[{0}] Send canceled.", token);
                }
                if (e.Error != null)
                {
                Console.WriteLine("[{0}] {1}", token, e.Error.ToString());
                } else
                {
                Console.WriteLine("Message sent.");
                }
                mailSent = true;
                }
            
                public static void Main(string[] args)
                {
                 //create smtp client
                SmtpClient client = new SmtpClient("Smtp.somedomain.com", 25, "someone", "password");
            
                // Specify the e-mail sender.        
                MailAddress from = new MailAddress("someone@somedomain.com", "Mr. Someone");
            
                // Set destinations for the e-mail message.
                MailAddress to = new MailAddress("somebody@somedomain.com");
            
                // Specify the message content.
                MailMessage message = new MailMessage(from, to);
                message.TextBody = "Hello, how are you?";        
                message.Subject = "Say hello";        
            
                // Set the method that is called back when the send operation ends.
                client.SendCompleted += new 
                SendCompletedEventHandler(SendCompletedCallback);
            
                // The userState can be any object that allows your callback 
                // method to identify this send operation.
                // For this example, the userToken is a string constant.
                string userState = "test message1";
                client.SendAsync(message, userState);
                Console.WriteLine("Sending message... press c to cancel mail. Press any other key to exit.");
                string answer = Console.ReadLine();
                // If the user canceled the send, and mail hasn't been sent yet,
                // then cancel the pending operation.
                if (answer.StartsWith("c") &amp;&amp; mailSent == false)
                {
                client.SendAsyncCancel();
                }
                // Clean up.
                message.Dispose();
                Console.WriteLine("Goodbye.");
                }
                }
                }
            </code>
            </example>
            <param name="message">A MailMessage that contains the message to send.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Sends an e-mail message to an SMTP server for delivery. 
            The message sender, recipients, subject, and message body are specified using String objects. 
            This method does not block the calling thread and allows the caller to pass an object to the method that is invoked when the operation completes. 
            </summary>
            <param name="from">A String that contains the address information of the message sender.</param>
            <param name="recipients">A String that contains the address that the message is sent to.</param>
            <param name="subject">A String that contains the subject line for the message.</param>
            <param name="body">A String that contains the message body.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.SendAsyncCancel">
            <summary>
            Cancels an asynchronous operation to send an e-mail message. 
            </summary>
            <remarks>
            Use the SendAsyncCancel method to cancel a pending SendAsync operation. 
            If there is an E-Mail waiting to be sent, this method releases resources used to store the mail. 
            If there is no E-Mail waiting to be sent, this method does nothing. 
            </remarks>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.BulkSend(Aspose.Network.Mail.MailMessageCollection)">
            <summary>
            Bulk send a boundle of E-Mail messages.
            </summary>
            <param name="messages">The E-Mail Messages to be sent.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.BulkSendAsync(Aspose.Network.Mail.MailMessageCollection)">
            <summary>
            Bulk send a boundle of E-Mail messages.
            </summary>
            <param name="messages">The E-Mail Messages to be sent.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.BulkSendAsync(Aspose.Network.Mail.MailMessageCollection,System.Object)">
            <summary>
            Bulk send a boundle of E-Mail messages.
            </summary>
            <param name="messages">The E-Mail Messages to be sent.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Appender, and optionally disposes of the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.Clone">
            <summary>
            Clones a new instance of SmtpClient.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.BeginSend(Aspose.Network.Mail.MailMessage,System.AsyncCallback,System.Object)">
            <summary>
            Begin Sending mail message, paired with EndSend method
            </summary>
            <param name="message">the message to be sent</param>
            <param name="callback">the method you want to call when send complete</param>
            <param name="state">object state</param>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.BeginBulkSend(Aspose.Network.Mail.MailMessageCollection,System.AsyncCallback,System.Object)">
            <summary>
            Begin sending a bulk of mail messages, paired with EndBulkSend
            </summary>
            <param name="messages">the message collection you want to send</param>
            <param name="callback">the method you want to call when send complete</param>
            <param name="state">object state</param>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.BeginSend(System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begin Sending a custom mail message
            </summary>
            <param name="from">Sender's address</param>
            <param name="recipients">Receiver's address(s)</param>
            <param name="subject">Subject of the mail message</param>
            <param name="body">Body of the mail message</param>
            <param name="callback">the method you want to call when send complete</param>
            <param name="state">object state</param>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.EndSend(System.IAsyncResult)">
            <summary>
            End async request ofsending message, paired with BeginSend method
            </summary>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpClient.EndBulkSend(System.IAsyncResult)">
            <summary>
            End async request ofsending a bulk of message, paired with BeginBulkSend
            </summary>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="E:Aspose.Network.Mail.SmtpClient.RecipientRejected">
            <summary>
            Occurs if a receipient is rejected by the Smtp Server.
            </summary>
        </member>
        <member name="E:Aspose.Network.Mail.SmtpClient.SendCompleted">
            <summary>
            Occurs if the an asynchronous message send operation is completed.
            </summary>
        </member>
        <member name="E:Aspose.Network.Mail.SmtpClient.BulkSendCompleted">
            <summary>
            Occurs if the an asynchronous BulkSend operation is completed.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClient.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClient.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClient.Encoding">
            <summary>
            Gets or sets the encoding method
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClient.PickupDirectoryLocation">
            <summary>
            Gets or sets the folder where applications save mail messages to be processed by the local SMTP server. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClient.DeliveryMethod">
            <summary>
            Specifies how outgoing email messages will be handled. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClient.State">
            <summary>
            The ConnectionState 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClient.AuthenticationMethod">
            <summary>
            Specifies what mechanism used to authenticate the username and password against SMTP server. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClient.EnableSsl">
            <summary>
            Specify whether the SmtpClient uses Secure Sockets Layer (SSL) to encrypt the connection.
            </summary>
            <example>
            <p>The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.</p>
            [C#]
            <code>
               MailMessage msg = new MailMessage();
               msg.From = "somebody@gmail.com";
               msg.To = "onebody@gmail.com";
               msg.Subject = "Hello";
               msg.TextBody = "Hello, nice to know you!";            
               SmtpClient client = new SmtpClient("smtp.gmail.com", 587, "somebody@gmail.com","password");
               client.AuthenticationMethod = SmtpAuthentication.Auto;
               client.SecurityMode = SmtpSslSecurityMode.Explicit;
               client.EnableSsl = true;
               client.Send(msg);
            </code>
            [VB.NET]
            <code>
               Dim to As String = "onebody@gmail.com" 
               Dim from As String = "somebody@gmail.com" 
               Dim subject As String = "Say Hello" 
               Dim body As String = "Hello, how are you?" 
               Dim message As MailMessage = New MailMessage(from, to, subject, body) 
               Dim client As SmtpClient = New SmtpClient("smtp.gmail.com", 587, "somebody@gmail.com","password")
               client.AuthenticationMethod = SmtpAuthentication.Auto
               client.SecurityMode = SmtpSslSecurityMode.Explicit
               client.EnableSsl = true
               client.Send(message)
            </code>
            </example>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpClient.SecurityMode">
            <summary>
            Specifies which security mode will be used when Secure Sockets Layer (SSL) to encrypt the connection.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.MessageTypes">
            <summary>
            Represents the type of message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.DestinationUnreachable">
            <summary>
            Destination Unreachable message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.Echo">
            <summary>
            Echo message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.EchoReply">
            <summary>
            Echo Replay message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.InformationReply">
            <summary>
            Information Reply message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.InformationRequest">
            <summary>
            Inforamtion Request message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.ParameterProblem">
            <summary>
            Parameter Problem message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.Redirect">
            <summary>
            Redirect message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.SourceQuench">
            <summary>
            Source Quench message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.TimeExceeded">
            <summary>
            Time Exceeded message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.Timestamp">
            <summary>
            Timestamp message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.MessageTypes.TimestampReply">
            <summary>
            Timestamp Reply message.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.DestinationUnreachableReason">
            <summary>
            Represents the reason of destination unreachable.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.NetworkUnreachable">
            <summary>
            NetworkUnreachable.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.HostUnreachable">
            <summary>
            HostUnreachable.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.ProtocolUnreachable">
            <summary>
            ProtocolUnreachable.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.PortUnreachable">
            <summary>
            PortUnreachable.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.FragmentationNeededAndDFFlagSet">
            <summary>
            FragmentationNeededAndDFFlagSet.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.SourceRouteFailed">
            <summary>
            SourceRouteFailed.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.DestinationNetworkUnknown">
            <summary>
            DestinationNetworkUnknown.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.DestinationHostUnknow">
            <summary>
            DestinationHostUnknow.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.SourceHostIsolated">
            <summary>
            SourceHostIsolated.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.CommunicationWithDestinationNetworkProhibited">
            <summary>
            CommunicationWithDestinationNetworkProhibited.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.CommunicationWithDestinationHostProhibited">
            <summary>
            CommunicationWithDestinationHostProhibited.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.NetworkUnreachableForTypeOfService">
            <summary>
            NetworkUnreachableForTypeOfService.
            </summary>
        </member>
        <member name="F:Aspose.Network.Icmp.DestinationUnreachableReason.HostUnreachableForTypeOfService">
            <summary>
            HostUnreachableForTypeOfService.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.TransferCompletedEventHandler">
            <summary>
            Represent the method to hanle the TransferCompleted Event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Aspose.Network.Ftp.FtpException">
            <summary>
            Represents the exception thrown in Ftp
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageUtil.DestroyAttachments(System.String)">
            <summary>
            Destroies the attachments in the specified Outlook Message files
            </summary>
            <param name="path">The name of the Outlook Message file</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageUtil.RemoveAttachments(System.String)">
            <summary>
            Removes the attachments from the specified Outlook Message files
            </summary>
            <param name="path">The name of the Outlook Message file</param>
            <returns>The attachments removed.</returns>
        </member>
        <member name="T:Aspose.Network.Pop3.Pop3Exception">
            <summary>
            This exception is thrown when errors occur in Pop3Client.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Exception.#ctor">
            <summary>
            Initializes a new instance of the Pop3Exception class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Exception.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Pop3Exception class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Exception.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the Pop3Exception class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiAttachmentPropertyStream">
            <summary>
            Represents the property stream of attachment object.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiPropertyStream">
            <summary>
            Represents the property stream.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyStream.GetContent">
            <summary>
            Gets the content.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyStream.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyStream.Content">
            <summary>
            Gets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiAttachmentPropertyStream.GetContent">
            <summary>
            Gets the content.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aspose.Network.Outlook.MailMessageInterpretorFactory">
            <summary>
            Represents the object factory for MailMessageInterpretor class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretorFactory.AddInterpretor(Aspose.Network.Outlook.MailMessageInterpretor,System.String)">
            <summary>
            Adds an interpretor instance with specified message class.
            </summary>
            <param name="interpretor">The interpretor to add.</param>
            <param name="messageClass">The mapping message class.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretorFactory.GetIntepretor(System.String)">
            <summary>
            Gets an interpretor intance from the factory with specified message class.
            </summary>
            <param name="messageClass">The mapping message class.</param>
            <returns>An interpretor.</returns>
        </member>
        <member name="P:Aspose.Network.Outlook.MailMessageInterpretorFactory.DefaultInterpretor">
            <summary>
            Gets or sets the defalut interpretor.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MailMessageInterpretorFactory.Instance">
            <summary>
            Gets an instance of the MailMessageInterpretorFactory class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.InstantiateCompletedEventArgs">
            <summary>
            Represents the event for tempalte instantiation optioni completed.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.InstantiateCompletedEventArgs.AsyncResult">
            <summary>
            Gets the result of the asynchronous operation requested.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.InstantiateCompletedEventArgs.Messages">
            <summary>
            The E-Mail messages created from the template.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.TemplateRoutine">
            <summary>
            Represents the routine used in the template file.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.InstantiateCompletedEventHandler">
            <summary>
            Event handler for instantiating a template.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.TemplateEngine">
             <summary>
             This class uses specified template to construct E-Mail messages.
            </summary>
            <remarks>
             
            </remarks>
             <example>
             <p>The example demonstrates how to use TemplateEngine to contruct E-Mail messages.</p>
             [C#]
             <code>
                static object GetSignature(object[] args)
                {
                    return "John Smith&lt;br&gt;Product Lead&lt;br&gt;Aspose Ltd.&lt;br&gt;" + DateTime.Now.ToShortDateString();
                }
                static void Main(string[] args)
                {
                    //create a new MailMessage instance as a template
                    MailMessage template = new MailMessage();
             
                    //add template field to subject
                    template.Subject = "Hello, #FirstName#";
                    template.From = "sale@aspose.com";
             
                    //add template field to receipt
                    template.To.Add(new MailAddress("#Receipt#", true));
             
                    //add template field to html body
                    //use GetSignment as the template routine, which will provide the same signment.
                    template.HtmlBody = "Dear #FirstName# #LastName#, &lt;br&gt;&lt;br&gt;Thank you for your interest in &lt;STRONG&gt;Aspose.Network&lt;/STRONG&gt;.&lt;br&gt;&lt;br&gt;Have fun with it.&lt;br&gt;&lt;br&gt;#GetSignature()#";
                    
                    //create a new TemplateEngine with the template message.
                    TemplateEngine engine = new TemplateEngine(template);
             
                    //register the GetSignment as a templet routine, for we use it in the template.
                    engine.RegisterRoutine("GetSignature", new TemplateRoutine(GetSignature));
            
                    //fill a DataTable as data source
                    DataTable dt = new DataTable();                        
                    dt.Columns.Add("Receipt", typeof(string));
                    dt.Columns.Add("FirstName", typeof(string));
                    dt.Columns.Add("LastName", typeof(string));          
            
                    DataRow dr;
                    dr = dt.NewRow();
                    dr["Receipt"] = "Nancy.Davolio&lt;Nancy@somedomain.com&gt;";
                    dr["FirstName"] = "Nancy";
                    dr["LastName"] = "Davolio";
                    dt.Rows.Add(dr);
                    dr = dt.NewRow();
                    dr["Receipt"] = "Andrew.Fuller&lt;Andrew@somedomain.com&gt;";
                    dr["FirstName"] = "Andrew";
                    dr["LastName"] = "Fuller";
                    dt.Rows.Add(dr);
                    dr = dt.NewRow();
                    dr["Receipt"] = "Janet.Leverling&lt;Janet@somedomain.com&gt;";
                    dr["FirstName"] = "Janet";
                    dr["LastName"] = "Leverling";          
                     dt.Rows.Add(dr);
             
                     MailMessageCollection messages;
                     try
                     {
                        //create the messages from the template and datasource.
                          messages= engine.Instantiate(dt);
                     }
                     catch (MailException ex)
                     {
                         System.Diagnostics.Debug.Write(ex.ToString());
                    }
                }
             </code>
             [VB]
             <code>
                Shared Function GetSignature(ByVal args() As Object) As Object
                    Return "John Smith&lt;br&gt;Product Lead&lt;br&gt;Aspose Ltd.&lt;br&gt;" + DateTime.Now.ToShortDateString()
                End Function
            
                Shared  Sub Main(ByVal args() As String)
                    'create a new MailMessage instance as a template
                    Dim template As MailMessage =  New MailMessage() 
             
                    'add template field to subject
                    template.Subject = "Hello, #FirstName#"
                    template.From = "sale@aspose.com"
            
                    'add template field to receipt
                    template.To.Add(New MailAddress("#Receipt#",true))
             
                    'add template field to html body
                    'use GetSignment as the template routine, which will provide the same signment.
                    template.HtmlBody = "Dear #FirstName# #LastName#, &lt;br&gt;&lt;br&gt;Thank you for your interest in <STRONG>Aspose.Network</STRONG>.&lt;br&gt;&lt;br&gt;Have fun with it.&lt;br&gt;&lt;br&gt;#GetSignature()#";
                    'create a new TemplateEngine with the template message.
                    Dim engine As TemplateEngine =  New TemplateEngine(template) 
             
                    'register the GetSignment as a templet routine, for we use it in the template.
                    engine.RegisterRoutine("GetSignature",New TemplateRoutine(GetSignature))
            
                    'fill a DataTable as data source
                     Dim dt As DataTable =  New DataTable() 
                    dt.Columns.Add("Receipt", Type.GetType(String))
                    dt.Columns.Add("FirstName", Type.GetType(String))
                    dt.Columns.Add("LastName", Type.GetType(String))          
             
                    Dim dr As DataRow
                    dr = dt.NewRow()
                     dr["Receipt"] = "Nancy.Davolio&lt;Nancy@somedomain.com&gt;"
                    dr("FirstName") = "Nancy"
                    dr("LastName") = "Davolio"
                    dt.Rows.Add(dr)
                    dr = dt.NewRow()
                    dr["Receipt"] = "Andrew.Fuller&lt;Andrew@somedomain.com&gt;"
                    dr("FirstName") = "Andrew"
                    dr("LastName") = "Fuller"
                    dt.Rows.Add(dr)
                    dr = dt.NewRow()
                    dr["Receipt"] = "Janet.Leverling&lt;Janet@somedomain.com&gt;"
                    dr("FirstName") = "Janet"
                    dr("LastName") = "Leverling"          
                     dt.Rows.Add(dr)
            
                     Dim messages As MailMessageCollection
                     Try
                        'create the messages from the template and datasource.
                          messages= engine.Instantiate(dt)
                     Catch ex As MailException
                         System.Diagnostics.Debug.Write(ex.ToString())
                     End Try
                End Sub
             </code>
             </example>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.#ctor(System.String)">
            <summary>
            Creates a new instance for the class TemplateMessage with the eml format file.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.#ctor(Aspose.Network.Mail.MailMessage)">
            <summary>
            Creates a new instance for the class TemplateMessage with the specified MailMessage instance.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.RegisterRoutine(System.String,Aspose.Network.Mail.TemplateRoutine)">
            <summary>
            Registers the template routine to the temaplate engine.
            </summary>
            <example>
            [C#]
            <code>
            //Defined a function for processing your field(s)
            public object ToUpper(object[] args)
            {
            		string name = (string)args[0];
            		return name.ToUpper();
            }
             
            ...
            msg.TextBody = "Dear #FirstName#,#ToUpper(LastName)#  Hello #LastName#. Thanks";
            ...
            TemplateEngine engine = new TemplateEngine(msg);
            //Register your routine to templateengine
            engine.RegisterRoutine("ToUpper", new TemplateRoutine(ToUpper));
            
            </code>
            [VB]
            <code>
            'Defined a function for processing your field(s)
            Public Function ToPropertyName(ByVal args As Object()) As Object
            	Dim name As String = CStr(args(0))
            	Return name.ToUpper()
            End Function
            'Set up the template  ...
            msg.TextBody = "Dear #FirstName#,#ToUpper(LastName)#  Hello #LastName#. Thanks"
            '...
            TemplateEngine engine = new TemplateEngine(msg);
            'Register your routine to templateengine
            engine.RegisterRoutine("ToUpper", new TemplateRoutine(ToUpper));
            '...
            </code>
            </example>
            <param name="name">The name of the funciton.</param>
            <param name="routine">Delegate processing the data</param>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.IsRoutineRegistered(System.String)">
            <summary>
            Determines if a name of template routine is registered in the template engine.
            </summary>
            <param name="name">The name that is used to register the template routine.</param>
            <returns>Returns True if the name is registered in the template engine, otherwise returns False.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.UnregisterRoutine(System.String)">
            <summary>
            Unregister the template routine from the template engine by name.
            </summary>
            <param name="name">The name that is used to unregister the template routine.</param>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.Merge(Aspose.Network.Mail.MailMessage)">
             <summary>
             Merge a source MailMessage with the template
             </summary>
             <example>
             The following exmaple demonstrates how to create e-mail message.
             [C#]
             <code>
                //create template messages
                MailMessage template = new MailMessage();
                template.From = "sale@aspose.com";
                //add template field for HtmlBody and with signature.
                template.HtmlBody = "#HtmlBody#&lt;br&gt;&lt;br&gt;John Smith&lt;br&gt;Product Lead&lt;br&gt;Aspose Ltd.&lt;br&gt;";
            
                //create E-Mail message
                MailMessage message = new MailMessage();
                message.To = "Nancy.Davolio&lt;Nancy@somedomain.com&gt;";
                message.HtmlBody = "Hello, Nancy,&lt;br&gt;&lt;br&gt;Nice to see you.";
            
                //create template engine
                TemplateEngine engine = new TemplateEngine(template);
             
                //merge the message with the template
                MailMessage result = engine.Merge(message);
                
                result.Save(@"merge.eml");
             </code>
             [VB.NET]
             <code>
                'create template messages
                Dim template As MailMessage =  New MailMessage() 
                template.From = "sale@aspose.com"
                'add template field for HtmlBody and with signature.
                template.HtmlBody = "#HtmlBody#&lt;br&gt;&lt;br&gt;John Smith&lt;br&gt;Product Lead&lt;br&gt;Aspose Ltd.&lt;br&gt;"
            
                'create E-Mail message
                Dim message As MailMessage =  New MailMessage() 
                message.To ="Nancy.Davolio&lt;Nancy@somedomain.com&gt;"
                message.HtmlBody = "Hello, Nancy,&lt;br&gt;&lt;br&gt;Nice to see you."
            
                'create template engine
                Dim engine As TemplateEngine =  New TemplateEngine(template) 
            
                'merge the message with the template
                result.Save(@"merge.eml")
             </code>
             </example>
             <param name="source">The source MailMessage</param>
             <returns>The MailMessage merged with template</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.Instantiate(System.Data.DataTable,System.Data.Common.DataColumnMappingCollection)">
            <summary>
            Instantiates the template with a DataTable as datasource.
            </summary>
            <param name="table">The DataTable, which contains the source data to instantiate the template.</param>
            <param name="mappings">The DataColumnMappingCollection, which represents the mapping between the source column in DataTable and target field in template</param>
            <returns>A MailMessageCollection that generated by the template and the datasource.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.InstantiateAsync(System.Data.DataTable,System.Data.Common.DataColumnMappingCollection,System.Object)">
            <summary>
            Asynchronously instantiates the template with a DataTable as datasource.
            </summary>
            <param name="table">The DataTable, which contains the source data to instantiate the template.</param>
            <param name="mappings">The DataColumnMappingCollection, which represents the mapping between the source column in DataTable and target field in template</param>
            <param name="userToken">The user token for the asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.Instantiate(System.Data.DataTable)">
            <summary>
            Instantiates the template with a DataTable as datasource.
            </summary>
            <param name="table">The DataTable, which contains the source data to instantiate the template.</param>
            <returns>A MailMessageCollection that generated by the template and the datasource.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.InstantiateAsync(System.Data.DataTable,System.Object)">
            <summary>
            Asynchronously instantiates the template with a DataTable as datasource.
            </summary>
            <param name="table">The DataTable, which contains the source data to instantiate the template.</param>
            <param name="userToken">The user token for the asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.Instantiate(System.Data.DataRowCollection,System.Data.Common.DataColumnMappingCollection)">
            <summary>
            Instantiates the template with a DataRowCollection as datasource.
            </summary>
            <param name="rows">The DataRowCollection, which contains the source data to instantiate the template.</param>
            <param name="mappings">The DataColumnMappingCollection, which represents the mapping between the source column in data source and target field in template</param>
            <returns>A MailMessageCollection that generated by the template and the datasource.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.InstantiateAsync(System.Data.DataRowCollection,System.Object)">
            <summary>
            Instantiates the template with a DataRowCollection as datasource.
            </summary>
            <param name="rows">The DataRowCollection, which contains the source data to instantiate the template.</param>
            <param name="userToken">The user token for the asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.InstantiateAsync(System.Data.DataRowCollection,System.Data.Common.DataColumnMappingCollection,System.Object)">
            <summary>
            Instantiates the template with a DataRowCollection as datasource.
            </summary>
            <param name="rows">The DataRowCollection, which contains the source data to instantiate the template.</param>
            <param name="mappings">The DataColumnMappingCollection, which represents the mapping between the source column in data source and target field in template</param>
            <param name="userToken">The user token for the asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.Instantiate(System.Data.DataRowCollection)">
            <summary>
            Instantiates the template with a DataRowCollection as datasource.
            </summary>
            <param name="rows">The DataRowCollection, which contains the source data to instantiate the template.</param>
            <returns>A MailMessageCollection that generated by the template and the datasource.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.Instantiate(System.Data.IDataReader)">
            <summary>
            Instantiates the template with a IDataReader as datasource.
            </summary>
            <param name="reader">The IDataReader, which will provide the source data to instantiate the template.</param>
            <returns>A MailMessageCollection that generated by the template and the datasource.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.InstantiateAsync(System.Data.IDataReader,System.Data.Common.DataColumnMappingCollection,System.Object)">
            <summary>
            Instantiates the template with a IDataReader as datasource.
            </summary>
            <param name="reader">The IDataReader, which will provide the source data to instantiate the template.</param>
            <param name="mappings">The DataColumnMappingCollection, which represents the mapping between the source column in data source and target field in template</param>
            <param name="userToken">The user token for the asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.Instantiate(System.Data.IDataReader,System.Data.Common.DataColumnMappingCollection)">
            <summary>
            Instantiates the template with a IDataReader as datasource.
            </summary>
            <param name="reader">The IDataReader, which will provide the source data to instantiate the template.</param>
            <param name="mappings">The DataColumnMappingCollection, which represents the mapping between the source column in data source and target field in template</param>
            <returns>A MailMessageCollection that generated by the template and the datasource.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.InstantiateAsync(System.Data.IDataReader,System.Object)">
            <summary>
            Instantiates the template with a IDataReader as datasource.
            </summary>
            <param name="reader">The IDataReader, which will provide the source data to instantiate the template.</param>
            <param name="userToken">The user token for the asynchronous operation.</param>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.EndInstantiate(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous instantiation operation.
            </summary>
            <param name="asyncResult">The IAsyncResult that identifies the asynchronous receive operation to finish, and from which to retrieve an end result.</param>
            <returns>The MailMessage collection generated by the instantiation operation.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.BeginInstantiate(System.Data.DataTable,System.Data.Common.DataColumnMappingCollection,System.AsyncCallback,System.Object)">
             <summary>
             Initiates an asynchronous Instantiate operation with a DataTable as datasource.
             </summary>
             <param name="table">The DataTable, which contains the source data to instantiate the template.</param>
             <param name="mappings">The DataColumnMappingCollection, which represents the mapping between the source column in DataTable and target field in template</param>
             <param name="callback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
             <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.BeginInstantiate(System.Data.DataTable,System.AsyncCallback,System.Object)">
             <summary>
             Initiates an asynchronous Instantiate operation with a DataTable as datasource.
             </summary>
             <param name="table">The DataTable, which contains the source data to instantiate the template.</param>
             <param name="callback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
             <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.BeginInstantiate(System.Data.DataRowCollection,System.Data.Common.DataColumnMappingCollection,System.AsyncCallback,System.Object)">
             <summary>
             Initiates an asynchronous Instantiate operation with a DataRowCollection as datasource.
             </summary>
             <param name="rows">The DataRowCollection, which contains the source data to instantiate the template.</param>
             <param name="mappings">The DataColumnMappingCollection, which represents the mapping between the source column in data source and target field in template</param>
             <param name="callback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
             <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.BeginInstantiate(System.Data.DataRowCollection,System.AsyncCallback,System.Object)">
             <summary>
             Initiates an asynchronous Instantiate operation with a DataRowCollection as datasource.
             </summary>
             <param name="rows">The DataRowCollection, which contains the source data to instantiate the template.</param>
             <param name="callback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
             <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.BeginInstantiate(System.Data.IDataReader,System.Data.Common.DataColumnMappingCollection,System.AsyncCallback,System.Object)">
             <summary>
             Initiates an asynchronous Instantiate operation with a IDataReader as datasource.
             </summary>
             <param name="reader">The IDataReader, which will provide the source data to instantiate the template.</param>
             <param name="mappings">The DataColumnMappingCollection, which represents the mapping between the source column in data source and target field in template</param>
             <param name="callback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
             <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.TemplateEngine.BeginInstantiate(System.Data.IDataReader,System.AsyncCallback,System.Object)">
             <summary>
             Initiates an asynchronous Instantiate operation with a IDataReader as datasource.
             </summary>
             <param name="reader">The IDataReader, which will provide the source data to instantiate the template.</param>
             <param name="callback">The AsyncCallback that will receive the notification of the asynchronous operation completion. </param>
             <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="P:Aspose.Network.Mail.TemplateEngine.TemplateMessage">
            <summary>
            Gets the template message.
            </summary>
        </member>
        <member name="E:Aspose.Network.Mail.TemplateEngine.InstantiateCompleted">
            <summary>
            Occurs if the an asynchronous Instantiate operation is completed.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.MessageFormat">
            <summary>
            Represents the mail message format.It can be in eml,msg or mhtml format.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MessageFormat.Equals(System.Object)">
            <summary>
            Equalses the specified o.
            </summary>
            <param name="o">The o.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.MessageFormat.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.Mail.MessageFormat.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.Mail.MessageFormat.Eml">
            <summary>
            Gets the eml.
            </summary>
            <value>The eml.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MessageFormat.Mht">
            <summary>
            Gets the MHT.
            </summary>
            <value>The MHT.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MessageFormat.Msg">
            <summary>
            Gets the MSG.
            </summary>
            <value>The MSG.</value>
        </member>
        <member name="T:Aspose.Network.Mail.TnefAttachmentReader">
            <summary>
            Decodes <a href="http://msdn.microsoft.com/library/en-us/mapi/html/ca148ec3-8586-4c74-8ff8-cd542256e385.asp">ms-tnef</a> streams (those winmail.dat attachments). 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.TnefAttachmentReader.Attachments">
            <summary>
            decoded attachments
            </summary>
            <returns>attachment array</returns>
        </member>
        <member name="T:Aspose.Network.Mail.MailException">
            <summary>
            Represents the exception that is thrown when the mail message processing.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailException"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="M:Aspose.Network.Mail.MailException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="T:Aspose.Network.Mail.LinkedResource">
            <summary>
            Represents an embedded external resource in an email attachment, such as an image in an HTML attachment.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.AttachmentBase">
            <summary>
            Base class that represents an email attachment. Classes Attachment, Alternateview, and LinkedResource derive from this class
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.AttachmentBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.AttachmentBase"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.AttachmentBase.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.AttachmentBase"/> class.
            </summary>
            <param name="contentStream">The content stream.</param>
        </member>
        <member name="P:Aspose.Network.Mail.AttachmentBase.ContentLocation">
            <summary>
            Gets or sets the content location.
            </summary>
            <value>The content location.</value>
        </member>
        <member name="P:Aspose.Network.Mail.AttachmentBase.MediaType">
            <summary>
            Gets the type of the media.
            </summary>
            <value>The type of the media.</value>
        </member>
        <member name="P:Aspose.Network.Mail.AttachmentBase.CharSet">
            <summary>
            Gets the char set.
            </summary>
            <value>The char set.</value>
        </member>
        <member name="P:Aspose.Network.Mail.AttachmentBase.TransferEncoding">
            <summary>
            Gets or sets the transfer encoding.
            </summary>
            <value>The transfer encoding.</value>
        </member>
        <member name="P:Aspose.Network.Mail.AttachmentBase.ContentId">
            <summary>
            Gets or sets the content id.
            </summary>
            <value>The content id.</value>
        </member>
        <member name="P:Aspose.Network.Mail.AttachmentBase.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.LinkedResource"/> class.
            </summary>
            <param name="contentStream">The content stream.</param>
            <param name="mediaType">Type of the media.</param>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.LinkedResource"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="mediaType">Type of the media.</param>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.LinkedResource"/> class.
            </summary>
            <param name="contentStream">The content stream.</param>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.LinkedResource"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.#ctor(System.IO.Stream,Aspose.Network.Mime.ContentType)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.LinkedResource"/> class.
            </summary>
            <param name="contentStream">The content stream.</param>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.CreateLinkedResourceFromString(System.String)">
            <summary>
            Creates the linked resource from string.
            </summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.CreateLinkedResourceFromString(System.String,Aspose.Network.Mime.ContentType)">
            <summary>
            Creates the linked resource from string.
            </summary>
            <param name="content">The content.</param>
            <param name="contentType">Type of the content.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.CreateLinkedResourceFromString(System.String,System.Text.Encoding,System.String)">
            <summary>
            Creates the linked resource from string.
            </summary>
            <param name="content">The content.</param>
            <param name="contentEncoding">The content encoding.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.Save(System.IO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.Save(System.String)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResource.SaveRawContent(System.IO.Stream)">
            <summary>
            Saves the content of the raw.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Aspose.Network.Mail.LinkedResource.ContentLink">
            <summary>
            Gets or sets the content link.
            </summary>
            <value>The content link.</value>
        </member>
        <member name="P:Aspose.Network.Mail.LinkedResource.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Aspose.Network.Mail.Calendaring.RecurrencePattern">
            <summary>
            Represents the recurrence pattern.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.RecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.RecurrencePattern"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.RecurrencePattern.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.RecurrencePattern"/> class.
            </summary>
            <param name="endDate">The end date.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.RecurrencePattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.RecurrencePattern"/> class.
            </summary>
            <param name="occurs">The occurs.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.RecurrencePattern.#ctor(System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.RecurrencePattern"/> class.
            </summary>
            <param name="endDate">The end date.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.RecurrencePattern.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.RecurrencePattern"/> class.
            </summary>
            <param name="occurs">The occurs.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.RecurrencePattern.icalendarday0">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.RecurrencePattern._interval">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.RecurrencePattern._occurs">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.RecurrencePattern._endDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.RecurrencePattern.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.RecurrencePattern.Occurs">
            <summary>
            Gets or sets the occurs.
            </summary>
            <value>The occurs.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.RecurrencePattern.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>The end date.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.RecurrencePattern.WeekStart">
            <summary>
            Gets or sets the week start.
            </summary>
            <value>The week start.</value>
        </member>
        <member name="T:Aspose.Network.Imap.ImapFolderInfo">
            <summary>
            Represents an IMAP folder. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapFolderInfo.GetNextUniqueId">
            <summary>
            Gets the unique ID to be assigned to a next message that arrives into this folder
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.ImapFolderInfo.InBox">
            <summary>
            Gets inbox name.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfo.Delimiter">
            <summary>
            Gets a string that is used to delimit levels of hieararchy under this folder. It usually contains either '/' or '.'. 
            This value is only set for folders returned by a call to GetFolderList methods. For GetFolderInfo method and CurrentFolder property, this will throw an exception
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfo.Selectable">
            <summary>
            Gets a value indicating whether it is possible to select this folder.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfo.Marked">
            <summary>
            Gets a value indicating whether it is marked this folder.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfo.Name">
            <summary>
            Gets the name of the folder. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfo.NewMessageCount">
            <summary>
            Gets the number of the new messages.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfo.ReadOnly">
            <summary>
            Gets a value indicating whether the folder is read-only. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfo.RecentMessageCount">
            <summary>
            Gets the number of messages that arrived recently.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfo.TotalMessageCount">
            <summary>
            Gets the number of messages in the folder. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfo.ValidityId">
            <summary>
            Gets the validity ID of the mailbox. 
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.XProperty">
            <summary>
            Defines an extension property.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.XProperty.#ctor(System.String)">
            <summary>
            Constructs an uninitialised non-standard property.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.XProperty.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.XProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.XProperty.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.XProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.XProperty.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.XProperty.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom">
            <summary> Defines a TZOFFSETFROM iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom.#ctor(Aspose.Network.iCalendar.ObjectModel.UtcOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom"/> class.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.UtcOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetFrom.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzId">
            <summary> Defines a TZID iCalendar component property.
            
            <pre>
            4.8.3.1 Time Zone Identifier
            
            Property Name: TZID
            
            Purpose: This property specifies the text value that uniquely
            identifies the &quot;VTIMEZONE&quot; calendar component.
            
            Value Type: TEXT
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: This property MUST be specified in a &quot;VTIMEZONE&quot;
            calendar component.
            
            Description: This is the label by which a time zone calendar
            component is referenced by any iCalendar properties whose data type
            is either DATE-TIME or TIME and not intended to specify a UTC or a
            &quot;floating&quot; time. The presence of the SOLIDUS character (US-ASCII
            decimal 47) as a prefix, indicates that this TZID represents an
            unique ID in a globally defined time zone registry (when such
            registry is defined).
            
            Note: This document does not define a naming convention for time
            zone identifiers. Implementers may want to use the naming
            conventions defined in existing time zone specifications such as
            the public-domain Olson database [TZ]. The specification of
            globally unique time zone identifiers is not addressed by this
            document and is left for future study.
            
            Format Definition: This property is defined by the following
            notation:
            
            tzid       = &quot;TZID&quot; tzidpropparam &quot;:&quot; [tzidprefix] text CRLF
            
            tzidpropparam      = *(&quot;;&quot; xparam)
            
            ;tzidprefix        = &quot;/&quot;
            ; Defined previously. Just listed here for reader convenience.
            
            Example: The following are examples of non-globally unique time zone
            identifiers:
            
            TZID:US-Eastern
            
            TZID:California-Los_Angeles
            
            The following is an example of a fictitious globally unique time zone
            identifier:
            
            TZID:/US-New_York-New_York
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzId.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzId"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzId.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzId"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzId.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzId.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger">
            <summary> Defines a TRIGGER iCalendar component property.
            
            <pre>
            4.8.6.3 Trigger
            
            Property Name: TRIGGER
            
            Purpose: This property specifies when an alarm will trigger.
            
            Value Type: The default value type is DURATION. The value type can be
            set to a DATE-TIME value type, in which case the value MUST specify a
            UTC formatted DATE-TIME value.
            
            Property Parameters: Non-standard, value data type, time zone
            identifier or trigger relationship property parameters can be
            specified on this property. The trigger relationship property
            parameter MUST only be specified when the value type is DURATION.
            
            Conformance: This property MUST be specified in the &quot;VALARM&quot; calendar
            component.
            
            Description: Within the &quot;VALARM&quot; calendar component, this property
            defines when the alarm will trigger. The default value type is
            DURATION, specifying a relative time for the trigger of the alarm.
            The default duration is relative to the start of an event or to-do
            that the alarm is associated with. The duration can be explicitly set
            
            to trigger from either the end or the start of the associated event
            or to-do with the &quot;RELATED&quot; parameter. A value of START will set the
            alarm to trigger off the start of the associated event or to-do. A
            value of END will set the alarm to trigger off the end of the
            associated event or to-do.
            
            Either a positive or negative duration may be specified for the
            &quot;TRIGGER&quot; property. An alarm with a positive duration is triggered
            after the associated start or end of the event or to-do. An alarm
            with a negative duration is triggered before the associated start or
            end of the event or to-do.
            
            The &quot;RELATED&quot; property parameter is not valid if the value type of
            the property is set to DATE-TIME (i.e., for an absolute date and time
            alarm trigger). If a value type of DATE-TIME is specified, then the
            property value MUST be specified in the UTC time format. If an
            absolute trigger is specified on an alarm for a recurring event or
            to-do, then the alarm will only trigger for the specified absolute
            date/time, along with any specified repeating instances.
            
            If the trigger is set relative to START, then the &quot;DTSTART&quot; property
            MUST be present in the associated &quot;VEVENT&quot; or &quot;VTODO&quot; calendar
            component. If an alarm is specified for an event with the trigger set
            relative to the END, then the &quot;DTEND&quot; property or the &quot;DSTART&quot; and
            &quot;DURATION' properties MUST be present in the associated &quot;VEVENT&quot;
            calendar component. If the alarm is specified for a to-do with a
            trigger set relative to the END, then either the &quot;DUE&quot; property or
            the &quot;DSTART&quot; and &quot;DURATION' properties MUST be present in the
            associated &quot;VTODO&quot; calendar component.
            
            Alarms specified in an event or to-do which is defined in terms of a
            DATE value type will be triggered relative to 00:00:00 UTC on the
            specified date. For example, if &quot;DTSTART:19980205, then the duration
            trigger will be relative to19980205T000000Z.
            
            Format Definition: The property is defined by the following notation:
            
            trigger    = &quot;TRIGGER&quot; (trigrel / trigabs)
            
            trigrel    = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; &quot;VALUE&quot; &quot;=&quot; &quot;DURATION&quot;) /
            (&quot;;&quot; trigrelparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            ) &quot;:&quot;  dur-value
            
            trigabs    = 1*(
            
            ; the following is REQUIRED,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; &quot;VALUE&quot; &quot;=&quot; &quot;DATE-TIME&quot;) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            
            ) &quot;:&quot; date-time
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.#ctor(Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger"/> class.
            </summary>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger"/> class.
            </summary>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.setDateTime(Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <summary>
            Sets the date time.
            </summary>
            <param name="dateTime">The dateTime to set.</param>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Trigger.Duration">
            <summary>
            Gets or sets the duration.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Region">
            <summary> Defines a REGION iCalendar component property.</summary>
            <author> 
            </author>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Region.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Region.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Region"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Region.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Region"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Region.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Region.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart">
            <summary> Defines a DTSTART iCalendar component property.
            
            <pre>
            4.8.2.4 Date/Time Start
            
            Property Name: DTSTART
            
            Purpose: This property specifies when the calendar component begins.
            
            Value Type: The default value type is DATE-TIME. The time value MUST
            be one of the forms defined for the DATE-TIME value type. The value
            type can be set to a DATE value type.
            
            Property Parameters: Non-standard, value data type, time zone
            identifier property parameters can be specified on this property.
            
            Conformance: This property can be specified in the &quot;VEVENT&quot;, &quot;VTODO&quot;,
            &quot;VFREEBUSY&quot;, or &quot;VTIMEZONE&quot; calendar components.
            
            Description: Within the &quot;VEVENT&quot; calendar component, this property
            defines the start date and time for the event. The property is
            REQUIRED in &quot;VEVENT&quot; calendar components. Events can have a start
            date/time but no end date/time. In that case, the event does not take
            up any time.
            
            Within the &quot;VFREEBUSY&quot; calendar component, this property defines the
            start date and time for the free or busy time information. The time
            MUST be specified in UTC time.
            
            Within the &quot;VTIMEZONE&quot; calendar component, this property defines the
            effective start date and time for a time zone specification. This
            property is REQUIRED within each STANDARD and DAYLIGHT part included
            in &quot;VTIMEZONE&quot; calendar components and MUST be specified as a local
            DATE-TIME without the &quot;TZID&quot; property parameter.
            
            Format Definition: The property is defined by the following notation:
            
            dtstart    = &quot;DTSTART&quot; dtstparam &quot;:&quot; dtstval CRLF
            
            dtstparam  = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; &quot;VALUE&quot; &quot;=&quot; (&quot;DATE-TIME&quot; / &quot;DATE&quot;)) /
            (&quot;;&quot; tzidparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            *(&quot;;&quot; xparam)
            
            )
            
            
            
            dtstval    = date-time / date
            ;Value MUST match value type
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart.#ctor">
            <summary>
            Default constructor. The time value is initialised to the time of instantiation.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart.#ctor(Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new DTSTART property initialised with the specified timezone.
            </summary>
            <param name="timezone">initial timezone</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new DTSTART property initialised with the specified timezone and value.
            </summary>
            <param name="value">a string representation of a DTSTART value</param>
            <param name="timezone">initial timezone</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
            <throws>  ParseException where the specified value string is not a valid date-time/date representation </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart.#ctor(Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart.#ctor(Aspose.Network.iCalendar.ObjectModel.Date,System.Boolean)">
            <summary>
            Constructs a new DtStart with the specified time.
            </summary>
            <param name="time">the time of the DtStart</param>
            <param name="utc">specifies whether time is UTC</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtStart.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="date">The date.</param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Vvenue">
            <summary> Defines a Vvenue parameter.</summary>
            <author> 
            </author>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Vvenue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Vvenue"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Vvenue.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Windows.Forms.FileDropTargetPanel">
            <summary>
            Represents the file drop target.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Windows.Forms.FileDropTargetPanel"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetPanel.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetPanel.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetPanel.OnFileDragDrop(Aspose.Windows.Forms.FileDragEventArgs)">
            <summary>
            Raises the <see cref="E:FileDragDrop"/> event.
            </summary>
            <param name="e">The <see cref="T:Aspose.Windows.Forms.FileDragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetPanel.OnFileDragEnter(Aspose.Windows.Forms.FileDragEventArgs)">
            <summary>
            Raises the <see cref="E:FileDragEnter"/> event.
            </summary>
            <param name="e">The <see cref="T:Aspose.Windows.Forms.FileDragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetPanel.OnFileDragOver(Aspose.Windows.Forms.FileDragEventArgs)">
            <summary>
            Raises the <see cref="E:FileDragOver"/> event.
            </summary>
            <param name="e">The <see cref="T:Aspose.Windows.Forms.FileDragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetPanel.OnFileDragLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:FileDragLeave"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Aspose.Windows.Forms.FileDropTargetPanel.DropTargetManager">
            <summary>
            Gets or sets the drop target manager.
            </summary>
            <value>The drop target manager.</value>
        </member>
        <member name="E:Aspose.Windows.Forms.FileDropTargetPanel.FileDragEnter">
            <summary>
            Occurs when [file drag enter].
            </summary>
        </member>
        <member name="E:Aspose.Windows.Forms.FileDropTargetPanel.FileDragOver">
            <summary>
            Occurs when [file drag over].
            </summary>
        </member>
        <member name="E:Aspose.Windows.Forms.FileDropTargetPanel.FileDragDrop">
            <summary>
            Occurs when [file drag drop].
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.FileDropTargetManager">
            <summary>
            Represents the manager class for file drop target.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetManager.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Windows.Forms.FileDropTargetManager"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetManager.EnsureRegistered(System.Windows.Forms.IDropTarget)">
            <summary>
            Ensures the registered.
            </summary>
            <param name="dropTarget">The drop target.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDropTargetManager.EnsureUnRegistered(System.Windows.Forms.IDropTarget)">
            <summary>
            Ensures the un registered.
            </summary>
            <param name="dropTarget">The drop target.</param>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpFailedRecipientsException">
            <summary>
            The exception that is thrown when e-mail is sent using an SmtpClient and cannot be delivered to all recipients.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpFailedRecipientException">
            <summary>
            Represents the exception that is thrown when the email client is not able to complete a Send operation to a particular recipient.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpFailedRecipientException.#ctor">
            <summary>
            Initializes an empty instance of the SmtpFailedRecipientException class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpFailedRecipientException.#ctor(System.String)">
            <summary>
            Initializes an instance of the SmtpFailedRecipientException class with specified error message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpFailedRecipientException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an instance of the SmtpFailedRecipientException class with specified message and inner exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpFailedRecipientException.FailedRecipient">
            <summary>
            Gets the receipient.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpFailedRecipientException.Response">
            <summary>
            Gets the response.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpFailedRecipientsException.#ctor">
            <summary>
            Initializes an empty instance of the SmtpFailedRecipientsException class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpFailedRecipientsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SmtpFailedRecipientsException class with the specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpFailedRecipientsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SmtpFailedRecipientsException class with the specified message and inner Exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpFailedRecipientsException.InnerExceptions">
            <summary>
            Gets the inner exceptions.
            </summary>
        </member>
        <member name="T:Aspose.Network.Proxy.ProxyType">
            <summary>
            Represents the type of proxy.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxyType.None">
            <summary>
            Direct connection without proxying
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxyType.Socks4">
            <summary>
            Socks 4 Protocol compatible proxy.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxyType.Socks4A">
            <summary>
            Socks 4A Protocol compatible proxy.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxyType.Socks5">
            <summary>
            Socks 5 Protocol compatible proxy.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxyType.HttpConnect">
            <summary>
            Http proxy.
            </summary>
        </member>
        <member name="T:Aspose.Network.Proxy.ConnectCompletedEventHandler">
            <summary>
            Represents the method that will handle the ConnectCompleted event of a ProxyClient instance.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.CommandCompletedEventArgs">
            <summary>
            Represents the event for  completed.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiPropertyType">
            <summary>
            Represents the data type of MapiProperty data.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_SHORT">
            <summary>
            Signed 16-bit integer. This property type is the same as PT_SHORT and the OLE type VT_I2.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_LONG">
            <summary>
            Signed or unsigned 32-bit integer. This property type is the same as PT_I4 and the OLE type VT_I4.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_ERROR">
            <summary>
            SCODE value; 32-bit unsigned integer. This property type is the same as the OLE type VT_ERROR.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_BOOLEAN">
            <summary>
            16-bit Boolean value where zero equals FALSE and non-zero equals TRUE. This property type is the same as the OLE type VT_BOOL.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_OBJECT">
            <summary>
            Pointer to an object that implements the IUnknown interface. This property type is similar to several OLE types such as VT_UNKNOWN. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_LONGLONG">
            <summary>
            Signed or unsigned 64-bit integer. This property type is the same as PT_I8 and the OLE type VT_I8.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_STRING8">
            <summary>
            Null-terminated 8-bit character string. This property type is the same as the OLE type VT_LPSTR.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_UNICODE">
            <summary>
            PT_UNICODE
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_SYSTIME">
            <summary>
            64-bit integer data and time value in the form of a FILETIME structure. This property type is the same as the OLE type VT_FILETIME.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_CLSID">
            <summary>
            CLSID structure value. This property type is the same as the OLE type VT_CLSID.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_SRESTRICTION">
            <summary>
            PT_SRESTRICTION
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_ACTIONS">
            <summary>
            PT_ACTIONS
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_BINARY">
            <summary>
            SBinary structure value, a counted byte array.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyType.PT_MV_xxx">
            <summary>
            PT_MV_xxx
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiProperty">
            <summary>
            Represents the mapi property.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Outlook.MapiProperty"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.#ctor(System.String,System.Int64,System.Int64,System.Byte[])">
            <summary>
            Initializes a new instance of the MapiProperty class.
            </summary>
            <param name="name">The name.</param>
            <param name="tag">The tag key of the property.</param>
            <param name="signed">Indicates the data is signed or not.</param>
            <param name="data">The binary data of the property.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.#ctor(System.Int64,System.Int64,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Outlook.MapiProperty"/> class.
            </summary>
            <param name="tag">The tag.</param>
            <param name="signed">The signed.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.#ctor(System.Int64,System.Byte[])">
            <summary>
            Initializes a new instance of the MapiProperty class.
            </summary>
            <param name="tag">The tag key of the property.</param>
            <param name="data">The binary data of the property.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.GetLong">
            <summary>
            Gets the first 8 bytes of the binary data as long.
            </summary>
            <returns>The long value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.GetInt32">
            <summary>
            Gets the first 4 bytes of the binary data as int32.
            </summary>
            <returns>The int32 value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.GetShort">
            <summary>
            Gets the first 2 bytes of the binary data as short.
            </summary>
            <returns>The short value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.GetBoolean">
            <summary>
            Gets the first bytes of the binary data as boolean.
            </summary>
            <returns>The boolean value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.GetDateTime">
            <summary>
            Gets the first bytes of the binary data as datetime.
            </summary>
            <returns>The datetime value.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.GetString(System.Int32)">
            <summary>
            Gets the binary data as string using the specified code page.
            </summary>
            <param name="codepage">The code page.</param>
            <returns>A string contains the binary data.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.GetString">
            <summary>
            Gets the binary data as string.
            </summary>
            <returns>A string contains the binary data.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiProperty.PropertyTagName">
            <summary>
            Gets the PropertyName.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiProperty.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiProperty.Identifier">
            <summary>
            Gets the indifier.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiProperty.Tag">
            <summary>
            Gets the tag.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiProperty.DataType">
            <summary>
            Gets the data type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiProperty.Data">
            <summary>
            Gets the binary data.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiProperty.IsSigned">
            <summary>
            Indicates whether the binary data is signed.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiPropertyCollection">
            <summary>
            Represents the collection of MapiProperty items.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.#ctor">
            <summary>
            Creates a new instance of class MapiProperty.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.Add(System.Int64,Aspose.Network.Outlook.MapiProperty)">
            <summary>
            adds a MapiProperty item with specified tag.
            </summary>
            <param name="tag"></param>
            <param name="value"></param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the specified key and value to the collection.
            </summary>
            <param name="tag">The tag key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.Clear">
            <summary>
            Removes all of the elements from the collection.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.Contains(System.Object)">
            <summary>
            Determines whether the collection contains the specified tag.
            </summary>
            <param name="tag">The tag.</param>
            <returns>true if the collection contains an element with the specified tag; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.Contains(System.Int64)">
            <summary>
            Determines whether the collection contains the specified tag.
            </summary>
            <param name="tag">The tag.</param>
            <returns>true if the collection contains an element with the specified tag; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.GetEnumerator">
            <summary>
            Returns an System.Collections.IDictionaryEnumerator that iterates through the collection.
            </summary>
            <returns>An System.Collections.IDictionaryEnumerator for the collection.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the collection.
            </summary>
            <param name="tag">The key tag of the element to remove.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.Remove(System.Int64)">
            <summary>
            Removes the element with the specified key from the collection.
            </summary>
            <param name="tag">The key tag of the element to remove.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyCollection.CopyTo(System.Array,System.Int32)">
            <summary>
             Copies the collection elements to a one-dimensional System.Array instance at the specified index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the System.Collections.DictionaryEntry objects copied from the collection. The System.Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read only.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyCollection.Keys">
            <summary>
            Gets a System.Collections.ICollection containing the keys in the collection.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyCollection.Values">
            <summary>
            Gets an System.Collections.ICollection containing the values in the collection.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyCollection.Item(System.Object)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="tag">The tag key whose value to get or set.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyCollection.Item(System.Int64)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="tag">The tag key whose value to get or set.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyCollection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiPropertyCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.FileAccessViolationException">
            <summary>
            This exception wile be thrown when the file open and locked by another caller.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.FileAccessViolationException.#ctor">
            <summary>
            Initializes a new instance of the class with default error message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.FileAccessViolationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class with a specified error message.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.FileAccessViolationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the Exception class with
            a specified error message and a reference to the inner
            exception that is the cause of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception.
            If the innerException parameter is not a NULL reference
            (Nothing in Visual Basic), the current exception is raised
            in a catch block that handles the inner exception.
            </param>
        </member>
        <member name="T:Aspose.Network.Dns.QueryType">
            <summary>
            Specifies the type of the <seealso cref="T:Aspose.Network.Dns.Question">Question</seealso> to query. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.A">
            <summary>
            A host address query.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.A6">
            <summary>
            A 128 bit IPv6 address query.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.AAAA">
            <summary>
            A single 128 bit IPv6 address query. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.AFSDB">
            <summary>
            An AFS database location query. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.ALL">
            <summary>
            All types of resource records available.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.CNAME">
            <summary>
            Canonical name for an alias. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.GPOS">
            <summary>
            Geographical location. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.HINFO">
            <summary>
            Host information. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.ISDN">
            <summary>
            ISDN address. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.KEY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.LOC">
            <summary>
            Location information. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.MB">
            <summary>
            Experimental. (Mail box domain name) 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.MD">
            <summary>
            Obsolete - Mail destination. Use MX instead. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.MF">
            <summary>
            Obsolete - Mail forwarder. Use MX instead. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.MG">
            <summary>
            Experimental. (Mail group member) 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.MINFO">
            <summary>
            Mail box or mail list information. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.MR">
            <summary>
            Experimental. (Mail rename domain member) 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.MX">
            <summary>
            Mail exchange server responsible for handling email addresses that belong to the domain in question. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.NS">
            <summary>
            Authoritative name server for the domain in question. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.NSAP">
            <summary>
            Network service access protocol. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.NSAPPTR">
            <summary>
            Pointer for network service access protocol similar to the PTR record for an IP address.  
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.NULL">
            <summary>
            Experimental. (Null) 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.NXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.PTR">
            <summary>
            Domain name pointer. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.PX">
            <summary>
            Pointer to X.400/Rfc822 mapping information. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.RP">
            <summary>
            Responsible person. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.RT">
            <summary>
            Route through. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.SIG">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.SOA">
            <summary>
            Start of Authority. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.SRV">
            <summary>
            Service record to specify the location of the server(s) for a specific protocol and domain.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.TXT">
            <summary>
            Text strings. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.UnKnown">
            <summary>
            Unknown query type. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.WKS">
            <summary>
            Well known service description. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryType.X25">
            <summary>
            X25 address. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.ContactMailMessageInterpretor">
            <summary>
            Represents a Contact message type interpretor.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MailMessageInterpretor">
            <summary>
            The base class for MailMessage interpretor. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.#ctor">
            <summary>
            Initializes a new instance of the MailMessageInterpretor class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.LoadMessageHeader(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Imports the headers of MIME protocol to a MailMessage from the MapiMessage instance.
            </summary>
            <param name="mailmessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.LoadMessageBodyHtml(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Creates the HtmlBody property of the MailMessage according to the specified MapiMessage instance.
            </summary>
            <param name="mailmessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.LoadMessageBodyText(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Creates the TextBody property of the MailMessage according to the specified MapiMessage instance.
            </summary>
            <param name="mailmessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.LoadMessageBody(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Creates the Body (HtmlBody and TextBody) of the MailMessage according to the specified MapiMessage instance.
            </summary>
            <param name="mailmessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.LoadAttachment(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Imports the attachments from to the specified MapiMessage instance.
            </summary>
            <param name="mailmessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.LoadEachAttachment(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiAttachment,System.Int32)">
            <summary>
            Imports each attachment from to the specified MapiMessage instance.
            </summary>
            <param name="mailmessage">The target MailMessage.</param>
            <param name="attach">The attach.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.Interpret(Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Imports the MapiMessage information into a MailMessage object.
            </summary>
            <param name="mapiMessage">The source MapiMessage.</param>
            <returns>The MailMessage.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.Save(Aspose.Network.Outlook.MapiMessage,System.IO.Stream,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Saves the specified MapiMessage to a Stream.
            </summary>
            <param name="mapiMessage">The source MapiMessage instance.</param>
            <param name="stream">The target stream</param>
            <param name="messageFormat">The message format.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.Save(Aspose.Network.Outlook.MapiMessage,System.IO.Stream,Aspose.Network.Mail.MessageFormat,Aspose.Network.Mail.IMessageFormatter)">
            <summary>
            Saves the specified MapiMessage to a Stream.
            </summary>
            <param name="mapiMessage">The source MapiMessage instance.</param>
            <param name="stream">The target stream</param>
            <param name="messageFormat">The message format.</param>
            <param name="formatter">The formatter.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MailMessageInterpretor.Clone">
            <summary>
            Creates a copy of the current instance.
            </summary>
            <returns>A copy of MailMessageInterpretor.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.ContactMailMessageInterpretor.#ctor">
            <summary>
            Initializes a new instance of the ContactMailMessageInterpretor class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.ContactMailMessageInterpretor.Clone">
            <summary>
            Creates a copy of the current instance.
            </summary>
            <returns>A ContactMailMessageInterpretor copy.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.ContactMailMessageInterpretor.LoadMessageBodyHtml(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Creates the HtmlBody property of the MailMessage according to the specified MapiMessage instance.
            </summary>
            <param name="mailMessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.ContactMailMessageInterpretor.Save(Aspose.Network.Outlook.MapiMessage,System.IO.Stream,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Saves the specified MapiMessage to a Stream.
            </summary>
            <param name="mapiMessage">The source MapiMessage instance.</param>
            <param name="stream">The target stream</param>
            <param name="messageFormat">The message format.</param>
        </member>
        <member name="P:Aspose.Network.Outlook.ContactMailMessageInterpretor.FormatTemplates">
            <summary>
            Gets the format templates.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.MediaTypeNames">
            <summary>
            Specifies the media type information for an e-mail message attachment. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.MediaTypeNames.Application">
            <summary>
            Specifies the kind of application data in an e-mail message attachment. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Application.Octet">
            <summary>
            Specifies that the MediaTypeNames.Application data is not interpreted. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Application.Pdf">
            <summary>
            Specifies that the MediaTypeNames.Application data is in Portable Document Format (PDF). 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Application.Rtf">
            <summary>
            Specifies that the MediaTypeNames.Application data is in Rich Text Format (RTF). 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Application.Soap">
            <summary>
            Specifies that the MediaTypeNames.Application data is a SOAP document. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Application.Zip">
            <summary>
            Specifies that the MediaTypeNames.Application data is compressed. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.MediaTypeNames.Image">
            <summary>
            Specifies the kind of image data in an e-mail message attachment. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Image.Gif">
            <summary>
            Specifies that the MediaTypeNames.Image data is in Graphics Interchange Format (GIF). 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Image.Jpeg">
            <summary>
            Specifies that the MediaTypeNames.Image data is in Joint Photographic Experts Group (JPEG) format. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Image.Png">
            <summary>
            Specifies that the MediaTypeNames.Image data is in Portable Network Graphics  Image File Format (PNG). 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Image.Tiff">
            <summary>
            Specifies that the MediaTypeNames.Image data is in Tagged Image File Format (TIFF). 
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.MediaTypeNames.Text">
            <summary>
            Specifies the kind of text data in an e-mail message attachment. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Text.Calendar">
            <summary>
            Specifies that the MediaTypeNames.Text data is in iCalendar format. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Text.Html">
            <summary>
            Specifies that the MediaTypeNames.Text data is in HTML format. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Text.Plain">
            <summary>
            Specifies that the MediaTypeNames.Text data is in plain text format. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Text.RichText">
            <summary>
            Specifies that the MediaTypeNames.Text data is in Rich Text Format (RTF). 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.MediaTypeNames.Text.Xml">
            <summary>
            Specifies that the MediaTypeNames.Text data is in XML format. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.MailMessage">
            <summary>
            Represents an e-mail message that can be sent using the SmtpClient class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailMessage"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.#ctor(Aspose.Network.Mail.MailAddress,Aspose.Network.Mail.MailAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailMessage"/> class by using the specified <see cref="T:Aspose.Network.Mail.MailAddress"/> class objects. 
            </summary>
            <param name="to">A <see cref="T:Aspose.Network.Mail.MailAddress"/> that contains the address of the recipient of the e-mail message.</param>
            <param name="from">A <see cref="T:Aspose.Network.Mail.MailAddress"/> that contains the address of the sender of the e-mail message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailMessage"/> class by using the specified String class objects. 
            </summary>
            <param name="from">A String that contains the address of the sender of the e-mail message.</param>
            <param name="to">A String that contains the addresses of the recipients of the e-mail message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailMessage"/> class. 
            </summary>
            <param name="from">A String that contains the address of the sender of the e-mail message.</param>
            <param name="to">A String that contains the address of the recipient of the e-mail message.</param>
            <param name="subject">A String that contains the subject text.</param>
            <param name="body"> String that contains the message body.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.AddAlternateView(Aspose.Network.Mail.AlternateView)">
            <summary>
            Adds the alternate view.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.AddAttachment(Aspose.Network.Mail.Attachment)">
            <summary>
            Adds the attachment.
            </summary>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Decrypt">
            <summary>
            Decrypts this instance.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Encrypt(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Encrypts the specified certificate.
            </summary>
            <param name="certificate">The certificate.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Encrypt(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Encrypts the specified certificates.
            </summary>
            <param name="certificates">The certificates.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Load(System.IO.Stream)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Load(System.String)">
            <summary>
            Loads the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.LoadAsMime(Aspose.Network.Mail.AttachmentBase)">
            <summary>
            Loads as MIME.
            </summary>
            <param name="attachment">The attachment.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Import(System.IO.Stream)">
            <summary>
            Imports the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.LoadContent(System.IO.Stream)">
            <summary>
            Loads the content.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Load(System.IO.Stream,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Load MailMessage from specifed Stream and Format
            </summary>
            <param name="stream">The Stream contains the mail content</param>
            <param name="format">Specified the mail message format,it can be in eml,mhtml or msg format.</param>
            <returns>MailMessage object.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Load(System.String,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Load message from specified file and store into a MailMessage object
            </summary>
            <param name="fileName">Specified the filename</param>
            <param name="format">Specified the mail message format,it can be in eml,mhtml or msg format.</param>
            <returns>The MailMessage object.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.RemoveSignature">
            <summary>
            Removes the signature.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Save(System.IO.Stream)">
            <summary>
            Saves the specified output.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Save(System.String)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Save(System.IO.TextWriter)">
            <summary>
            Saves this mail message to the specified TextWriter 
            </summary>
            <param name="writer">Specified the TextWriter where the mail message will be saved</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.op_Implicit(Aspose.Network.Mime.MimeMessage)~Aspose.Network.Mail.MailMessage">
            <summary>
            Performs an implicit conversion from <see cref="T:Aspose.Network.Mime.MimeMessage"/> to <see cref="T:Aspose.Network.Mail.MailMessage"/>.
            </summary>
            <param name="message">The message.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Save(System.IO.Stream,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Saves this mail message to the specified Stream in specified Format
            </summary>
            <param name="stream">Specified the Stream where the mail message will be saved</param>
            <param name="format">An MessagFormat that specifies the format of the saved mail message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Save(System.IO.Stream,Aspose.Network.Mail.MessageFormat,Aspose.Network.Mail.IMessageFormatter)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="format">The format.</param>
            <param name="formatter">The formatter.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Save(System.String,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Saves this mail message to the specified file in specified Format
            </summary>
            <param name="fileName">String that contains the name of the file to which to save this  mail message </param>
            <param name="format">An MessagFormat that specifies the format of the saved mail message.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Save(System.String,Aspose.Network.Mail.MessageFormat,Aspose.Network.Mail.IMessageFormatter)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="format">The format.</param>
            <param name="formatter">The formatter.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.AttachSignature(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Attaches the signature.
            </summary>
            <param name="certificate">The certificate.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.AttachSignature(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2[])">
            <summary>
            Attaches the signature.
            </summary>
            <param name="certificates">The certificates.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.AddCalendar(Aspose.Network.Mail.Calendar)">
            <summary>
            Add a calendar to this E-Mail message
            </summary>
            <param name="calendar">The specified <see cref="T:Aspose.Network.Mail.Calendar">calendar</see> object to be added.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.AlternateViews">
            <summary>
            Gets the attachment collection used to store alternate forms of the message body.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.Attachments">
             <summary>
            Gets the attachment collection used to store data attached to this e-mail message.
             </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.Bcc">
            <summary>
            Gets the address collection that contains the blind carbon copy (BCC) recipients for this e-mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.BodyEncoding">
            <summary>
            Gets or sets the encoding used to encode the message body.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.HtmlBody">
            <summary>
            Gets or sets the html message body.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.TextBody">
            <summary>
            Gets or sets the text message body.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.TextBodyView">
            <summary>
            Gets or sets the text body view.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.HtmlBodyView">
            <summary>
            Gets or sets the HTML body view.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.IsBodyHtml">
            <summary>
            Gets a value indicating whether this instance is body HTML.
            </summary>
            <value>
            	<c>true</c> if this instance is body HTML; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.IsBodyText">
            <summary>
            Gets a value indicating whether this instance is body text.
            </summary>
            <value>
            	<c>true</c> if this instance is body text; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.Body">
            <summary>
            Gets or sets the message body.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.CC">
            <summary>
            Gets the address collection that contains the carbon copy (CC) recipients for this e-mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.Date">
            <summary>
            Gets or Sets the DateTime of this mail.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.EnvelopeId">
            <summary>
            Gets or sets the envelope id.
            </summary>
            <value>The envelope id.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.From">
            <summary>
            Gets or sets the from address for this e-mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.Headers">
            <summary>
            Gets the mime headers.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.IsSigned">
            <summary>
            Gets a value indicating whether this instance is signed.
            </summary>
            <value><c>true</c> if this instance is signed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.MessageId">
            <summary>
            Gets or sets the message id.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.ReplyTo">
            <summary>
            Gets or sets the ReplyTo address for the mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.LinkedResources">
            <summary>
            Gets the linked resource collection of the message body.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.Sender">
            <summary>
            Gets or sets the sender's address for this e-mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.Subject">
            <summary>
            Gets or sets the encoding used for the subject content for this e-mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.SubjectEncoding">
            <summary>
            Gets or sets the subject encoding.
            </summary>
            <value>The subject encoding.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.XMailer">
            <summary>
            Gets or sets the x-mail mime header of the mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.To">
            <summary>
            Gets the address collection that contains the recipients of this e-mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.DeliveryNotificationOptions">
            <summary>
            Gets or sets the delivery notification options.
            </summary>
            <value>The delivery notification options.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MailMessage.Sensitivity">
            <summary>
            Gets or sets the sensitivity.
            </summary>
            <value>The sensitivity.</value>
        </member>
        <member name="T:Aspose.Network.Mail.AlternateView">
            <summary>
            Represents the format to view an email message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.#ctor">
            <summary>
            Initializes a new instance of AlternateView. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.AlternateView"/> class.
            </summary>
            <param name="contentStream">The content stream.</param>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.AlternateView"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.AlternateView"/> class.
            </summary>
            <param name="contentStream">The content stream.</param>
            <param name="mediaType">Type of the media.</param>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.AlternateView"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="mediaType">Type of the media.</param>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.CreateAlternateViewFromString(System.String)">
            <summary>
            Creates the alternate view from string.
            </summary>
            <param name="content">The content.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.CreateAlternateViewFromString(System.String,System.String)">
            <summary>
            Creates the alternate view from string.
            </summary>
            <param name="content">The content.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.CreateAlternateViewFromString(System.String,System.Text.Encoding,System.String)">
            <summary>
            Creates the alternate view from string.
            </summary>
            <param name="content">The content.</param>
            <param name="contentEncoding">The content encoding.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.Save(System.IO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.Save(System.String)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateView.SaveRawContent(System.IO.Stream)">
            <summary>
            Saves the content of the raw.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Aspose.Network.Mail.AlternateView.BaseUri">
            <summary>
            Gets or sets the base URI.
            </summary>
            <value>The base URI.</value>
        </member>
        <member name="T:Aspose.Network.Mail.DeliveryNotificationOptions">
            <summary>
            <p>Describes the delivery notification options for e-mail. </p>
            This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.DeliveryNotificationOptions.Delay">
            <summary>
            Notify if the delivery is delayed 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.DeliveryNotificationOptions.OnFailure">
            <summary>
            Notify if the delivery is unsuccessful. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.DeliveryNotificationOptions.None">
            <summary>
            No notification. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.DeliveryNotificationOptions.Never">
            <summary>
            Never notify. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.DeliveryNotificationOptions.OnSuccess">
            <summary>
            Notify if the delivery is successful. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.Calendaring.CalendarMonth">
            <summary>
            Represents the calendar month.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.April">
            <summary>
            April.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.August">
            <summary>
            August.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.December">
            <summary>
            December.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.February">
            <summary>
            February.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.January">
            <summary>
            January.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.July">
            <summary>
            July.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.June">
            <summary>
            June.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.March">
            <summary>
            March.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.May">
            <summary>
            May.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.Novemeber">
            <summary>
            Novemeber.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.October">
            <summary>
            October
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarMonth.September">
            <summary>
            September.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.StreetAddress">
            <summary> Defines a STREET_ADDRESS iCalendar component property.</summary>
            <author> 
            </author>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.StreetAddress.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.StreetAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.StreetAddress"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.StreetAddress.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.StreetAddress"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.StreetAddress.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.StreetAddress.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Locality">
            <summary> Defines a LOCALITY iCalendar component property.</summary>
            <author> 
            </author>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Locality.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Locality.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Locality"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Locality.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Locality"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Locality.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Locality.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Duration">
            <summary> Defines a DURATION iCalendar component property.
            
            <pre>
            4.3.6   Duration
            
            Value Name: DURATION
            
            Purpose: This value type is used to identify properties that contain
            a duration of time.
            
            Formal Definition: The value type is defined by the following
            notation:
            
            dur-value  = ([&quot;+&quot;] / &quot;-&quot;) &quot;P&quot; (dur-date / dur-time / dur-week)
            
            dur-date   = dur-day [dur-time]
            dur-time   = &quot;T&quot; (dur-hour / dur-minute / dur-second)
            dur-week   = 1*DIGIT &quot;W&quot;
            dur-hour   = 1*DIGIT &quot;H&quot; [dur-minute]
            dur-minute = 1*DIGIT &quot;M&quot; [dur-second]
            dur-second = 1*DIGIT &quot;S&quot;
            dur-day    = 1*DIGIT &quot;D&quot;
            
            Description: If the property permits, multiple &quot;duration&quot; values are
            specified by a COMMA character (US-ASCII decimal 44) separated list
            of values. The format is expressed as the [ISO 8601] basic format for
            the duration of time. The format can represent durations in terms of
            weeks, days, hours, minutes, and seconds.
            
            No additional content value encoding (i.e., BACKSLASH character
            encoding) are defined for this value type.
            
            Example: A duration of 15 days, 5 hours and 20 seconds would be:
            
            P15DT5H0M20S
            
            A duration of 7 weeks would be:
            
            P7W
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Duration"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.#ctor(Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Duration"/> class.
            </summary>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Duration"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Constructs a new duration representing the time between the specified start date and end date.
            </summary>
            <param name="start">the starting time for the duration</param>
            <param name="end">the end time for the duration</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.GetDuration">
            <summary>
            Gets the duration.
            </summary>
            <returns>Returns the duration.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="aValue">A value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.SetDuration(Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary>
            Sets the duration.
            </summary>
            <param name="duration">The duration to set.</param>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Duration.Dur">
            <summary>
            Gets or sets the dur.
            </summary>
            <value>The dur.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Contact">
            <summary> Defines a CONTACT iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Contact.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Contact.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Contact"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Contact.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Contact"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Contact.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Contact.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Type">
            <summary> Defines a Type parameter.</summary>
            <author> 
            </author>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Type.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Type"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Type.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Rsvp">
            <summary> Defines an RSVP parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Rsvp.True">
            <summary>
            True.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Rsvp.False">
            <summary>
            False.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Rsvp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Rsvp"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Rsvp.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Rsvp"/> class.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Rsvp.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Related">
            <summary> Defines an Alarm Trigger Relationship parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Related.Start">
            <summary>
            Start.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Related.End">
            <summary>
            End.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Related.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Related"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Related.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Member">
            <summary> Defines a Group or List Membership parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Member.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Member"/> class.
            </summary>
            <param name="value">The value.</param>
            <throws>  URISyntaxException when the specified string is not a valid list of (quoted) cal-addresses </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Member.#ctor(Aspose.Network.iCalendar.ObjectModel.AddressCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Member"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Member.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Parameters.Member.Groups">
            <summary>
            Gets the groups.
            </summary>
            <value>The groups.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedTo">
            <summary>
            Defines a Delegatees parameter.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedTo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedTo"/> class.
            </summary>
            <param name="value">The value.</param>
            <throws>  URISyntaxException when the specified string is not a valid list of cal-addresses </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedTo.#ctor(Aspose.Network.iCalendar.ObjectModel.AddressCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedTo"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedTo.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedTo.Delegatees">
            <summary>
            Gets the delegatees.
            </summary>
            <value>The delegatees.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.ComponentFactory">
            <summary> A factory for creating iCalendar components. Note that if relaxed parsing is enabled (via specifying the system
            property: icalj.parsing.relaxed=true) illegal component names are allowed.
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentFactory.#ctor">
            <summary> Constructor made private to prevent instantiation.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentFactory.createComponent(System.String)">
            <param name="name">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentFactory.createComponent(System.String,Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary> Creates a component.</summary>
            <param name="name">name of the component
            </param>
            <param name="properties">a list of component properties
            </param>
            <returns> a component
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentFactory.createComponent(System.String,Aspose.Network.iCalendar.ObjectModel.PropertyCollection,Aspose.Network.iCalendar.ObjectModel.ComponentCollection)">
            <summary> Creates a component which contains sub-components. Currently the only such component is VTIMEZONE.</summary>
            <param name="name">name of the component
            </param>
            <param name="properties">a list of component properties
            </param>
            <param name="components">a list of sub-components (namely standard/daylight timezones)
            </param>
            <returns> a component
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentFactory.isExperimentalName(System.String)">
            <param name="name">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentFactory.allowIllegalNames">
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.ComponentFactory.Instance">
            <returns> Returns the instance.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.Constants">
            <summary> Provides some convenience methods for working with constant
            parameters and properties.
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.Constants.#ctor">
            <summary> Constructor made private to enforce static nature.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.Constants.forProperty(Aspose.Network.iCalendar.ObjectModel.Property)">
            <summary> Returns a constant equivalent to the specified property
            if one is applicable. Otherwise will return the specified
            property.
            </summary>
            <param name="property">
            </param>
            <returns> a Property instance
            </returns>
        </member>
        <member name="T:Aspose.Network.Exchange.ExchangeMessageInfo">
            <summary>
            The ExchangeMessageInfo represents the E-Mail message info fetched from the Exchange Store.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMessageInfo.CC">
            <summary>
            Gets CC of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMessageInfo.From">
            <summary>
            Gets the From of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMessageInfo.Subject">
            <summary>
            Gets the Subject of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMessageInfo.To">
            <summary>
            Gets the receiptants of the E-Mail message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMessageInfo.MessageId">
            <summary>
            Gets the message id.
            </summary>
            <value>The message id.</value>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMessageInfo.UniqueUri">
            <summary>
            Gets the Unique Id of the E-Mail message.
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.MAPIHelperInterop">
            <summary>
            Internal class for calling MAPI APIs
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MAPIHelperInterop.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="T:Aspose.Network.WhoIs.WhoIsClient">
            <summary>
            <p>The WhoIsClient calss allows applications to query the domain information by using the Who Is Protocol (WHOIS).</p>
             
            <p>The WhoIsClient class fully supports the Asynchronous and Synchronous programming model.</p>
            </summary>
            <example>
            <p>The following exmaple demonstrates how to use WhoIsClient class to query domain information from WHOIS servers.</p>
            [C#]
            <code>
            //creates a WhoIsClient object with specified WHOIS server.
            WhoIsClient client = new WhoIsClient("whois.crsnic.net");
            try
            {
            	//query the domain
            	Console.WriteLine(client.Query("aspose.com"));
            }
            catch (Exception ex)
            {
            	System.Diagnostics.Debug.WriteLine(ex.ToString());
            }
            </code>
            [VB.NET]
            <code>
            '//creates a WhoIsClient object with specified WHOIS server.
            Dim client As WhoIsClient =  New WhoIsClient("whois.crsnic.net")
            Try
            	'query the domain
            	Console.WriteLine(client.Query("aspose.com"))
            Catch ex As Exception
            	System.Diagnostics.Debug.WriteLine(ex.ToString())
            End Try
            </code>
            </example>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsClient.#ctor(System.Net.IPEndPoint)">
            <summary>
            Initializes an instance of the WhoIsClient class.
            </summary>
            <param name="hostEndPoint">The host end point.</param>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsClient.#ctor(System.String)">
            <summary>
            Initializes an instance of the WhoIsClient class.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsClient.#ctor(System.String,System.Int32)">
            <summary>
            Initializes an instance of the WhoIsClient class.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsClient.BeginQuery(System.String)">
            <summary>
            Begin querying a domain, paired with EndQuery method
            </summary>
            <param name="domain">The domain name.</param>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsClient.BeginQuery(System.String,System.Object)">
            <summary>
            Begin querying a domain, paired with EndQuery method
            </summary>
            <param name="domain">The domain name.</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsClient.BeginQuery(System.String,System.Object,System.AsyncCallback)">
            <summary>
            Begin querying a domain, paired with EndQuery method
            </summary>
            <param name="domain">The domain name.</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <param name="asyncCallback">The AsyncCallback delegate. </param>
            <returns>An IAsyncResult that references the asynchronous operation.</returns>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsClient.EndQuery(System.IAsyncResult)">
            <summary>
            Ends a pending asynchronous query.
            </summary>
            <param name="asyncResult"></param>
            <returns>An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</returns>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsClient.Query(System.String)">
            <summary>
            Send a domain query to the WHOIS server.
            </summary>
            <param name="domain">The domain name.</param>
            <returns>The whois reply.</returns>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsClient.Dispose">
            <summary>
            Releases the unmanaged resources used by the WhoIsClient.
            </summary>
        </member>
        <member name="E:Aspose.Network.WhoIs.WhoIsClient.QueryCompleted">
            <summary>
            Occurs if the an asynchronous domain querying operation is completed.
            </summary>
        </member>
        <member name="P:Aspose.Network.WhoIs.WhoIsClient.Host">
            <summary>
            Gets or sets the host.
            </summary>
        </member>
        <member name="P:Aspose.Network.WhoIs.WhoIsClient.Port">
            <summary>
            Gests or sets the port.
            </summary>
        </member>
        <member name="P:Aspose.Network.WhoIs.WhoIsClient.ReceiveTimeout">
            <summary>
            Gets or sets the amount of time a WhoIsClient will wait to receive data once a read operation is initiated. The default value is 0.
            </summary>
        </member>
        <member name="P:Aspose.Network.WhoIs.WhoIsClient.SendTimeout">
            <summary>
            Gets or sets the amount of time a WhoIsClient will wait for a send operation to complete successfully. The default value is 0.
            </summary>
        </member>
        <member name="P:Aspose.Network.WhoIs.WhoIsClient.SynchronizingObject">
            <summary>
            Gets or sets the synchronizing object.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.MutexMultiProcessFileAppender">
            <summary>
            Provides a multiprocess-safe atomic file appends while
            keeping the files open.
            </summary>
            <remarks>
            On Unix you can get all the appends to be atomic, even when multiple 
            processes are trying to write to the same file, because setting the file
            pointer to the end of the file and appending can be made one operation.
            On Win32 we need to maintain some synchronization between processes
            (global named mutex is used for this)
            </remarks>
        </member>
        <member name="T:Aspose.Network.Icmp.ParameterProblemMessage">
            <summary>
            Represents a parameter problem message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.ParameterProblemMessage.#ctor">
            <summary>
            Initializes a new instance of the ParameterProblemMessage class.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.ParameterProblemMessage.Pointer">
            <summary>
            Gets or sets pointer.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.InformationRequestMessage">
            <summary>
            Represents the information request message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.InformationRequestMessage.#ctor">
            <summary>
            Initializes a new instance of the InformationRequestMessage class.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.InformationRequestMessage.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.InformationRequestMessage.SequenceNumber">
            <summary>
            Gets or sets the sequence number.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.TransferCompletedEventArgs">
            <summary>
            Represents the event for file transfering completed.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.TransferCompletedEventArgs.TotalTransferedBytes">
            <summary>
            Gets the total number of bytes tranferred.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.TransferCompletedEventArgs.TransferStatus">
            <summary>
            Gets the tranfer status.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.ListItemType">
            <summary>
            Represents the type of list item.
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.ListItemType.Directory">
            <summary>
            Direcotry.
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.ListItemType.File">
            <summary>
            File.
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.ListItemType.SoftLink">
            <summary>
            Soft link.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.ActivityMailMessageInterpretor">
            <summary>
            Represents a MailMessage interpretor for the activity message type of Outlook MapiMessage.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.ActivityMailMessageInterpretor.#ctor">
            <summary>
            Initializes a new instance of the ActivityMailMessageInterpretor class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.ActivityMailMessageInterpretor.Clone">
            <summary>
            Creates a copy of the current instance.
            </summary>
            <returns>A copy of MailMessageInterpretor.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.ActivityMailMessageInterpretor.LoadMessageHeader(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Imports the headers of MIME protocol to a MailMessage from the MapiMessage instance.
            </summary>
            <param name="mailmessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.ActivityMailMessageInterpretor.LoadMessageBodyHtml(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Creates the HtmlBody property of the MailMessage according to the specified MapiMessage instance.
            </summary>
            <param name="mailMessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.ActivityMailMessageInterpretor.Save(Aspose.Network.Outlook.MapiMessage,System.IO.Stream,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Saves the specified MapiMessage to a Stream.
            </summary>
            <param name="mapiMessage">The source MapiMessage instance.</param>
            <param name="stream">The target stream</param>
            <param name="messageFormat">The message format.</param>
        </member>
        <member name="P:Aspose.Network.Outlook.ActivityMailMessageInterpretor.FormatTemplates">
            <summary>
            Gets the format template collection.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.SRVResourceRecord">
            <summary>
            Represents a SRV DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.SRVResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.SRVResourceRecord">SRVResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.SRVResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.SRVResourceRecord">SRVResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.SRVResourceRecord.Port">
            <summary>
            Gets or sets the port
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.SRVResourceRecord.Priority">
            <summary>
            Gets or sets the priority
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.SRVResourceRecord.Target">
            <summary>
            Gets or sets the target
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.SRVResourceRecord.Weight">
            <summary>
            Gets or sets the weight
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.AFSDBResourceRecord">
            <summary>
            Represents an AFSDB DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.AFSDBResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.AFSDBResourceRecord">AFSDBResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.AFSDBResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.AFSDBResourceRecord">AFSDBResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.AFSDBResourceRecord.HostName">
            <summary>
            Gets or sets the host name
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.AFSDBResourceRecord.Subtype">
            <summary>
            Gets or sets the sub type
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.NDRReportMailMessageInterpretor">
            <summary>
            Represents a Non-Delivery Report MailMesssage interpretor.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.NDRReportMailMessageInterpretor.#ctor">
            <summary>
            Initializes a new instance of the NDRReportMailMessageInterpretor class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.NDRReportMailMessageInterpretor.Clone">
            <summary>
            Creates a copy of the current instance.
            </summary>
            <returns>A copy of NDRReportMailMessageInterpretor.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.NDRReportMailMessageInterpretor.LoadMessageHeader(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Imports the headers of MIME protocol to a MailMessage from the MapiMessage instance.
            </summary>
            <param name="mailmessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.NDRReportMailMessageInterpretor.LoadMessageBody(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Creates the Body (HtmlBody and TextBody) of the MailMessage according to the specified MapiMessage instance.
            </summary>
            <param name="mailmessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="T:Aspose.Network.Mime.ContentType">
            <summary>
            Represents a MIME protocol Content-Type header.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.ContentType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.ContentType"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.ContentType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.ContentType"/> class.
            </summary>
            <param name="mediaType">Type of the media.</param>
        </member>
        <member name="M:Aspose.Network.Mime.ContentType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Aspose.Network.Mime.ContentType.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.Mime.ContentType.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.Mime.ContentType.Boundary">
            <summary>
            Gets or sets the boundary.
            </summary>
            <value>The boundary.</value>
        </member>
        <member name="P:Aspose.Network.Mime.ContentType.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Aspose.Network.Mime.ContentType.CharSet">
            <summary>
            Gets or sets the char set.
            </summary>
            <value>The char set.</value>
        </member>
        <member name="P:Aspose.Network.Mime.ContentType.MediaType">
            <summary>
            Gets the type of the media.
            </summary>
            <value>The type of the media.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.ResourceCollection">
            <summary> Defines a list of iCalendar resouces.
            
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ResourceCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ResourceCollection.#ctor(System.String)">
            <summary>
            Parses the specified string representation to create
            a list of resources.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ResourceCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ResourceCollection.Add(System.String)">
            <summary>
            Adds the specified resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ResourceCollection.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>an iterator</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ResourceCollection.Remove(System.String)">
            <summary>
            Removes the specified resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns></returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.ResourceCollection.Empty">
            <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Network.iCalendar.ObjectModel.ResourceCollection"/> is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.ResourceCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo">
            <summary> Defines a TZOFFSETTO iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo.#ctor(Aspose.Network.iCalendar.ObjectModel.UtcOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo"/> class.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.UtcOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.TzOffsetTo.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.RelType">
            <summary> Defines a Relationship Type parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.RelType.Parent">
            <summary>
            Parent.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.RelType.Child">
            <summary>
            Child.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.RelType.Sibling">
            <summary>
            Sibling.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.RelType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.RelType"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.RelType.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.iCalendarParserException">
            <summary> An exception thrown when an error ocurrs in parsing iCalendar data.</summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.iCalendarParserException.#ctor(System.Int32)">
            <param name="lineNo">line number where parsing error ocurred
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.iCalendarParserException.#ctor(System.String,System.Int32)">
            <summary> Constructor with message.</summary>
            <param name="message">a descriptive message for the exception
            </param>
            <param name="lineNo">line number where parsing error ocurred
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.iCalendarParserException.#ctor(System.String,System.Int32,System.Exception)">
            <summary> Constructor with message and cause.</summary>
            <param name="message">a descriptive message for the exception
            </param>
            <param name="lineNo">line number where parsing error ocurred
            </param>
            <param name="cause">a throwable that is the cause of this exception
            </param>
        </member>
        <member name="P:Aspose.Network.iCalendar.iCalendarParserException.LineNo">
            <returns> the lineNo
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ContentHandler">
            <summary> Implementors provide functionality applicable during the parsing of an iCalendar data stream (e.g. building an object
            model).
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ContentHandler.StartCalendar">
            <summary> Triggers the start of handling a calendar.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ContentHandler.EndCalendar">
            <summary> Triggers the end of handling a calendar.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ContentHandler.StartComponent(System.String)">
            <summary> Triggers the start of handling a component.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ContentHandler.EndComponent(System.String)">
            <summary> Triggers the end of handling a component.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ContentHandler.StartProperty(System.String)">
            <summary> Triggers the start of handling a property.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ContentHandler.PropertyValue(System.String)">
            <summary> Triggers the handling of a property value.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ContentHandler.EndProperty(System.String)">
            <summary> Triggers the end of handling a property.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ContentHandler.Parameter(System.String,System.String)">
            <summary> Triggers the handling of a parameter.</summary>
        </member>
        <member name="T:Aspose.Network.Exchange.ContentClassType">
            <summary>
            Represents the content class type of exchange server items.
            </summary>
        </member>
        <member name="M:Aspose.Network.Exchange.ContentClassType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ContentClassType class.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Aspose.Network.Exchange.ContentClassType.ToString">
            <summary>
            Overridden. Returns a string representation of this instance. 
            </summary>
            <returns>A string contains the mail addresse.</returns>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.Activity">
            <summary>
            Activity type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.Appointment">
            <summary>
            Appointment type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.CalendarFolder">
            <summary>
            CalendarFolder type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.CalendarMessage">
            <summary>
            CalendarMessage type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.ContactFolder">
            <summary>
            ContactFolder type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.Document">
            <summary>
            Document type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.DSN">
            <summary>
            DSN type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.Folder">
            <summary>
            Folder type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.Group">
            <summary>
            Group type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.JournalFolder">
            <summary>
            JournalFolder type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.MailFolder">
            <summary>
            MailFolder type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.MDN">
            <summary>
            MDN type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.Message">
            <summary>
            Message type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.Note">
            <summary>
            Note type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.NoteFolder">
            <summary>
            NoteFolder type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.Person">
            <summary>
            Person type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.RecallMesage">
            <summary>
            RecallMesage type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.RecallReport">
            <summary>
            RecallReport type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.ReportMessage">
            <summary>
            ReportMessage type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.Task">
            <summary>
            Task type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ContentClassType.TaskFolder">
            <summary>
            TaskFolder type.
            </summary>
        </member>
        <member name="T:Aspose.Network.Exchange.ExchangeMessageInfoCollection">
            <summary>
            Represents a collection of ExchangeMessageInfo objects.
            </summary>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeMessageInfoCollection.#ctor">
            <summary>
            Initializes a new instance of the ExchangeMessageInfoCollection class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation">
            <summary>
            Specifies the location of the X.509 certificate store.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation.CurrentService">
            <summary>
            CurrentService.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser">
            <summary>
            CurrentUser.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation.CurrentUserGroupPolicy">
            <summary>
            CurrentUserGroupPolicy.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine">
            <summary>
            LocalMachine.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation.LocalMachineEnterprise">
            <summary>
            LocalMachineEnterprise.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation.LocalMachineGroupPolicy">
            <summary>
            LocalMachineGroupPolicy.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation.Services">
            <summary>
            Services.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation.Users">
            <summary>
            Users.
            </summary>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection">
            <summary>
            Represents a collection of X509Extension objects. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies a range of elements.
            </summary>
            <param name="array">The target array.</param>
            <param name="index">The zero-based index from the source.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.GetEnumerator">
            <summary>
            Gets an Enumerator of the colleciton.
            </summary>
            <returns>An Enumerator.</returns>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.Add(Aspose.Network.Security.Cryptography.X509Certificates.X509Extension)">
            <summary>
            Adds an X509Extension object to an X509ExtensionCollection object.
            </summary>
            <param name="extension">An X509Extension object to add to the X509ExtensionCollection object. </param>
            <returns>The index at which the extension parameter was added.</returns>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.CopyTo(Aspose.Network.Security.Cryptography.X509Certificates.X509Extension[],System.Int32)">
            <summary>
            Copies a collection into an array starting at the specified index.
            </summary>
            <param name="array">An array of X509Extension objects. </param>
            <param name="index">The location in the array at which copying starts. </param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.Remove(Aspose.Network.Security.Cryptography.X509Certificates.X509Extension)">
            <summary>
            Removes a specific X509Extension from the current collection.
            </summary>
            <param name="value">The X509Extension to remove from the current X509ExtensionCollection.</param>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the System.Collections.ArrayList is synchronized (thread safe).        
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.Item(System.String)">
            <summary>
            Gets the first X509Extension object whose value or friendly name is specified by an object identifier (OID).
            </summary>
            <param name="oid">The object identifier (OID) of the extension to retrieve.</param>
            <returns>An X509Extension object.</returns>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509ExtensionCollection.Item(System.Int32)">
            <summary>
            Gets the X509Extension object at the specified index.
            </summary>
            <param name="index">The location of the X509Extension object to retrieve.</param>
            <returns>An X509Extension object.</returns>
        </member>
        <member name="T:Aspose.Network.WhoIs.QueryCompletedEventArgs">
            <summary>
            Provides the event data for QueryCompleted event.
            </summary>
        </member>
        <member name="M:Aspose.Network.WhoIs.QueryCompletedEventArgs.#ctor(Aspose.Network.WhoIs.WhoIsClient,System.IAsyncResult)">
            <summary>
            Initializes a new instance of the QueryCompletedEventArgs class.
            </summary>
            <param name="sender">The sender.</param>
            <param name="asyncResult">The AsyncResult referring the operation.</param>
        </member>
        <member name="P:Aspose.Network.WhoIs.QueryCompletedEventArgs.AsyncResult">
            <summary>
            Gest the AsyncResult referring the operation.
            </summary>
        </member>
        <member name="P:Aspose.Network.WhoIs.QueryCompletedEventArgs.Answer">
            <summary>
            Gets the answer.
            </summary>
        </member>
        <member name="T:Aspose.Network.Security.Authentication.AuthenticationException">
            <summary>
            The exception that is thrown when authentication fails for an authentication stream.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Authentication.AuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the AuthenticationException class with no message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Authentication.AuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AuthenticationException class with the specified message.
            </summary>
            <param name="message">A String that describes the authentication failure.</param>
        </member>
        <member name="M:Aspose.Network.Security.Authentication.AuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the AuthenticationException class with the specified message and inner exception.
            </summary>
            <param name="message">A String that describes the authentication failure.</param>
            <param name="inner">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Aspose.Network.Logging.FileAppender">
            <summary>
            Reprensents a file appender.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.Appender">
            <summary>
            Represents the base class for Appender.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.IAppender">
            <summary>
            Implement this interface for your own strategies for printing log entries. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.IAppender.Append(Aspose.Network.Logging.LogEntry)">
            <summary>
            Log the specified log entry in Appender specific way. 
            </summary>
            <param name="entry"></param>
        </member>
        <member name="P:Aspose.Network.Logging.IAppender.Formatter">
            <summary>
            Gets or sets the IFormatter.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.Appender.#ctor">
            <summary>
            Inistializes a new instance of Appender class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.Appender.#ctor(Aspose.Network.Logging.IFormatter)">
            <summary>
            Inistializes a new instance of Appender class.
            </summary>
            <param name="formatter">The IFormatter.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Appender.Append(Aspose.Network.Logging.LogEntry)">
            <summary>
            Appends the specified log entry to the appender.
            </summary>
            <param name="entry">The log entry.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Appender.Close">
            <summary>
            Closes the appender.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.Appender.Initialize">
            <summary>
            Initializes the appender instance.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.Appender.Dispose">
            <summary>
            Releases the unmanaged resources used by the Appender.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.Appender.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Appender, and optionally disposes of the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Appender.Finalize">
            <summary>
            Frees resources used by the Appender class.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.Appender.Initialized">
            <summary>
            Indicates whether an Appender is initialized.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.Appender.Closed">
            <summary>
            Indicates whether an Appender is closed.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.Appender.Formatter">
            <summary>
            Gets or sets the formatter.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.FileAppender.#ctor">
            <summary>
            Initializes a new instance of the FileAppender class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.FileAppender.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FileAppender class.
            </summary>
            <param name="fileName">The file name.</param>
        </member>
        <member name="M:Aspose.Network.Logging.FileAppender.Append(Aspose.Network.Logging.LogEntry)">
            <summary>
            Appends the log entry information to the appender.
            </summary>
            <param name="logEntry">The log entry.</param>
        </member>
        <member name="M:Aspose.Network.Logging.FileAppender.Append(Aspose.Network.Logging.LogEntry[])">
            <summary>
            Appends a set of log entries to the appender.
            </summary>
            <param name="logEntries">A set of log entries to log.</param>
        </member>
        <member name="M:Aspose.Network.Logging.FileAppender.Close">
            <summary>
            Closes the file(s) opened for writing.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.FileAppender.FileName">
            <summary>
            Gets or sets file name.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.FileAppender.BufferSize">
            <summary>
            Gets or sets the buffer size.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.FileAppender.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.TXTResourceRecord">
            <summary>
            Represents a TXT DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.TXTResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.TXTResourceRecord">TXTResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.TXTResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.TXTResourceRecord">TXTResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.TXTResourceRecord.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.LOCResourceRecord">
            <summary>
            Represents a LOC DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.LOCResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.LOCResourceRecord">LOCResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.LOCResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.LOCResourceRecord">LOCResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.LOCResourceRecord.Altitude">
            <summary>
            Gets or sets the altitude
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.LOCResourceRecord.HorizontalPrecision">
            <summary>
            Gets or sets the horizontal precision
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.LOCResourceRecord.Latitude">
            <summary>
            Gets or sets the latitude
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.LOCResourceRecord.Longitude">
            <summary>
            Gets or sets the longitude
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.LOCResourceRecord.Size">
            <summary>
            Gets or sets the  size
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.LOCResourceRecord.Version">
            <summary>
            Gets or sets the version
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.LOCResourceRecord.VerticalPrecision">
            <summary>
            Gets or sets the vertical precision
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.Question">
            <summary>
            Represents the domain question to be queried
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.Question.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.Question">Question</see>. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.Question.#ctor(System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.Question">Question</see>. 
            </summary>
            <param name="domainName">The domain name to query.</param>
        </member>
        <member name="M:Aspose.Network.Dns.Question.#ctor(System.String,Aspose.Network.Dns.QueryType)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.Question">Question</see>. 
            </summary>
            <param name="domainName">The domain name to query.</param>
            <param name="queryType">The type of the query.</param>
        </member>
        <member name="M:Aspose.Network.Dns.Question.#ctor(System.String,Aspose.Network.Dns.QueryType,Aspose.Network.Dns.QueryClass)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.Question">Question</see>. 
            </summary>
            <param name="domainName">The domain name to query.</param>
            <param name="queryType">The type of the query.</param>
            <param name="queryClass">The class of the query.</param>
        </member>
        <member name="P:Aspose.Network.Dns.Question.DomainName">
            <summary>
            Gets or sets the domain name of the <see cref="T:Aspose.Network.Dns.Question">Question</see> object. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.Question.QueryType">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Dns.QueryType">QueryType</see> of the <see cref="T:Aspose.Network.Dns.Question">Question</see> object. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.Question.QueryClass">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Dns.QueryClass">QueryClass</see> of the <see cref="T:Aspose.Network.Dns.Question">Question</see> object. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.MailExchangeResolvor">
            <summary>
            Represents the mail exchange information resolver.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MailExchangeResolvor.#ctor">
            <summary>
            Initializes a new instance of the MailExchangeResolvor class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.IMessageFormatter">
            <summary>
            Provides a mechanism for retrieving an object to Message formatting.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.IMessageFormatter.Format(Aspose.Network.Mail.MailMessage)">
            <summary>
            Formats the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="P:Aspose.Network.Mail.IMessageFormatter.FormatTemplates">
            <summary>
            Gets the format templates.
            </summary>
            <value>The format templates.</value>
        </member>
        <member name="T:Aspose.Network.Mail.MhtMessageFormatter">
            <summary>
            Provides a default formatter for Mht conversion.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MhtMessageFormatter.#ctor">
            <summary>
            Creates an instance of MhtMessageFormatter.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MhtMessageFormatter.Format(Aspose.Network.Mail.MailMessage)">
            <summary>
            Adds information header into message body.
            </summary>
            <param name="message">The MailMessage to be formatted.</param>
        </member>
        <member name="P:Aspose.Network.Mail.MhtMessageFormatter.SaveAttachments">
            <summary>
            Gets or sets a value indicating whether [save attachments].
            </summary>
            <value><c>true</c> if [save attachments]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MhtMessageFormatter.DateTimeFormat">
            <summary>
            Gets or sets the date time format.
            </summary>
            <value>The date time format.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MhtMessageFormatter.FormFormat">
            <summary>
            Gets or sets the form format.
            </summary>
            <value>The form format.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MhtMessageFormatter.SentFormat">
            <summary>
            Gets or sets the sent format.
            </summary>
            <value>The sent format.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MhtMessageFormatter.ToFormat">
            <summary>
            Gets or sets to format.
            </summary>
            <value>To format.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MhtMessageFormatter.CcFormat">
            <summary>
            Gets or sets the cc format.
            </summary>
            <value>The cc format.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MhtMessageFormatter.SubjectFormat">
            <summary>
            Gets or sets the subject format.
            </summary>
            <value>The subject format.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MhtMessageFormatter.AttachmentFormat">
            <summary>
            Gets or sets the attachment format.
            </summary>
            <value>The attachment format.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MhtMessageFormatter.FormatTemplates">
            <summary>
            Gets the format templates.
            </summary>
            <value>The format templates.</value>
        </member>
        <member name="T:Aspose.Network.Mail.MediaTypeNames">
            <summary>
            Specifies the media type information for an e-mail message attachment.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.MediaTypeNames.Application">
            <summary>
            Specifies the kind of application data in an e-mail message attachment.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Application.Octet">
            <summary>
            Specifies that the Application data is not interpreted.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Application.Pdf">
            <summary>
            Specifies that the Application data is in Portable Document Format (PDF).
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Application.Rtf">
            <summary>
            Specifies that the Application data is in Rich Text Format (RTF).
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Application.Soap">
            <summary>
            Specifies that the Application data is a SOAP document.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Application.Zip">
            <summary>
            Specifies that the Application data is compressed.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.MediaTypeNames.Image">
            <summary>
            Specifies the type of image data in an e-mail message attachment.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Image.Gif">
            <summary>
            Specifies that the Image data is in Graphics Interchange Format (GIF).
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Image.Jpeg">
            <summary>
            Specifies that the Image data is in Joint Photographic Experts Group (JPEG) format.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Image.Png">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Image.Tiff">
            <summary>
            Specifies that the Image data is in Tagged Image File Format (TIFF).
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.MediaTypeNames.Message">
            <summary>
            Specifies the type of text data in an e-mail message attachment.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.MediaTypeNames.Multipart">
            <summary>
            Specifies the type of multi part in an e-mail message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Multipart.Alternative">
            <summary>
            Alternative part.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Multipart.Digest">
            <summary>
            Digest part.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Multipart.Mixed">
            <summary>
            mixed part.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Multipart.Parallel">
            <summary>
            parallel part.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Multipart.Related">
            <summary>
            related part.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Multipart.Report">
            <summary>
            report part.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Multipart.Signed">
            <summary>
            signed part.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.MediaTypeNames.Text">
            <summary>
            Specifies the type of text data in an e-mail message attachment.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Text.Enriched">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Text.Html">
            <summary>
            Specifies that the Text data is in HTML format.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Text.Plain">
            <summary>
            Specifies that the Text data is in plain text format.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Text.RichText">
            <summary>
            Specifies that the Text data is in Rich Text Format (RTF).
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MediaTypeNames.Text.Xml">
            <summary>
            Specifies that the Text data is in XML format.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.Calendaring.DailyRecurrencePattern">
            <summary>
            Represents the daily recurrence pattern.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.DailyRecurrencePattern.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.DailyRecurrencePattern"/> class.
            </summary>
            <param name="endDate">The end date.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.DailyRecurrencePattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.DailyRecurrencePattern"/> class.
            </summary>
            <param name="occurs">The occurs.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.DailyRecurrencePattern.#ctor(System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.DailyRecurrencePattern"/> class.
            </summary>
            <param name="endDate">The end date.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.DailyRecurrencePattern.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.DailyRecurrencePattern"/> class.
            </summary>
            <param name="occurs">The occurs.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="T:Aspose.Network.Mail.Appointment">
             <summary>
             Represents a calendar to an e-mail.
             </summary>
            <example>
             <p>This example demonstrates how to add a calendar to an E-Mail message.</p>
             [C#]
             <code>
            	    MailMessage msg = new MailMessage();
                 //attendees for the event
            	    MailAddressCollection attendees = new MailAddressCollection();
            	    attendees.Add(new MailAddress("person1@domain.com"));
            	    attendees.Add(new MailAddress("person2@domain.com"));
            	    attendees.Add(new MailAddress("person3@domain.com"));
                 //create appointment
            	    Appointment app = new Appointment("Room 112",new DateTime(2006,7,17,13,0,0),new DateTime(2006,7,17,14,0,0),new MailAddress("somebody@domain.com"), attendees );
            	    cal.Summary = "Release Meetting";
            	    cal.Description = "Discuss for the next release";
                 //add calendar to the message
            	    msg.AddAlternateView(app.RequestApointment());
             
                 //send the email message
                 SmtpClient smtp= new SmtpClient("smtp.server.com", 25, "user", "password");
                 smtp.Send(msg);
             </code>
             [VB.Net]
             <code>
             	Dim msg As MailMessage =  New MailMessage() 
                'attendees for the event
             	Dim attendees As MailAddressCollection =  New MailAddressCollection() 
             	attendees.Add(New MailAddress("person1@domain.com"))
             	attendees.Add(New MailAddress("person2@domain.com"))
             	attendees.Add(New MailAddress("person3@domain.com"))
                'create calendar
             	Dim cal As Appointment =  New Appointment("Room 112",New DateTime(2006,7,17,13,0,0),New DateTime(2006,7,17,14,0,0),New MailAddress("somebody@domain.com"),attendees) 
             	cal.Summary = "Release Meetting"
             	cal.Description = "Discuss for the next release"
                'add calendar to the message
             	msg.AddAlternateView(app.RequestApointment())
             </code>
             </example>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.#ctor(System.String,System.DateTime,System.DateTime,Aspose.Network.Mail.MailAddress,Aspose.Network.Mail.MailAddressCollection)">
            <summary>
            Initialize a new instance of Calendar object.
            </summary>
            <param name="location">The location of the calendar event.</param>
            <param name="startDate">The start time of the calendar event.</param>
            <param name="endDate">The end time of the calendar event.</param>
            <param name="organizer">The organizer of the calendar event.</param>
            <param name="attendees">The attendees of th calendar event.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.#ctor(System.String,System.String,System.String,System.DateTime,System.DateTime,Aspose.Network.Mail.MailAddress,Aspose.Network.Mail.MailAddressCollection)">
            <summary>
            Initialize a new instance of Calendar object.
            </summary>
            <param name="location">The location of the calendar event.</param>
            <param name="summary">The summary of the calendar event.</param>
            <param name="description">The description of the calendar event.</param>
            <param name="startDate">The start time of the calendar event.</param>
            <param name="endDate">The end time of the calendar event.</param>
            <param name="organizer">The organizer of the calendar event.</param>
            <param name="attendees">The attendees of th calendar event.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.RequestApointment">
            <summary>
            Requests the apointment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.RequestApointment(System.Int32)">
            <summary>
            Requests the apointment.
            </summary>
            <param name="sequenceId">The sequence id.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.CancelAppointment">
            <summary>
            Cancels the appointment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.CancelAppointment(System.Int32)">
            <summary>
            Cancels the appointment.
            </summary>
            <param name="sequenceId">The sequence id.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.UpdateAppointment">
            <summary>
            Updates the appointment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.UpdateAppointment(System.Int32)">
            <summary>
            Updates the appointment.
            </summary>
            <param name="sequenceId">The sequence id.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.GetAppointmentHtml">
            <summary>
            Gets the calendar HTML.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Appointment.GetAppointmentText">
            <summary>
            Gets the calendar text.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.Summary">
            <summary>
            Gets or sets the summary.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.Attendees">
            <summary>
            Gets or sets the attendees.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.Organizer">
            <summary>
            Gets or sets the organizer.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.RecurrencePattern">
            <summary>
            Gets or sets the recurrence pattern.
            </summary>
            <value>The recurrence pattern.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.UniqueId">
            <summary>
            Gets or sets the unique id.
            </summary>
            <value>The unique id.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Appointment.SequenceId">
            <summary>
            Gets the sequence id.
            </summary>
            <value>The sequence id.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Time">
            <summary> A type used to represent iCalendar time values.</summary>
            <author>  
            </author>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Iso8601">
            <summary> Base class for date and time representations as defined
            by the ISO 8601 standard. Sub-classes must ensure that either the correct
            precision is used in constructor arguments, or that <code>Object.equals()</code>
            is overridden to ensure equality checking is consistent with the type.
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.GetDateTime">
            <summary>
            Gets the date time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.SetDateTime(System.DateTime)">
            <summary>
            Sets the date time.
            </summary>
            <param name="time">The time.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.#ctor(System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Iso8601"/> class.
            </summary>
            <param name="datetime">The datetime.</param>
            <param name="pattern">The pattern.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Iso8601"/> class.
            </summary>
            <param name="datetime">The datetime.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.op_Inequality(Aspose.Network.iCalendar.ObjectModel.Iso8601,Aspose.Network.iCalendar.ObjectModel.Iso8601)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="d1">The d1.</param>
            <param name="d2">The d2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.op_LessThan(Aspose.Network.iCalendar.ObjectModel.Iso8601,Aspose.Network.iCalendar.ObjectModel.Iso8601)">
            <summary>
            Implements the operator &lt;.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.op_Equality(Aspose.Network.iCalendar.ObjectModel.Iso8601,Aspose.Network.iCalendar.ObjectModel.Iso8601)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="d1">The d1.</param>
            <param name="d2">The d2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.op_GreaterThan(Aspose.Network.iCalendar.ObjectModel.Iso8601,Aspose.Network.iCalendar.ObjectModel.Iso8601)">
            <summary>
            Implements the operator &gt;.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Iso8601.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Time.DEFAULT_PATTERN">
            <summary> FORM #1: LOCAL TIME.</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Time.UTC_PATTERN">
            <summary> FORM #2: UTC TIME.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Time.#ctor(Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <param name="timezone">
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Time.#ctor(Aspose.Network.iCalendar.ObjectModel.TimeZone,System.Boolean)">
            <param name="timezone">
            </param>
            <param name="utc">
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Time.#ctor(System.DateTime,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <param name="time">
            </param>
            <param name="timezone">
            </param>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Time.Utc">
            <returns> true if time is utc
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete">
            <summary> Defines a PERCENT-COMPLETE iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete"/> class.
            </summary>
            <param name="percentage">The percentage.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="percentage">The percentage.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.PercentComplete.Percentage">
            <summary>
            Gets or sets the percentage.
            </summary>
            <value>The percentage.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Method">
            <summary> Defines a METHOD iCalendar property.</summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Method.Publish">
            <summary> Used to publish a calendar entry to one or more Calendar Users. There is no interactivity between the publisher
            and any other calendar user. An example might include a baseball team publishing its schedule to the public. [RFC
            2446]
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Method.Request">
            <summary> Used to schedule a calendar entry with other Calendar Users. Requests are interactive in that they require the
            receiver to respond using the Reply methods. Meeting Requests, Busy Time requests and the assignment of VTODOs to
            other Calendar Users are all examples. Requests are also used by the "Organizer" to update the status of a
            calendar entry. [RFC 2446]
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Method.Reply">
            <summary> A Reply is used in response to a Request to convey "Attendee" status to the "Organizer". Replies are commonly
            used to respond to meeting and task requests. [RFC2446]
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Method.Add">
            <summary> Add one or more instances to an existing VEVENT, VTODO, or VJOURNAL. [RFC 2446]</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Method.Cancel">
            <summary> Cancel one or more instances of an existing VEVENT, VTODO, or VJOURNAL. [RFC 2446]</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Method.Refresh">
            <summary> The Refresh method is used by an "Attendee" to request the latest version of a calendar entry. [RFC 2446]</summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Method.Counter">
            <summary> The Counter method is used by an "Attendee" to negotiate a change in the calendar entry. Examples include the
            request to change a proposed Event time or change the due date for a VTODO. [RFC 2446]
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Method.DeclineCounter">
            <summary> Used by the "Organizer" to decline the proposed counter-proprosal. [RFC 2446]</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Method.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Method.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Method"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Method.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Method"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Method.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Method.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType">
            <summary> Defines a LOCATION_TYPE iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType.#ctor(Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType"/> class.
            </summary>
            <param name="types">The types.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="types">The types.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.LocationType.LocationTypes">
            <returns> Returns the locationTypes.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty">
            <summary> Base class for properties with a list of dates as a value.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.ParameterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.DateList)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="dates">The dates.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.DateList)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="parameters">The parameters.</param>
            <param name="dates">The dates.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty.Dates">
            <summary>
            Gets the dates.
            </summary>
            <value>The dates.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty.TimeZone">
            <summary>
            Sets the timezone associated with this property.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.DateListProperty.Utc">
            <summary>
            Resets the timezone associated with the property. If utc is true, any TZID parameters are removed and the Java
            timezone is updated to UTC time. If utc is false, TZID parameters are removed and the Java timezone is set to the
            default timezone (i.e. represents a "floating" local time)
            </summary>
            <value><c>true</c> if UTC; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.CuType">
            <summary> Defines a Calendar User Type.</summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.CuType.Individual">
            <summary>
            Individual.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.CuType.Group">
            <summary>
            Group.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.CuType.Resource">
            <summary>
            Resource.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.CuType.Room">
            <summary>
            Room.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.CuType.UnKnown">
            <summary>
            UnKnown.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.CuType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.CuType"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.CuType.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.TimeZones">
            <summary> Utility methods relevant to Java timezones.
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.TimeZones.#ctor">
            <summary> Constructor made private to enforce static nature.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.TimeZones.isUtc(Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary> Indicates whether the specified timezone is equivalent to
            UTC time.
            </summary>
            <param name="timezone">
            </param>
            <returns> true if the timezone is UTC time, otherwise false
            </returns>
        </member>
        <member name="T:Aspose.Windows.Forms.FileDragEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.FileDragEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aspose.Windows.Forms.FileDragEventArgs.Files">
            <summary>
            Gets the files.
            </summary>
            <value>The files.</value>
        </member>
        <member name="T:Aspose.Network.Verify.ValidationResult">
            <summary>
            Present the result of the email validating process.
            </summary>
        </member>
        <member name="M:Aspose.Network.Verify.ValidationResult.#ctor">
            <summary>
            Create an instance of the ValidationResult class
            </summary>
        </member>
        <member name="M:Aspose.Network.Verify.ValidationResult.#ctor(Aspose.Network.Verify.ValidationResponseCode)">
            <summary>
            Create an instance of the ValidationResult class, with the specified <seealso cref="T:Aspose.Network.Verify.ValidationResponseCode">ValidationResponseCode</seealso>
            </summary>
            <param name="responseCode">The response code of the validating process.</param>
        </member>
        <member name="M:Aspose.Network.Verify.ValidationResult.#ctor(Aspose.Network.Verify.ValidationResponseCode,System.Exception)">
            <summary>
            Create an instance of the ValidationResult class, with the specified <seealso cref="T:Aspose.Network.Verify.ValidationResponseCode">ValidationResponseCode</seealso>, and the last exception.
            </summary>
            <param name="responseCode">The response code of the validating process.</param>
            <param name="lastException">The last exception met in the validating process.</param>
        </member>
        <member name="P:Aspose.Network.Verify.ValidationResult.ReturnCode">
            <summary>
            Gets or ses the response code of the validating process.
            </summary>
        </member>
        <member name="P:Aspose.Network.Verify.ValidationResult.Message">
            <summary>
            Gets the detail message about the result.
            </summary>
        </member>
        <member name="P:Aspose.Network.Verify.ValidationResult.LastException">
            <summary>
            The last error met in the validating process.
            </summary>
        </member>
        <member name="T:Aspose.Network.Verify.ValidationResponseCode">
            <summary>
            Represents the response status of the mail validating process.
            </summary>
        </member>
        <member name="F:Aspose.Network.Verify.ValidationResponseCode.ValidationSuccess">
            <summary>
            The mail address validating is successful.
            </summary>
        </member>
        <member name="F:Aspose.Network.Verify.ValidationResponseCode.SyntaxValidationFailed">
            <summary>
            The mail address validating process failed at the syntax validation.
            </summary>
        </member>
        <member name="F:Aspose.Network.Verify.ValidationResponseCode.DomainValidationFailed">
            <summary>
            The mail address validating process failed at the domain validation.
            </summary>
        </member>
        <member name="F:Aspose.Network.Verify.ValidationResponseCode.MailServerValidationError">
            <summary>
            The mail address validating process failed at the mail server validation.
            </summary>
        </member>
        <member name="T:Aspose.Network.Verify.SyntaxValidatingEventArgs">
            <summary>
            Provides data for the SyntaxValidating event.
            </summary>
        </member>
        <member name="M:Aspose.Network.Verify.SyntaxValidatingEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SyntaxValidatingEventArgs class.
            </summary>
            <param name="mail">The mail address.</param>
        </member>
        <member name="P:Aspose.Network.Verify.SyntaxValidatingEventArgs.Mail">
            <summary>
            Gets the mail address is being validating.
            </summary>
        </member>
        <member name="P:Aspose.Network.Verify.SyntaxValidatingEventArgs.Skip">
            <summary>
            Indicates whether to ignore the check.
            </summary>
        </member>
        <member name="P:Aspose.Network.Verify.SyntaxValidatingEventArgs.Result">
            <summary>
            Gets or sets the validation result.
            </summary>
        </member>
        <member name="T:Aspose.Network.Verify.DomainValidatingEventArgs">
            <summary>
            Provides data for the DomainValidating event.
            </summary>
        </member>
        <member name="M:Aspose.Network.Verify.DomainValidatingEventArgs.#ctor(System.String,Aspose.Network.Mail.MailAddress)">
            <summary>
            Initializes a new instance of the SyntaxValidatingEventArgs class.
            </summary>
            <param name="mail">The mail address.</param>
            <param name="mailaddress">The mail address.</param>
        </member>
        <member name="P:Aspose.Network.Verify.DomainValidatingEventArgs.Domain">
            <summary>
            Gets the domain.
            </summary>
        </member>
        <member name="P:Aspose.Network.Verify.DomainValidatingEventArgs.MailAddress">
            <summary>
            Gets the mail address.
            </summary>
        </member>
        <member name="T:Aspose.Network.Verify.MailServerValidatingEventArgs">
            <summary>
            Provides data for the MailServerValidatingEvent event.
            </summary>
        </member>
        <member name="M:Aspose.Network.Verify.MailServerValidatingEventArgs.#ctor(System.String,Aspose.Network.Mail.MailAddress,System.String[])">
            <summary>
            Initializes a new instance of the SyntaxValidatingEventArgs class.
            </summary>
            <param name="mail">A string contains the original copy of the mail address.</param>
            <param name="mailaddress">The MailAddress.</param>
            <param name="mailExchangeList">A set of mail exchange server list.</param>
        </member>
        <member name="P:Aspose.Network.Verify.MailServerValidatingEventArgs.MailExchangeServers">
            <summary>
            Gets the mail exchange server list.
            </summary>
        </member>
        <member name="T:Aspose.Network.Verify.DomainValidatingEventHandler">
            <summary>
            Represents the event handler for DomainValidatingEvent.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Aspose.Network.Verify.SyntaxValidatingEventHandler">
            <summary>
            Represents the event handler for SyntaxValidatingEvent.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Aspose.Network.Verify.MailServerValidatingEventHandler">
            <summary>
            Represents the event handler for MailServerValidatingEvent.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Aspose.Network.Verify.EmailValidator">
            <summary>
            EmailValidator class provides the capability to validate e-mail addresses.
            </summary>	
            <example>
            <para>The following example demonstrates how to use EmailValidator to validate e-mail addresses.</para>
            <para>[C#]</para>
            <code>
            Aspose.Network.DataSource.EmailValidator ev = new Aspose.Network.Verfiy.EmailValidator();
            Aspose.Network.Verfiy.ValidationResult result;
            ev.Validate("", out result);
            if (result.ReturnCode == ValidationResponseCode.ValidationSucess)
            {
            	MessageBox.Show("the email address is valid.");
            }
            else
            {
            	MessageBox.Show("the mail address is invalid,for the {0}", result.Message);
            }
            </code>
            <para>[Visual Basic]</para>
            <code>
            Dim ev As New Aspose.Network.Verfiy.EmailValidator
            Dim result As Aspose.Network.Verfiy.ValidationResult
            ev.Validate("guangzhou@aspose.com", result)
            If (result.ReturnCode = Aspose.Network.Verfiy.ValidationResponseCode.ValidationSuccess) Then
            	MessageBox.Show("the mail address is valid")
            Else
            	MessageBox.Show("the mail is invalid")
            End If
            </code>
            </example>
        </member>
        <member name="M:Aspose.Network.Verify.EmailValidator.#ctor">
            <summary>
            Create an instance of EmailValidator.
            </summary>
        </member>
        <member name="M:Aspose.Network.Verify.EmailValidator.Validate(System.String,Aspose.Network.Verify.ValidationPolicy,Aspose.Network.Verify.ValidationResult@)">
            <summary>
            Validating the email address
            </summary>
            <param name="mailAddress">The mail address to be validated.</param>
            <param name="policy">The policy of the validating process.</param>
            <param name="result">The result of the validating process.</param>
        </member>
        <member name="M:Aspose.Network.Verify.EmailValidator.Validate(System.String,Aspose.Network.Verify.ValidationResult@)">
            <summary>
            Validate email address, with the MailServer validation policy.
            </summary>
            <param name="mailAddress">The Email address to be validated.</param>
            <param name="result">The result of the validation.</param>
        </member>
        <member name="M:Aspose.Network.Verify.EmailValidator.BeginValidate(System.String,Aspose.Network.Verify.ValidationPolicy,Aspose.Network.Verify.ValidationResult@,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous validating process for an email address.
            </summary>
            <param name="mailAddress">The email address to be validated.</param>
            <param name="policy">The policy of the validating process.</param>
            <param name="result">The result of the validating process.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>		
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Verify.EmailValidator.EndValidate(Aspose.Network.Verify.ValidationResult@,System.IAsyncResult)">
            <summary>
            Ends an asynchronous validating process for an email address.
            </summary>
            <param name="validationResult">The result of the validating process.</param>
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="E:Aspose.Network.Verify.EmailValidator.SyntaxValidating">
            <summary>
            This event occurs when validating the syntax of an email addresss.
            </summary>
        </member>
        <member name="E:Aspose.Network.Verify.EmailValidator.DomainValidating">
            <summary>
            This event occurs when validating the domain of an email addresss.
            </summary>
        </member>
        <member name="E:Aspose.Network.Verify.EmailValidator.MailServerValidating">
            <summary>
            This event occurs when validating an email addresss on its mail server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Verify.EmailValidator.DnsServers">
            <summary>
            Gets or sets the Dns server list to use in the email validation.
            </summary>
        </member>
        <member name="P:Aspose.Network.Verify.EmailValidator.Timeout">
            <summary>
            Gets or sets the length of time until the request times out.
            </summary>
        </member>
        <member name="T:Aspose.Network.Proxy.ProxyException">
            <summary>
            Represents the exception thrown in Proxy operation
            </summary>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyException.#ctor(System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Proxy.ProxyException"/>.
            </summary>
            <param name="message">A String contains the error message.</param>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyException.#ctor(System.String,System.Exception)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Proxy.ProxyException"/>.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.LoggerDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.LoggerDictionary.#ctor">
            <summary>
            Initializes a new instance of the LoggerDictionaryclass.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.DebugAppender">
            <summary>
            Represents an appender is only enabled when debugging.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.DebugAppender.#ctor">
            <summary>
            Initializes a new instance of the DebugAppender class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.DebugAppender.Append(Aspose.Network.Logging.LogEntry)">
            <summary>
            Appends the specified log entry to the appender.
            </summary>
            <param name="entry">The log entry.</param>
        </member>
        <member name="T:Aspose.Network.Logging.ConsoleAppender">
            <summary>
            Represents an appender for console output.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.ConsoleAppender.#ctor">
            <summary>
            Initializes a new instance of the ConsoleAppender class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.ConsoleAppender.Append(Aspose.Network.Logging.LogEntry)">
            <summary>
            Appends the specified log entry to the appender.
            </summary>
            <param name="entry">The log entry.</param>
        </member>
        <member name="T:Aspose.Network.Icmp.InformationReplyMessage">
            <summary>
            Represents the informaton reply message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.InformationReplyMessage.#ctor">
            <summary>
            Initializes a new instance of the InformationReplyMessage class.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.InformationReplyMessage.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.InformationReplyMessage.SequenceNumber">
            <summary>
            Gets or sets the sequence number.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.EchoCompletedEventHandler">
            <summary>
            Represents the method that will handle the EchoCompleted event of an IcmpClient object.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.RPResourceRecord">
            <summary>
            Represents a RP DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.RPResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.RPResourceRecord">RPResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.RPResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.RPResourceRecord">RPResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.RPResourceRecord.Text">
            <summary>
            Gets or sets the text
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.RPResourceRecord.ResponsiblePerson">
            <summary>
            Gets or sets the responsible persion
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.NSAPPTRResourceRecord">
            <summary>
            Represents a NSAPPTR DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.NSAPPTRResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.NSAPPTRResourceRecord">NSAPPTRResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.NSAPPTRResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.NSAPPTRResourceRecord">NSAPPTRResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.NSAPPTRResourceRecord.NSAPPointer">
            <summary>
            Gets or sets the NSA pointer
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.QueryClass">
            <summary>
            Represents the CLASS fields appear in resource records.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryClass.CH">
            <summary>
            Chaos query class.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryClass.CS">
            <summary>
            CSNET class query class. CSNET class is Obsolete.
            </summary>		
        </member>
        <member name="F:Aspose.Network.Dns.QueryClass.HS">
            <summary>
            Hesiod query class.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.QueryClass.IN">
            <summary>
            Internet query class.
            </summary>		
        </member>
        <member name="T:Aspose.Network.Dns.OptionCode">
            <summary>
            Represents the kind of query in the message. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.OptionCode.Standard">
            <summary>
            Standard query
            </summary>		
        </member>
        <member name="F:Aspose.Network.Dns.OptionCode.Inverse">
            <summary>
            Inverse query
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.OptionCode.Notify">
            <summary>
            Notify query
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.OptionCode.Status">
            <summary>
            Server status request
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.OptionCode.Update">
            <summary>
            Update request
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.TransferEncoding">
            <summary>
            Specifies the Content-Transfer-Encoding header information for an e-mail message attachment.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.TransferEncoding.Base64">
            <summary>
            Encodes stream-based data. See RFC 2406 Section 6.8.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.TransferEncoding.Binary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.TransferEncoding.EightBit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.TransferEncoding.QuotedPrintable">
            <summary>
            Encodes data that consists of printable characters in the US-ASCII character set. See RFC 2406 Section 6.7.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.TransferEncoding.SevenBit">
            <summary>
            Used for data that is not encoded. The data is in 7-bit US-ASCII characters with a total line length of no longer than 1000 characters. See RFC2406 Section 2.7.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.TransferEncoding.Unknown">
            <summary>
            Indicates that the transfer encoding is unknown.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.ContentDisposition">
            <summary>
            Represents a MIME protocol Content-Disposition header.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.ContentDisposition.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.ContentDisposition"/> class.
            </summary>
            <param name="dispositionType">Type of the disposition.</param>
        </member>
        <member name="M:Aspose.Network.Mime.ContentDisposition.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Aspose.Network.Mime.ContentDisposition.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.Mime.ContentDisposition.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.Mime.ContentDisposition.Disposition">
            <summary>
            Gets the disposition.
            </summary>
            <value>The disposition.</value>
        </member>
        <member name="P:Aspose.Network.Mime.ContentDisposition.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Aspose.Network.Mime.ContentDisposition.Inline">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Aspose.Network.Mime.ContentDisposition"/> is inline.
            </summary>
            <value><c>true</c> if inline; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Aspose.Network.Mail.Attachment">
            <summary>
            Represents an attachment to an e-mail.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Attachment"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Attachment"/> class.
            </summary>
            <param name="contentStream">The content stream.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Attachment"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Attachment"/> class.
            </summary>
            <param name="contentStream">The content stream.</param>
            <param name="name">The name.</param>
            <param name="mediaType">Type of the media.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Attachment"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="name">The name.</param>
            <param name="mediaType">Type of the media.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.CreateAttachmentFromString(System.String,Aspose.Network.Mime.ContentType)">
            <summary>
            Creates a mail attachment using the content from the specified string, and the specified ContentType. 
            </summary>
            <param name="content">A String that contains the content for this attachment.</param>
            <param name="contentType">A ContentType object that represents the Multipurpose Internet Mail Exchange (MIME) protocol Content-Type header to be used</param>
            <returns>An object of type Attachment. </returns>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.CreateAttachmentFromString(System.String,System.String)">
            <summary>
            Creates a mail attachment using the content from the specified string, and the specified MIME content type name. 
            </summary>
            <param name="content">A String that contains the content for this attachment.</param>
            <param name="name">The MIME content type name value in the content type associated with this attachment.</param>
            <returns>An object of type Attachment. </returns>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.CreateAttachmentFromString(System.String,System.String,System.Text.Encoding,System.String)">
            <summary>
            Creates a mail attachment using the content from the specified string, the specified MIME content type name, character encoding, and MIME header information for the attachment. 
            </summary>
            <param name="content">A String that contains the content for this attachment.</param>
            <param name="name">The MIME content type name value in the content type associated with this attachment.</param>
            <param name="contentEncoding">Specified the ContentEncoding.</param>
            <param name="mediaType">A String that contains the MIME Content-Header information for this attachment</param>
            <returns>An object of type Attachment. </returns>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.Save(System.IO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.Save(System.String)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Attachment.SaveRawContent(System.IO.Stream)">
            <summary>
            Saves the content of the raw.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Aspose.Network.Mail.Attachment.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Attachment.ContentDisposition">
            <summary>
            Gets the content disposition.
            </summary>
            <value>The content disposition.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Attachment.NameEncoding">
            <summary>
            Gets or sets the name encoding.
            <remarks>This property is only for backwards compatibility</remarks>
            </summary>
            <value>The name encoding.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Attachment.EmptyAttachment">
            <summary>
            Gets the empty attachment.
            </summary>
            <value>The empty attachment.</value>
        </member>
        <member name="T:Aspose.iCalendar.License">
            <summary>
            Provides methods to license the component.
            </summary>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code>
            </ms>
            
            <java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code>
            </java>
            
            </example>
        </member>
        <member name="M:Aspose.iCalendar.License.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.iCalendar.License"/> class.
            </summary>
        </member>
        <member name="M:Aspose.iCalendar.License.SetLicense(System.IO.Stream)">
            <summary>
            Sets the license.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Aspose.iCalendar.License.SetLicense(System.String)">
            <summary>
            Sets the license.
            </summary>
            <param name="licenseName">Name of the license.</param>
        </member>
        <member name="T:Aspose.Network.Imap.ImapMessageInfo">
            <summary>
            Represents a Imap message object..
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.CC">
            <summary>
            Gets the list of addresses of others who are to receive the message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Date">
            <summary>
            Gets the origination date of this message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Flags">
            <summary>
            Gets the message flags. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.From">
            <summary>
            Gets the list of authors of this message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Headers">
            <summary>
            Gets the list of headers of this message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.HeadersParsingError">
            <summary>
            Gets an error that occured during message headers parsing.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Answered">
            <summary>
            Returns true if the Flags property contains the Answered flag. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Deleted">
            <summary>
            Returns true if the Flags property contains the Deleted flag. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Draft">
            <summary>
            Returns true if the Flags property contains the Draft flag. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Flagged">
            <summary>
            Returns true if the Flags property contains the Flagged flag. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Recent">
            <summary>
            Returns true if the Flags property contains the Recent flag.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Readed">
            <summary>
            Returns true if the Flags property contains the Read flag
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Length">
            <summary>
            Gets the length of the message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.ReceivedDate">
            <summary>
            Gets the received date of this message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.ReplyTo">
            <summary>
            Gets the list of addresses that should receive replies to this message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Sender">
            <summary>
            Gets the sender of this message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.SequenceNumber">
            <summary>
            Gets the message sequence number.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.Subject">
            <summary>
            Gets the subject of the message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.To">
            <summary>
            Gets the list of addresses of primary recipients of the message. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfo.UniqueId">
            <summary>
            Gets the message unique ID. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Imap.ImapMessageInfoCollection">
            <summary>
            Provides a container for a collection of ImapMessageInfo objects
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapMessageInfoCollection.#ctor">
            <summary>
            Initializes a new instance of the ImapMessageCollection class. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapMessageInfoCollection.Add(Aspose.Network.Imap.ImapMessageInfo)">
            <summary>
            Adds the ImapMessageInfo to the ImapMessageCollection. 
            </summary>
            <param name="item">The ImapMessageInfo to be added.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapMessageInfoCollection.Remove(Aspose.Network.Imap.ImapMessageInfo)">
            <summary>
            Remove specifed ImapMessageInfo object from this collection.
            </summary>
            <param name="item">The ImapMessageInfo object to be remove.</param>
            <returns>False if this collection doesn't contains specified object.True if removed successfully.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapMessageInfoCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a ImapMessageInfo in specified index from this collection.
            </summary>
            <param name="index">The index of the message to be remove.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapMessageInfoCollection.Insert(System.Int32,Aspose.Network.Imap.ImapMessageInfo)">
            <summary>
            Insert the specified ImapMessagInfo object at the specified index.
            </summary>
            <param name="index">The index that the specified object will be inserted into.</param>
            <param name="item">The ImapMessagInfo object to be inserted.</param>
        </member>
        <member name="P:Aspose.Network.Imap.ImapMessageInfoCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Aspose.Network.Imap.ImapException">
            <summary>
            The exception that is thrown when an error occurs while using Imap component.		
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapException.#ctor">
            <summary>
            Initializes a new instance of the ImapException class. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ImapException class with the specified error message. 
            </summary>
            <param name="message">The specified error message. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ImapException class with the specified error message and a reference to the inner exception that is the cause of this exception. 
            </summary>
            <param name="message">The specified error message</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.ValidationException">
            <summary> An exception thrown during validation.
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ValidationException.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ValidationException.#ctor(System.String)">
            <summary> Constructor with message.</summary>
            <param name="message">a message
            </param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.TimeZone">
            <summary> A Java timezone implementation based on an underlying VTimeZone
            definition.
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.TimeZone.#ctor(Aspose.Network.iCalendar.ObjectModel.VTimeZone)">
            <summary> Constructs a new instance based on the specified VTimeZone.</summary>
            <param name="vTimeZone">
            </param>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.TimeZone.CurrentTimeZone">
            <summary>
            Gets the current time zone.
            </summary>
            <value>The current time zone.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.TimeZone.VTimeZone">
            <returns> Returns the VTimeZone backing this instance.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.TimeZone.TimeZoneId">
            <summary>
            Gets the time zone id.
            </summary>
            <value>The time zone id.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.TimeZone.DaylightName">
            <summary>
            Gets the name of the daylight.
            </summary>
            <value>The name of the daylight.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.TimeZone.StandardName">
            <summary>
            Gets the name of the standard.
            </summary>
            <value>The name of the standard.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzName">
            <summary> Defines a TZNAME iCalendar component property.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzName.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzName.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzName"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzName.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzName"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzName.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzName.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Due">
            <summary> Defines a DUE iCalendar component property.
            
            <pre>
            4.8.2.3 Date/Time Due
            
            Property Name: DUE
            
            Purpose: This property defines the date and time that a to-do is
            expected to be completed.
            
            Value Type: The default value type is DATE-TIME. The value type can
            be set to a DATE value type.
            
            Property Parameters: Non-standard, value data type, time zone
            identifier property parameters can be specified on this property.
            
            Conformance: The property can be specified once in a &quot;VTODO&quot; calendar
            component.
            
            Description: The value MUST be a date/time equal to or after the
            DTSTART value, if specified.
            
            Format Definition: The property is defined by the following notation:
            
            due        = &quot;DUE&quot; dueparam&quot;:&quot; dueval CRLF
            
            dueparam   = *(
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; &quot;VALUE&quot; &quot;=&quot; (&quot;DATE-TIME&quot; / &quot;DATE&quot;)) /
            (&quot;;&quot; tzidparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            *(&quot;;&quot; xparam)
            
            )
            
            
            
            dueval     = date-time / date
            ;Value MUST match value type
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Due.#ctor">
            <summary>
            Default constructor. The time value is initialised to the time of instantiation.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Due.#ctor(Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new DUE property initialised with the specified timezone.
            </summary>
            <param name="timezone">initial timezone</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Due.#ctor(System.String)">
            <summary>
            Creates a new instance initialised with the parsed value.
            </summary>
            <param name="value">the DUE value string to parse</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Due.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new DUE property initialised with the specified timezone and value.
            </summary>
            <param name="value">a string representation of a DUE value</param>
            <param name="timezone">initial timezone</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Due.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Due"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Due.#ctor(Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Due.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="date">The date.</param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Description">
            <summary> Defines a DESCRIPTION iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Description.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Description.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Description"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Description.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Description"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Description.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Description.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Action">
            <summary>
            Defines an ACTION iCalendar component property.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Action.Audio">
            <summary>
            Audio Action.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Action.Display">
            <summary>
            Display Action.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Action.Email">
            <summary>
            Email Action.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Action.Procedure">
            <summary>
            Procedure Action.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Action.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Action.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Action"/> class.
            </summary>
            <param name="aValue">a value string for this component</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Action.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Action"/> class.
            </summary>
            <param name="aList">a list of parameters for this component</param>
            <param name="aValue">a value string for this component</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Action.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="aValue">a string representation of the property value</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Action.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.SentBy">
            <summary> Defines a Sent By parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.SentBy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.SentBy"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.SentBy.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.SentBy"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.SentBy.GetValue">
            <summary>
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Parameters.SentBy.Address">
            <returns> Returns the address.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Language">
            <summary> Defines a Language parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Language.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Language"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Language.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Calendar">
            <summary> Defines an iCalendar calendar.
            
            <pre>
            4.6 Calendar Components
            
            The body of the iCalendar object consists of a sequence of calendar
            properties and one or more calendar components. The calendar
            properties are attributes that apply to the calendar as a whole. The
            calendar components are collections of properties that express a
            particular calendar semantic. For example, the calendar component can
            specify an event, a to-do, a journal entry, time zone information, or
            free/busy time information, or an alarm.
            
            The body of the iCalendar object is defined by the following
            notation:
            
            icalbody   = calprops component
            
            calprops   = 2*(
            
            ; 'prodid' and 'version' are both REQUIRED,
            ; but MUST NOT occur more than once
            
            prodid /version /
            
            ; 'calscale' and 'method' are optional,
            ; but MUST NOT occur more than once
            
            calscale        /
            method          /
            
            x-prop
            
            )
            
            component  = 1*(eventc / todoc / journalc / freebusyc /
            / timezonec / iana-comp / x-comp)
            
            iana-comp  = &quot;BEGIN&quot; &quot;:&quot; iana-token CRLF
            
            1*contentline
            
            &quot;END&quot; &quot;:&quot; iana-token CRLF
            
            x-comp     = &quot;BEGIN&quot; &quot;:&quot; x-name CRLF
            
            1*contentline
            
            &quot;END&quot; &quot;:&quot; x-name CRLF
            </pre>
            
            Example 1 - Creating a new calendar:
            
            <pre><code>
            Calendar calendar = new Calendar();
            calendar.getProperties().add(new ProdId(&quot;-//Ben Fortuna//iCal4j 1.0//EN&quot;));
            calendar.getProperties().add(Version.VERSION_2_0);
            calendar.getProperties().add(CalScale.GREGORIAN);
            
            // Add events, etc..
            </code></pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.#ctor(Aspose.Network.iCalendar.ObjectModel.ComponentCollection)">
            <summary> Constructs a new calendar with no properties and the specified components.</summary>
            <param name="components">a list of components to add to the calendar
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection,Aspose.Network.iCalendar.ObjectModel.ComponentCollection)">
            <summary> Constructor.</summary>
            <param name="p">a list of properties
            </param>
            <param name="c">a list of components
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.#ctor(Aspose.Network.iCalendar.ObjectModel.Calendar)">
            <summary>
            Creates a deep copy of the specified calendar.
            </summary>
            <param name="c">the calendar to copy</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.GetComponents">
            <summary>
            Gets the components.
            </summary>
            <returns>Returns the components.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.GetComponents(System.String)">
            <summary>
            Convenience method for retrieving a list of named components.
            </summary>
            <param name="name">name of components to retrieve</param>
            <returns>
            a component list containing only components with the specified name
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.GetComponent(System.String)">
            <summary>
            Convenience method for retrieving a named component.
            </summary>
            <param name="name">name of the component to retrieve</param>
            <returns>
            the first matching component in the component list with the specified name
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.GetProperties">
            <summary>
            Gets the properties.
            </summary>
            <returns>Returns the properties.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.GetProperties(System.String)">
            <summary>
            Convenience method for retrieving a list of named properties.
            </summary>
            <param name="name">name of properties to retrieve</param>
            <returns>
            a property list containing only properties with the specified name
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.GetProperty(System.String)">
            <summary>
            Convenience method for retrieving a named property.
            </summary>
            <param name="name">name of the property to retrieve</param>
            <returns>
            the first matching property in the property list with the specified name
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.validate">
            <summary>
            Perform validation on the calendar, its properties and its components in its current state.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.validate(System.Boolean)">
            <summary>
            Perform validation on the calendar in its current state.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.validateProperties">
            <summary>
            Invoke validation on the calendar properties in its current state.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Calendar.validateComponents">
            <summary>
            Invoke validation on the calendar components in its current state.
            </summary>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Calendar.ProductId">
            <summary> Returns the mandatory prodid property.</summary>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Calendar.Version">
            <summary> Returns the mandatory version property.</summary>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Calendar.CalendarScale">
            <summary> Returns the optional calscale property.</summary>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Calendar.Method">
            <summary> Returns the optional method property.</summary>
            <returns>
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.DefaultCalendarParserFactory">
            <summary> Default factory implementation for calendar parsers.</summary>
            <author>  
            </author>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.BigInt">
            <summary>
            arbitrary precision integers
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.BigInt.Create(System.Byte[])">
            <summary>
            Create a BigInteger from a little-endian twos-complement byte array
            (inverse of ToByteArray())
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.BigInt.GetBits">
            <summary>
            Return the magnitude of this BigInteger as an array of zero or more uints.
            Element zero is the value of the least significant four bytes, element one is
            the value of the four next most significant bytes, etc.
            
            The returned data is the unsigned magnitude of the number. To determine the sign,
            use GetSign().
            
            It is guaranteed that the highest element of the returned array is never zero.
            This means that if the value of this BigInteger is zero, a zero-length array
            is returned.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.BigInt.GetSign">
            <summary>
            Return the sign of this BigInteger: -1, 0, or 1.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.BigInt.makeTwosComplement(System.UInt32[])">
            <summary>
            Do an in-place twos complement of d and also return the result.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.BigInt.ToByteArray">
            <summary>
            Return the value of this BigInteger as a little-endian twos-complement
            byte array, using the fewest number of bytes possible. If the value is zero,
            return an array of one byte whose element is 0x00.
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.RecipientCollection">
            <summary>
            Represents a colleciton of recipients for a mail message.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.RecipientCollection.Add(Aspose.Windows.Forms.Recipient)">
            <summary>
            Adds the specified recipient to this collection.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.RecipientCollection.Add(System.String)">
            <summary>
            Adds a new recipient with the specified address to this collection.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.RecipientCollection.Add(System.String,System.String)">
            <summary>
            Adds a new recipient with the specified address and display name to this collection.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.RecipientCollection.Add(System.String,Aspose.Windows.Forms.RecipientType)">
            <summary>
            Adds a new recipient with the specified address and recipient type to this collection.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.RecipientCollection.Add(System.String,System.String,Aspose.Windows.Forms.RecipientType)">
            <summary>
            Adds a new recipient with the specified address, display name and recipient type to this collection.
            </summary>
        </member>
        <member name="P:Aspose.Windows.Forms.RecipientCollection.Item(System.Int32)">
            <summary>
            Returns the recipient stored in this collection at the specified index.
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.RecipientCollection.InteropRecipientCollection">
            <summary>
            Struct which contains an interop representation of a colleciton of recipients.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.RecipientCollection.InteropRecipientCollection.#ctor(Aspose.Windows.Forms.RecipientCollection)">
            <summary>
            Default constructor for creating InteropRecipientCollection.
            </summary>
            <param name="outer"></param>
        </member>
        <member name="M:Aspose.Windows.Forms.RecipientCollection.InteropRecipientCollection.Dispose">
            <summary>
            Disposes of resources.
            </summary>
        </member>
        <member name="T:Aspose.Network.Proxy.ProxySocketExceptionStatus">
            <summary>
            Represents the exception status of ProxySocket.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.ConnectFailure">
            <summary>
            ConnectFailure.s
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.ConnectionClosed">
            <summary>
            ConnectionClosed.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.SocketError">
            <summary>
            SocketError.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.NameResolutionFailure">
            <summary>
            NameResolutionFailure.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.ProtocolError">
            <summary>
            ProtocolError.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.ProxyNameResolutionFailure">
            <summary>
            ProxyNameResolutionFailure.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.ReceiveFailure">
            <summary>
            ReceiveFailure.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.UnclassifiableError">
            <summary>
            UnclassifiableError.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.ServerProtocolViolation">
            <summary>
            ServerProtocolViolation.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.AsyncError">
            <summary>
            AsyncError.
            </summary>
        </member>
        <member name="F:Aspose.Network.Proxy.ProxySocketExceptionStatus.NotConnected">
            <summary>
            NotConnected.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.Logger">
            <summary>
            Provides the logging functionality.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.Logger.IsEnabled(Aspose.Network.Logging.LogLevel)">
            <summary>
            Determines if logging is enabled for the specified level.
            </summary>
            <param name="level">level to be checked</param>
            <returns><see langword="true" /> if logging is enabled for the specified level, otherwise it returns <see langword="false" />.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.Logger.Log(System.String,System.Exception,Aspose.Network.Logging.LogLevel)">
            <summary>
            Logs the specified message and exception if the log level is enabled.
            </summary>
            <param name="message">The message to log.</param>
            <param name="exception">The exception to log.</param>
            <param name="level">The log level.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Logger.Log(System.String,Aspose.Network.Logging.LogLevel)">
            <summary>
            Logs the specified message if the log level is enabled.
            </summary>
            <param name="message">The message to log.</param>
            <param name="level">The log level.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Logger.Write(System.String,System.Exception)">
            <summary>
            Writes the specified message and exception to appenders.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception to write.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Logger.Write(System.String)">
            <summary>
            Writes the specified message to appenders.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Logger.Write(System.Object)">
            <summary>
            Writes the specified message to appenders.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Logger.WriteIf(System.Boolean,System.String)">
            <summary>
            Writes the specified message to appenders if condition is true.
            </summary>
            <param name="condition">The condition to test.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Logger.WriteIf(System.Boolean,System.Object)">
            <summary>
            Writes the specified message to appenders if condition is true.
            </summary>
            <param name="condition">The condition to test.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Aspose.Network.Logging.Logger.WriteIf(System.Boolean,System.String,System.Exception)">
            <summary>
            Writes the specified message and exception to appenders if condition is true.
            </summary>
            <param name="condition">The condition to test.</param>
            <param name="message">The message to write.</param>
            <param name="exception">The exception to write.</param>
        </member>
        <member name="P:Aspose.Network.Logging.Logger.Appenders">
            <summary>
            Gets or sets the appender list.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.Logger.Severity">
            <summary>
            Gets or sets severity.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.Logger.Name">
            <summary>
            Gets or sets name.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.Logger.Debug">
            <summary>
            Gets the debug logger.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.AppenderCollection">
            <summary>
            Represents the collecton for Appender objects.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.AppenderCollection.#ctor">
            <summary>
            Initializes a new instance of the AppenderCollection class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.AppenderCollection.Add(Aspose.Network.Logging.IAppender)">
            <summary>
            Adds an IAppender object to the end of collection.
            </summary>
            <param name="value">The IAppender to be added to the end of the collection. The value can be null. </param>
            <returns>The index at which the value has been added.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.AppenderCollection.Contains(Aspose.Network.Logging.IAppender)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="item">The Object to locate in the ArrayList. The value can be null. </param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Logging.AppenderCollection.IndexOf(Aspose.Network.Logging.IAppender)">
            <summary>
            Searches for the specified IAppender and returns the zero-based index of the first occurrence within the entire collection.
            </summary>
            <param name="value">The IAppender to locate in the ArrayList. The value can be null. </param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.AppenderCollection.Insert(System.Int32,Aspose.Network.Logging.IAppender)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The IAppender to insert. The value can be null. </param>
            <param name="value">The zero-based index at which value should be inserted. </param>
        </member>
        <member name="M:Aspose.Network.Logging.AppenderCollection.Remove(Aspose.Network.Logging.IAppender)">
            <summary>
            Removes the first occurrence of a specific IAppender object from the collection.
            </summary>
            <param name="value">The IAppender to remove from the ArrayList. The value can be null. </param>
        </member>
        <member name="T:Aspose.Network.Icmp.RedirectMessage">
            <summary>
            Represents a redirect message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.RedirectMessage.#ctor">
            <summary>
            Initializes a new instance of the NDRReportMailMessageInterpretor class.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.RedirectMessage.GatewayAddress">
            <summary>
            Gets the gateway address.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.X25ResourceRecord">
            <summary>
            Represents a X25 DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.X25ResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.X25ResourceRecord">X25ResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.X25ResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.X25ResourceRecord">X25ResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.X25ResourceRecord.PSDNAddress">
            <summary>
            Gets or sets the PSDN address
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.MDResourceRecord">
            <summary>
            Represents a MD DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MDResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MDResourceRecord">MDResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MDResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MDResourceRecord">MDResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.MDResourceRecord.MailAgent">
            <summary>
            Gets or sets the mail agent
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.MailAddressCollection">
            <summary>
            Store e-mail addresses that are associated with an e-mail message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailAddressCollection"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailAddressCollection"/> class.
            </summary>
            <param name="addresses">The addresses.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.Add(Aspose.Network.Mail.MailAddress)">
            <summary>
            Adds the specified address.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.Add(System.String)">
            <summary>
            Adds the specified address.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.CopyTo(Aspose.Network.Mail.MailAddress[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.Contains(Aspose.Network.Mail.MailAddress)">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="i">The i.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.op_Implicit(Aspose.Network.Mail.MailAddress)~Aspose.Network.Mail.MailAddressCollection">
            <summary>
            Performs an implicit conversion from <see cref="T:Aspose.Network.Mail.MailAddress"/> to <see cref="T:Aspose.Network.Mail.MailAddressCollection"/>.
            </summary>
            <param name="mailbox">The mailbox.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.op_Implicit(System.String)~Aspose.Network.Mail.MailAddressCollection">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Aspose.Network.Mail.MailAddressCollection"/>.
            </summary>
            <param name="addresses">The addresses.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddressCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.Mail.MailAddressCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Mail.MailAddress"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Aspose.Network.Mail.MailAddressCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Status">
            <summary> Defines a STATUS iCalendar component property.
            
            <pre>
            4.8.1.11 Status
            
            Property Name: STATUS
            
            Purpose: This property defines the overall status or confirmation for
            the calendar component.
            
            Value Type: TEXT
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: This property can be specified in &quot;VEVENT&quot;, &quot;VTODO&quot; or
            &quot;VJOURNAL&quot; calendar components.
            
            Description: In a group scheduled calendar component, the property is
            used by the &quot;Organizer&quot; to provide a confirmation of the event to the
            &quot;Attendees&quot;. For example in a &quot;VEVENT&quot; calendar component, the
            &quot;Organizer&quot; can indicate that a meeting is tentative, confirmed or
            cancelled. In a &quot;VTODO&quot; calendar component, the &quot;Organizer&quot; can
            indicate that an action item needs action, is completed, is in
            process or being worked on, or has been cancelled. In a &quot;VJOURNAL&quot;
            calendar component, the &quot;Organizer&quot; can indicate that a journal entry
            is draft, final or has been cancelled or removed.
            
            Format Definition: The property is defined by the following notation:
            
            status     = &quot;STATUS&quot; statparam] &quot;:&quot; statvalue CRLF
            
            statparam  = *(&quot;;&quot; xparam)
            
            statvalue  = &quot;TENTATIVE&quot;           ;Indicates event is
            ;tentative.
            / &quot;CONFIRMED&quot;           ;Indicates event is
            ;definite.
            / &quot;CANCELLED&quot;           ;Indicates event was
            ;cancelled.
            ;Status values for a &quot;VEVENT&quot;
            
            statvalue  =/ &quot;NEEDS-ACTION&quot;       ;Indicates to-do needs action.
            / &quot;COMPLETED&quot;           ;Indicates to-do completed.
            / &quot;IN-PROCESS&quot;          ;Indicates to-do in process of
            / &quot;CANCELLED&quot;           ;Indicates to-do was cancelled.
            ;Status values for &quot;VTODO&quot;.
            
            statvalue  =/ &quot;DRAFT&quot;              ;Indicates journal is draft.
            / &quot;FINAL&quot;               ;Indicates journal is final.
            / &quot;CANCELLED&quot;           ;Indicates journal is removed.
            ;Status values for &quot;VJOURNAL&quot;.
            
            Example: The following is an example of this property for a &quot;VEVENT&quot;
            calendar component:
            
            STATUS:TENTATIVE
            
            The following is an example of this property for a &quot;VTODO&quot; calendar
            component:
            
            STATUS:NEEDS-ACTION
            
            The following is an example of this property for a &quot;VJOURNAL&quot;
            calendar component:
            
            STATUS:DRAFT
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Status.Tentative">
            <summary>
            Tentative.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Status.Confirmed">
            <summary>
            Confirmed.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Status.Cancelled">
            <summary>
            Cancelled.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Status.NeedsAction">
            <summary>
            NeedsAction.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Status.Completed">
            <summary>
            Completed.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Status.InProcess">
            <summary>
            InProcess.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Status.Draft">
            <summary>
            Draft.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Status.Final">
            <summary>
            Final.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Status.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Status.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Status"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Status.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Status"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Status.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Status.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.CalScale">
            <summary> Defines a CALSCALE iCalendar property.</summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.CalScale.Gregorian">
            <summary>
            Gregorian.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.CalScale.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.CalScale.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.CalScale"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.CalScale.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.CalScale"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.CalScale.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.CalScale.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Period">
            <summary> Defines a period of time. A period may be specified as either a start date
            and end date, or a start date and duration. NOTE: End dates and durations are
            implicitly derived when not explicitly specified. This means that you cannot
            rely on the returned values from the getters to deduce whether a period has
            an explicit end date or duration.
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.#ctor(System.String)">
            <summary> Constructor.
            
            </summary>
            <param name="aValue">a string representation of a period
            </param>
            <throws>  ParseException </throws>
            <summary>             where the specified string is not a valid representation
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime,Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <summary> Constructs a new period with the specied start and end date.
            
            </summary>
            <param name="start">the start date of the period
            </param>
            <param name="end">the end date of the period
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime,Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary> Constructs a new period with the specified start date and duration.
            
            </summary>
            <param name="start">the start date of the period
            </param>
            <param name="duration">the duration of the period
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.includes(System.DateTime@)">
            <summary> Determines if the specified date occurs within this period (inclusive of
            period start and end).
            </summary>
            <param name="date">
            </param>
            <returns> true if the specified date occurs within the current period
            
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.includes(System.DateTime@,System.Boolean)">
            <param name="date">
            </param>
            <param name="inclusive">
            </param>
            <returns>
            </returns>
            <deprecated> use {@link Period#includes(Date, int)} instead.
            </deprecated>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.before(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary> Decides whether this period is completed before the given period starts.
            
            </summary>
            <param name="period">a period that may or may not start after this period ends
            </param>
            <returns> true if the specified period starts after this periods ends,
            otherwise false
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.after(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary> Decides whether this period starts after the given period ends.
            
            </summary>
            <param name="period">a period that may or may not end before this period starts
            </param>
            <returns> true if the specified period end before this periods starts,
            otherwise false
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.intersects(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary> Decides whether this period intersects with another one.
            
            </summary>
            <param name="period">a possible intersecting period
            </param>
            <returns> true if the specified period intersects this one, false
            otherwise.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.adjacent(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary> Decides whether these periods are serial without a gap.
            
            </summary>
            <returns> true if one period immediately follows the other, false otherwise
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.contains(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary> Decides whether the given period is completely contained within this one.
            
            </summary>
            <param name="period">the period that may be contained by this one
            </param>
            <returns> true if this period covers all the dates of the specified period,
            otherwise false
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.add(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary> Creates a period that encompasses both this period and another one. If
            the other period is null, return a copy of this period. NOTE: Resulting
            periods are specified by explicitly setting a start date and end date
            (i.e. durations are implied).
            
            </summary>
            <param name="period">the period to add to this one
            </param>
            <returns> a period
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.subtract(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary> Creates a set of periods resulting from the subtraction of the specified
            period from this one. If the specified period is completely contained
            in this period, the resulting list will contain two periods. Otherwise
            it will contain one. If the specified period does not interest this period
            a list containing this period is returned. If this period is completely
            contained within the specified period an empty period list is returned.
            </summary>
            <param name="period">
            </param>
            <returns> a list containing zero, one or two periods.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.CompareTo(System.Object)">
            <summary>
            Compares to.
            </summary>
            <param name="arg0">The arg0.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Period.CompareTo(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary>
            Compares the specified period with this period.
            </summary>
            <param name="period">The period.</param>
            <returns></returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Period.Duration">
            <summary> Returns the duration of this period. If an explicit duration is not
            specified, the duration is derived from the end date.
            
            </summary>
            <returns> the duration of this period in milliseconds.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Period.End">
            <summary> Returns the end date of this period. If an explicit end date is not
            specified, the end date is derived from the duration.
            
            </summary>
            <returns> the end date of this period.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Period.Start">
            <returns> Returns the start.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Period.Empty">
            <summary> An empty period is one that consumes no time.</summary>
            <returns> true if this period consumes no time, otherwise false
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Period.Utc">
            <summary>
            Updates the start and (possible) end times of this period to reflect
            the specified UTC timezone status.
            </summary>
            <value><c>true</c> if UTC; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Period.TimeZone">
            <summary>
            Updates the start and (possible) end times of this period to reflect
            the specified timezone status.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.VEvent">
            <summary> Defines an iCalendar VEVENT component.
            
            <pre>
            4.6.1 Event Component
            
            Component Name: &quot;VEVENT&quot;
            
            Purpose: Provide a grouping of component properties that describe an
            event.
            
            Format Definition: A &quot;VEVENT&quot; calendar component is defined by the
            following notation:
            
            eventc     = &quot;BEGIN&quot; &quot;:&quot; &quot;VEVENT&quot; CRLF
            eventprop *alarmc
            &quot;END&quot; &quot;:&quot; &quot;VEVENT&quot; CRLF
            
            eventprop  = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            class / created / description / dtstart / geo /
            last-mod / location / organizer / priority /
            dtstamp / seq / status / summary / transp /
            uid / url / recurid /
            
            ; either 'dtend' or 'duration' may appear in
            ; a 'eventprop', but 'dtend' and 'duration'
            ; MUST NOT occur in the same 'eventprop'
            
            dtend / duration /
            
            ; the following are optional,
            ; and MAY occur more than once
            
            attach / attendee / categories / comment /
            contact / exdate / exrule / rstatus / related /
            resources / rdate / rrule / x-prop
            
            )
            </pre>
            
            Example 1 - Creating a new all-day event:
            
            <pre><code>
            java.util.Calendar cal = java.util.Calendar.getInstance();
            cal.set(java.util.Calendar.MONTH, java.util.Calendar.DECEMBER);
            cal.set(java.util.Calendar.DAY_OF_MONTH, 25);
            
            VEvent christmas = new VEvent(cal.getTime(), &quot;Christmas Day&quot;);
            
            // initialise as an all-day event..
            christmas.getProperties().getProperty(Property.DTSTART).getParameters().add(
            Value.DATE);
            
            // add timezone information..
            VTimeZone tz = VTimeZone.getDefault();
            TzId tzParam = new TzId(tz.getProperties().getProperty(Property.TZID)
            .getValue());
            christmas.getProperties().getProperty(Property.DTSTART).getParameters().add(
            tzParam);
            </code></pre>
            
            Example 2 - Creating an event of one (1) hour duration:
            
            <pre><code>
            java.util.Calendar cal = java.util.Calendar.getInstance();
            // tomorrow..
            cal.add(java.util.Calendar.DAY_OF_MONTH, 1);
            cal.set(java.util.Calendar.HOUR_OF_DAY, 9);
            cal.set(java.util.Calendar.MINUTE, 30);
            
            VEvent meeting = new VEvent(cal.getTime(), 1000 * 60 * 60, &quot;Progress Meeting&quot;);
            
            // add timezone information..
            VTimeZone tz = VTimeZone.getDefault();
            TzId tzParam = new TzId(tz.getProperties().getProperty(Property.TZID)
            .getValue());
            meeting.getProperties().getProperty(Property.DTSTART).getParameters().add(
            tzParam);
            </code></pre>
            
            Example 3 - Retrieve a list of periods representing a recurring event in a specified range:
            
            <pre><code>
            Calendar weekday9AM = Calendar.getInstance();
            weekday9AM.set(2005, Calendar.MARCH, 7, 9, 0, 0);
            weekday9AM.set(Calendar.MILLISECOND, 0);
            
            Calendar weekday5PM = Calendar.getInstance();
            weekday5PM.set(2005, Calendar.MARCH, 7, 17, 0, 0);
            weekday5PM.set(Calendar.MILLISECOND, 0);
            
            // Do the recurrence until December 31st.
            Calendar untilCal = Calendar.getInstance();
            untilCal.set(2005, Calendar.DECEMBER, 31);
            untilCal.set(Calendar.MILLISECOND, 0);
            
            // 9:00AM to 5:00PM Rule
            Recur recur = new Recur(Recur.WEEKLY, untilCal.getTime());
            recur.getDayList().add(WeekDay.MO);
            recur.getDayList().add(WeekDay.TU);
            recur.getDayList().add(WeekDay.WE);
            recur.getDayList().add(WeekDay.TH);
            recur.getDayList().add(WeekDay.FR);
            recur.setInterval(3);
            recur.setWeekStartDay(WeekDay.MO.getDay());
            RRule rrule = new RRule(recur);
            
            Summary summary = new Summary(&quot;TEST EVENTS THAT HAPPEN 9-5 MON-FRI&quot;);
            
            weekdayNineToFiveEvents = new VEvent();
            weekdayNineToFiveEvents.getProperties().add(rrule);
            weekdayNineToFiveEvents.getProperties().add(summary);
            weekdayNineToFiveEvents.getProperties().add(new DtStart(weekday9AM.getTime()));
            weekdayNineToFiveEvents.getProperties().add(new DtEnd(weekday5PM.getTime()));
            
            // Test Start 04/01/2005, End One month later.
            // Query Calendar Start and End Dates.
            Calendar queryStartDate = Calendar.getInstance();
            queryStartDate.set(2005, Calendar.APRIL, 1, 14, 47, 0);
            queryStartDate.set(Calendar.MILLISECOND, 0);
            Calendar queryEndDate = Calendar.getInstance();
            queryEndDate.set(2005, Calendar.MAY, 1, 11, 15, 0);
            queryEndDate.set(Calendar.MILLISECOND, 0);
            
            // This range is monday to friday every three weeks, starting from
            // March 7th 2005, which means for our query dates we need
            // April 18th through to the 22nd.
            PeriodList periods = weekdayNineToFiveEvents.getPeriods(queryStartDate
            .getTime(), queryEndDate.getTime());
            </code></pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.CalendarComponent">
            <summary>
            Base class for components that may be added to a calendar.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Component">
            <summary>
            Defines an iCalendar component. Subclasses of this class provide additional validation and typed values for specific
            iCalendar components.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.#ctor(System.String)">
            <summary>
            Constructs a new component containing no properties.
            </summary>
            <param name="s">a component name</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary>
            Constructor made protected to enforce the use of <code>ComponentFactory</code> for component instantiation.
            </summary>
            <param name="s">component name</param>
            <param name="p">a list of properties</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.GetProperties">
            <summary>
            Gets the properties.
            </summary>
            <returns>Returns the properties.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.GetProperties(System.String)">
            <summary>
            Convenience method for retrieving a list of named properties.
            </summary>
            <param name="name">name of properties to retrieve</param>
            <returns>
            a property list containing only properties with the specified name
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.GetProperty(System.String)">
            <summary>
            Convenience method for retrieving a named property.
            </summary>
            <param name="name">name of the property to retrieve</param>
            <returns>
            the first matching property in the property list with the specified name
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.Validate">
            <summary>
            Perform validation on a component and its properties.
            </summary>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.validateProperties">
            <summary>
            Invoke validation on the component properties in its current state.
            </summary>
            <throws>  ValidationException where any of the component properties is not in a valid state </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.Copy">
            <summary>
            Create a (deep) copy of this component.
            </summary>
            <returns>the component copy</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Component.calculateRecurrenceSet(Aspose.Network.iCalendar.ObjectModel.Period)">
            <summary> Calculates the recurrence set for this event using the specified period.
            The recurrence set is derived from a combination of the event start date,
            recurrence rules and dates, and exception rules and dates. Note that component
            transparency and anniversary-style dates do not affect the resulting
            intersection.
            </summary>
            <param name="period">
            </param>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Component.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
            <returns> Returns the name.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.CalendarComponent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.CalendarComponent"/> class.
            </summary>
            <param name="name">component name</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.CalendarComponent.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.CalendarComponent"/> class.
            </summary>
            <param name="name">component name</param>
            <param name="properties">component properties</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary> Constructor.</summary>
            <param name="properties">a list of properties
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection,Aspose.Network.iCalendar.ObjectModel.ComponentCollection)">
            <summary> Constructor.</summary>
            <param name="properties">a list of properties
            </param>
            <param name="alarms">a list of alarms
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.#ctor(Aspose.Network.iCalendar.ObjectModel.Date,System.String)">
            <summary> Constructs a new VEVENT instance starting at the specified time with the specified summary.</summary>
            <param name="start">the start date of the new event
            </param>
            <param name="summary">the event summary
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.#ctor(Aspose.Network.iCalendar.ObjectModel.Date,Aspose.Network.iCalendar.ObjectModel.Date,System.String)">
            <summary> Constructs a new VEVENT instance starting and ending at the specified times with the specified summary.</summary>
            <param name="start">the start date of the new event
            </param>
            <param name="end">the end date of the new event
            </param>
            <param name="summary">the event summary
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.#ctor(Aspose.Network.iCalendar.ObjectModel.Date,Aspose.Network.iCalendar.ObjectModel.Dur,System.String)">
            <summary> Constructs a new VEVENT instance starting at the specified times, for the specified duration, with the specified
            summary.
            </summary>
            <param name="start">the start date of the new event
            </param>
            <param name="duration">the duration of the new event
            </param>
            <param name="summary">the event summary
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.GetEndDate">
            <summary> Returns the end date of this event. Where an end date is not available it will be derived from the event
            duration.
            </summary>
            <returns> a DtEnd instance, or null if one cannot be derived
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.GetEndDate(System.Boolean)">
            <summary> Convenience method to pull the DTEND out of the property list. If DTEND was not specified, use the DTSTART +
            DURATION to calculate it.
            </summary>
            <param name="deriveFromDuration">specifies whether to derive an end date from the event duration where an end date is
            not found
            </param>
            <returns> The end for this VEVENT.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VEvent.Copy">
            <summary>
            Overrides default copy method to add support for copying alarm sub-components.
            </summary>
            <returns>the component copy</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Alarms">
            <summary> Returns the list of alarms for this event.</summary>
            <returns> a component list
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Classification">
            <returns> the optional access classification property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Created">
            <returns> the optional creation-time property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Description">
            <returns> the optional description property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.StartDate">
            <summary> Convenience method to pull the DTSTART out of the property list.</summary>
            <returns> The DtStart object representation of the start Date
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.GeographicPos">
            <returns> the optional geographic position property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.LastModified">
            <returns> the optional last-modified property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Location">
            <returns> the optional location property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Organizer">
            <returns> the optional organizer property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Priority">
            <returns> the optional priority property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.DateStamp">
            <returns> the optional date-stamp property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Sequence">
            <returns> the optional sequence number property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Status">
            <returns> the optional status property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Summary">
            <returns> the optional summary property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Transparency">
            <returns> the optional time transparency property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Url">
            <returns> the optional URL property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.RecurrenceId">
            <returns> the optional recurrence identifier property for an event
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Duration">
            <returns> the optional Duration property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VEvent.Uid">
            <summary> Returns the UID property of this component if available.</summary>
            <returns> a Uid instance, or null if no UID property exists
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Standard">
            <summary> Defines an iCalendar standard timezone observance component.
            
            <pre>
            
            standardc  = &quot;BEGIN&quot; &quot;:&quot; &quot;STANDARD&quot; CRLF
            
            tzprop
            
            &quot;END&quot; &quot;:&quot; &quot;STANDARD&quot; CRLF
            
            tzprop     = 3*(
            
            ; the following are each REQUIRED,
            ; but MUST NOT occur more than once
            
            dtstart / tzoffsetto / tzoffsetfrom /
            
            ; the following are optional,
            ; and MAY occur more than once
            
            comment / rdate / rrule / tzname / x-prop
            
            )
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Observance">
            <summary> Defines an iCalendar sub-component representing a timezone observance. Class made abstract such that only Standard
            and Daylight instances are valid.
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Observance.STANDARD">
            <summary> one of 'standardc' or 'daylightc' MUST occur and each MAY occur more than once.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Observance.#ctor(System.String)">
            <summary>
            Constructs a timezone observance with the specified name and no properties.
            </summary>
            <param name="name">the name of this observance component</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Observance.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary>
            Constructor protected to enforce use of sub-classes from this library.
            </summary>
            <param name="name">the name of the time type</param>
            <param name="properties">a list of properties</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Observance.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Observance.CompareTo(System.Object)">
            <summary>
            Compares to.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Observance.CompareTo(Aspose.Network.iCalendar.ObjectModel.Observance)">
            <summary>
            Compares to.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Observance.StartDate">
            <summary>
            Returns the mandatory dtstart property.
            </summary>
            <value>The start date.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Observance.OffsetFrom">
            <summary>
            Returns the mandatory tzoffsetfrom property.
            </summary>
            <value>The offset from.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Observance.OffsetTo">
            <summary>
            Returns the mandatory tzoffsetto property.
            </summary>
            <value>The offset to.</value>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Standard.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Standard.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary> Constructor.</summary>
            <param name="properties">a list of properties
            </param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Daylight">
            <summary> Defines an iCalendar daylight savings timezone observance component.
            
            <pre>
            
            daylightc  = &quot;BEGIN&quot; &quot;:&quot; &quot;DAYLIGHT&quot; CRLF
            
            tzprop
            
            &quot;END&quot; &quot;:&quot; &quot;DAYLIGHT&quot; CRLF
            
            tzprop     = 3*(
            
            ; the following are each REQUIRED,
            ; but MUST NOT occur more than once
            
            dtstart / tzoffsetto / tzoffsetfrom /
            
            ; the following are optional,
            ; and MAY occur more than once
            
            comment / rdate / rrule / tzname / x-prop
            
            )
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Daylight.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Daylight.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary> Constructor.</summary>
            <param name="properties">a list of properties
            </param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.ComponentCollection">
            <summary> Defines a list of iCalendar components.</summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentCollection.#ctor(System.Int32)">
            <summary>
            Creates a new instance with the specified initial capacity.
            </summary>
            <param name="initialCapacity">the initial capacity of the list</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentCollection.#ctor(Aspose.Network.iCalendar.ObjectModel.ComponentCollection)">
            <summary>
            Creates a deep copy of the specified component list.
            </summary>
            <param name="components">The components.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentCollection.GetComponent(System.String)">
            <summary>
            Returns the first component of specified name.
            </summary>
            <param name="aName">name of component to return</param>
            <returns>
            a component or null if no matching component found
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentCollection.GetComponents(System.String)">
            <summary>
            Returns a list containing all components with specified name.
            </summary>
            <param name="name">name of components to return</param>
            <returns>
            a list of components with the matching name
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentCollection.Add(Aspose.Network.iCalendar.ObjectModel.Component)">
            <summary>
            Add a component to the list.
            </summary>
            <param name="component">the component to add</param>
            <returns>true</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentCollection.Add(System.Object)">
            <summary>
            Adds the specified arg0.
            </summary>
            <param name="component">The component.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ComponentCollection.Remove(Aspose.Network.iCalendar.ObjectModel.Component)">
            <summary>
            Remove a component from the list.
            </summary>
            <param name="component">the component to remove</param>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpRecipientRejectedEventHandler">
            <summary>
            Represents the method that will handle the SmtpRecipientRejected event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpRecipientRejectedEventArgs">
            <summary>
            Provides data for the SmtpRecipientRejected event.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpRecipientRejectedEventArgs.Ignore">
            <summary>
            Indicates whether to ignore the reject.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpRecipientRejectedEventArgs.Recipient">
            <summary>
            Gets the recipient being rejected.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpRecipientRejectedEventArgs.Response">
            <summary>
            Gets the smtp server response.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpDeliveryMethod">
            <summary>
            delivery method using by SmtpClient
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.SmtpDeliveryMethod.Network">
            <summary>
            email is sent through network
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.SmtpDeliveryMethod.SpecifiedPickupDirectory">
            <summary>
            email is copied to a folder and sent by external service
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.SmtpDeliveryMethod.PickupDirectoryFromIis">
            <summary>
            email is copied to a folder and sent by IIS service 
            </summary>
        </member>
        <member name="T:Aspose.iCalendar.ByNumberCollection">
            <summary>
            Represents a set of months, weeks, days, hours, minutes or seconds in a recurrence rule.
            </summary>
            <remarks>
            <p>Corresponds to various BYXXX parts such as BYDAY, BYMONTH of a recurrence rule.</p>
            <p>Most of the ByXXX properties of <see cref="T:Aspose.iCalendar.RecurrenceRule"/> are implemented as ByNumberCollection.</p>
            </remarks>
        </member>
        <member name="M:Aspose.iCalendar.ByNumberCollection.Add(System.Int32)">
            <summary>
            Adds a month, week, day, hour, minute or second to the collection.
            </summary>
            <remarks>
            <p>Throws an exception if the value is outside of the valid range for the time unit of this collection.</p>
            </remarks>
            <param name="value">The value to add.</param>
            <returns>The zero-based index of the newly added item.</returns>
        </member>
        <member name="M:Aspose.iCalendar.ByNumberCollection.Add(System.Int32[])">
            <summary>
            Adds an array of month, week, day, hour, minute or second to the collection.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:Aspose.iCalendar.ByNumberCollection.Contains(System.Int32)">
            <summary>
            Determines whether the value is in the collection.
            </summary>
            <param name="value">The value to find.</param>
            <returns>True, if the specified value was found in the collection.</returns>
        </member>
        <member name="M:Aspose.iCalendar.ByNumberCollection.Sort">
            <summary>
            Sorts the elements in the collection.
            </summary>
        </member>
        <member name="P:Aspose.iCalendar.ByNumberCollection.Item(System.Int32)">
            <summary>
            Gets or sets a value in the collection at the specified position.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.TransferStatus">
            <summary>
            Represents the status of the transfering. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.TransferStatus.Uploading">
            <summary>
            Uploading data to the Ftp server.
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.TransferStatus.Downloading">
            <summary>
            Downloading data from the Ftp server.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.TransferBrokenEventArgs">
            <summary>
            Provides data for TransferBroken Event.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.TransferBrokenEventArgs.BrokenException">
            <summary>
            Gets the exception.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.TransferBrokenEventArgs.TransferStatus">
            <summary>
            Gets the tranfer status.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiMessageReader">
            <summary>
            Represents a reader that can read a Microsoft Outlook Message format document.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MapiMessageReader class for the specified file name.
            </summary>
            <param name="path">The complete file path to be read. </param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the MapiMessageReader class for the specified stream.
            </summary>
            <param name="stream">The stream to be read. </param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageReader.ReadMessage">
            <summary>
            Parse the current stream and returns the data as a MapiMessage.
            </summary>
            <returns>The MapiMessage from the input stream.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageReader.ReadAttachments">
            <summary>
            Extracts the attachment from the Outlook Message files.
            </summary>
            <returns>The Attachment collection.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageReader.Dispose">
            <summary>
            Releases the unmanaged resources used by the MapiMessageReader.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageReader.Finalize">
            <summary>
            Frees resources used by the MapiMessageReader class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.PTRResourceRecord">
            <summary>
            Represents a PTR DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.PTRResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.PTRResourceRecord">PTRResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.PTRResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.PTRResourceRecord">PTRResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.PTRResourceRecord.PointerDomainName">
            <summary>
            Gets or sets the pointer domain name
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.AAAAResourceRecord">
            <summary>
            Represents an AAAA (IPv6) DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.AAAAResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.AAAAResourceRecord">AAAAResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.AAAAResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.AAAAResourceRecord">AAAAResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.AAAAResourceRecord.IPv6Address">
            <summary>
            Gets or sets the Ipv6 address.
            </summary>
        </member>
        <member name="T:Aspose.Network.Pop3.Pop3MessageInfoCollection">
            <summary>
            Represents the information of a mail message from Pop3 server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3MessageInfoCollection.#ctor">
            <summary>
            Initializes a new instance of the Pop3MessageInfoCollection class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.MailPriority">
            <summary>
            Mail Priority can be "normal", "urgent" or "non-urgent" and can influence transmission speed and delivery. 
            Defined in RFC 1327
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MailPriority.High">
            <summary>
            Priority: urgent
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MailPriority.Low">
            <summary>
            Priority: non-urgent
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MailPriority.Normal">
            <summary>
            Priority: normal
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern"/> class.
            </summary>
            <param name="endDate">The end date.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern"/> class.
            </summary>
            <param name="occurs">The occurs.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern.#ctor(System.DateTime,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern"/> class.
            </summary>
            <param name="endDate">The end date.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern"/> class.
            </summary>
            <param name="occurs">The occurs.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.WeeklyRecurrencePattern.StartDays">
            <summary>
            Gets or sets the start days.
            </summary>
            <value>The start days.</value>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.SystemTime.ToDateTime">
            <summary>
            Converts the SystemTime structure to a System.DateTime structure
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.SystemTime.ToDateTime(Aspose.Network.Mail.Calendaring.SystemTime)">
            <summary>
            Converts a SystemTime structure to a System.DateTime structure
            </summary>
            <param name="time">The SystemTime structure to be converted</param>
            <returns>A System.DateTime structure that was created based on
            the value of the SystemTime structure.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.SystemTime.FromDateTime(System.DateTime)">
            <summary>
            Converts a System.DateTime structure to a SystemTime structure
            </summary>
            <param name="time">System.DateTime structure to be converted</param>
            <returns>A SystemTime structure that was created based on
            the value of the System.DateTime structure.</returns>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.SystemTime.UtcNow">
            <summary>
            Get the current time in Utc Format
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.SystemTime.Now">
            <summary>
            Get the current time in local format
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.GetSystemTimeZones">
            <summary>
            Retrieves an array of TimeZoneInfo structures by pulling values from the 
            Registry.
            </summary>
            <returns>Array of TimeZoneInfo structures</returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.Convert(Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo,Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo,System.DateTime)">
            <summary>
            Converts the local time of the source time-zone to the local time of the
            destination time-zone.
            </summary>
            <param name="source">The source time-zone</param>
            <param name="destination">The destination time-zone</param>
            <param name="sourceLocalTime">The local time of the source time-zone that is
            to be converted to the local time in the destination time-zone</param>
            <returns>The local time in the destination time-zone.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.ToLocalTime(Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo,System.DateTime)">
            <summary>
            Converts the UtcTime to the local time of the destination time-zone.
            </summary>
            <param name="destination">The destination time-zone</param>
            <param name="utcTime">Utc time that is to be converted to the local time of
            the destination time-zone.</param>
            <returns>DateTime that represents the local time in the destination time-zone</returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.ToUniversalTime(Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo,System.DateTime)">
            <summary>
            Converts a local time of the source time-zone to a Utc time
            </summary>
            <param name="source">The source time-zone</param>
            <param name="sourceLocalTime">The local time in the source time-zone</param>
            <returns>The Utc time that is equivalent to the local time in the source time-zone.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.getChangeDate(System.Int32,Aspose.Network.Mail.Calendaring.SystemTime)">
            <summary>
            Calculates the date that a time change is going to occur given the year and
            the SystemTime structure that represents either the StandardDate or DaylightDate
            values in the TimeZoneInfo structure
            </summary>
            <param name="year">The year to calculate the change for</param>
            <param name="changeTime">The SystemTime structure that contains information
            for calculating the date a time change is to occur.</param>
            <returns>A DateTime object the represents when a time change will occur</returns>
            <remarks>Returns DateTime.MinValue when no time change is to occur</remarks>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.Convert(Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo,System.DateTime)">
            <summary>
            Converts the local time of the current time-zone to the local time of the 
            destination time-zone.
            </summary>
            <param name="destination">The destination time-zone</param>
            <param name="localTime">The local time in the current time zone that is 
            to be converted to the local time in the destination time-zone</param>
            <returns>The local time in the destination time-zone.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.ToUniversalTime(System.DateTime)">
            <summary>
            Converts a local time of the current time-zone to a Utc time
            </summary>
            <param name="sourceLocalTime">The local time in the current time-zone</param>
            <returns>The Utc time that is equivalent to the local time in the current time-zone.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.ToLocalTime(System.DateTime)">
            <summary>
            Converts the UtcTime to the local time of the current time-zone.
            </summary>
            <param name="utcTime">Utc time that is to be converted to the local time of
            the current time-zone.</param>
            <returns>DateTime that represents the local time in the current time-zone</returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.GetTimeZoneName(System.DateTime)">
            <summary>
            The name of the current TimeZoneInfo structure (Daylight or Standard) based on the date/time.
            </summary>
            <param name="time">The time to evaluate determine the correct time zone name from</param>
            <returns>Either the standard or daylight name of the time zone</returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.IsDaylightSavingTime(System.DateTime)">
            <summary>
            Returns a value indicating whether the specified date and time is within a 
            daylight saving time period.
            </summary>
            <param name="time">DateTime to evaluate</param>
            <returns>True if the time value occurs during the daylight saving time
            period for the given year, otherwise false.</returns>
            <remarks>The summary description is lifted right from the MSDN docs for the
            same method on the TimeZone class.</remarks>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)">
            <summary>
            Returns a value indicating whether the specified date and time is within a 
            daylight saving time period.
            </summary>
            <param name="time">DateTime to evaluate</param>
            <param name="daylightTime">The DaylightTime object that represents a daylight time
            period.</param>
            <returns>True if the time value occurs during the daylight saving time
            period for the given year, otherwise false.</returns>
            <remarks>The summary description is lifted right from the MSDN docs for the
            same method on the TimeZone class.</remarks>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.GetStandardDateTime(System.Int32)">
            <summary>
            The date of the standard time change
            </summary>
            <param name="year">The year to calculate the standard change for</param>
            <returns>DateTime that represents when the standard time change occurs</returns>
            <remarks>Returns DateTime.MinValue if there is no time change</remarks>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.GetDaylightDateTime(System.Int32)">
            <summary>
            The date of the daylight time change.
            </summary>
            <param name="year">The year to calculate the daylight change for</param>
            <returns>DateTime that represents when the daylight time change occurs</returns>
            <remarks>Returns DateTime.MinValue if there is no time change</remarks>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.GetDaylightChanges(System.Int32)">
            <summary>
            The daylight time changes for the current time-zone
            </summary>
            <param name="year">Year to retrieve the daylight changes for</param>
            <returns>A DaylightTime object that represents the daylight time for a given year</returns>
            <remarks>Returns null if there is no time change</remarks>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.CurrentTimeZone">
            <summary>
            Retrieves the TimeZoneInfo structure based on the current system TimeZone.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.Win32TimeZoneInfo.ObservesDaylightTime">
            <summary>
            Wether daylight saving time is observed in the time-zone
            </summary>
        </member>
        <member name="T:Aspose.Network.Imap.ImapAuthentication">
            <summary>
            Represents the authentication methods for ImapClient to log into the IMAP servers.
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapAuthentication.#cctor">
            <summary>
            Represents IMAP authentication methods. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapAuthentication.Equals(System.Object)">
            <summary>
            Overrided.
            </summary>
            <param name="o">Object to be compared.</param>
            <returns>True if the specified object equals to this imap authentication object</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapAuthentication.GetHashCode">
            <summary>
            Overrided.
            </summary>
            <returns>The hash code of this object.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapAuthentication.ToString">
            <summary>
            Overrided.
            </summary>
            <returns>The string of this object.</returns>
        </member>
        <member name="P:Aspose.Network.Imap.ImapAuthentication.CramMD5">
            <summary>
            Gets RFC 2195 CRAM-MD5 authentication object.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapAuthentication.DigestMD5">
            <summary>
            Gets RFC 2831 DIGEST-MD5 authentication object. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapAuthentication.Plain">
            <summary>
            Gets a RFC 2595 TLS plaintext authentication object. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapAuthentication.Login">
            <summary>
            Gets a login authentication object. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapAuthentication.ClearText">
            <summary>
            Gets an ImapAuthentication object that uses clear text USER/PASS login. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapAuthentication.Auto">
            <summary>
            Gets an ImapAuthentication object indicates automatically choose the authentication method. 
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl">
            <summary> Defines a TZURL iCalendar component property.
            
            <pre>
            4.8.3.5 Time Zone URL
            
            Property Name: TZURL
            
            Purpose: The TZURL provides a means for a VTIMEZONE component to
            point to a network location that can be used to retrieve an up-to-
            date version of itself.
            
            Value Type: URI
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: This property can be specified in a &quot;VTIMEZONE&quot; calendar
            component.
            
            Description: The TZURL provides a means for a VTIMEZONE component to
            point to a network location that can be used to retrieve an up-to-
            date version of itself. This provides a hook to handle changes
            government bodies impose upon time zone definitions. Retrieval of
            this resource results in an iCalendar object containing a single
            VTIMEZONE component and a METHOD property set to PUBLISH.
            
            Format Definition: The property is defined by the following notation:
            
            tzurl      = &quot;TZURL&quot; tzurlparam &quot;:&quot; uri CRLF
            
            tzurlparam = *(&quot;;&quot; xparam)
            
            Example: The following is an example of this property:
            
            TZURL:http://timezones.r.us.net/tz/US-California-Los_Angeles
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
            <throws>  URISyntaxException where the specified value string is not a valid uri </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.TzUrl.Uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.RRule">
            <summary> Defines an RRULE iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RRule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RRule.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RRule"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RRule.#ctor(Aspose.Network.iCalendar.ObjectModel.Recur)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RRule"/> class.
            </summary>
            <param name="recur">The recur.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RRule.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.Recur)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RRule"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="recur">The recur.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RRule.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RRule.GetValue">
            <summary>
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.RRule.Recur">
            <returns> Returns the recur.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Created">
            <summary> Defines a CREATED iCalendar component property.
            
            <pre>
            4.8.7.1 Date/Time Created
            
            Property Name: CREATED
            
            Purpose: This property specifies the date and time that the calendar
            information was created by the calendar user agent in the calendar
            store.
            
            Note: This is analogous to the creation date and time for a file
            in the file system.
            
            Value Type: DATE-TIME
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: The property can be specified once in &quot;VEVENT&quot;, &quot;VTODO&quot;
            or &quot;VJOURNAL&quot; calendar components.
            
            Description: The date and time is a UTC value.
            
            Format Definition: The property is defined by the following notation:
            
            created    = &quot;CREATED&quot; creaparam &quot;:&quot; date-time CRLF
            
            creaparam  = *(&quot;;&quot; xparam)
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Created.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Created.#ctor(System.String)">
            <param name="aValue">a value string for this component
            </param>
            <throws>  ParseException where the specified value string is not a valid date-time/date representation </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Created.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aValue">a value string for this component
            </param>
            <throws>  ParseException where the specified value string is not a valid date-time/date representation </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Created.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <param name="aDate">a date
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Created.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aDate">a date
            </param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Role">
            <summary> Defines a Participation Role parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Role.Chair">
            <summary>
            Chair.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Role.ReqestParticipant">
            <summary>
            ReqestParticipant.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Role.OptionalParticipant">
            <summary>
            OptionalParticipant.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Role.NoneParticipant">
            <summary>
            NoneParticipant.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Role.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Role"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Role.GetValue">
            <summary>
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat">
            <summary>
            Defines a Participation Status parameter.
            </summary>
            <author>
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat.NeedsAction">
            <summary>
            NeedsAction.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat.Accepted">
            <summary>
            Accepted.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat.Declined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat.Tentative">
            <summary>
            Tentative.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat.Delegated">
            <summary>
            Delegated.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat.Completed">
            <summary>
            Completed.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat.InProcess">
            <summary>
            InProcess.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.PartStat.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.VJournal">
            <summary> Defines an iCalendar VJOURNAL component.
            
            <pre>
            4.6.3 Journal Component
            
            Component Name: VJOURNAL
            
            Purpose: Provide a grouping of component properties that describe a
            journal entry.
            
            Formal Definition: A &quot;VJOURNAL&quot; calendar component is defined by the
            following notation:
            
            journalc   = &quot;BEGIN&quot; &quot;:&quot; &quot;VJOURNAL&quot; CRLF
            jourprop
            &quot;END&quot; &quot;:&quot; &quot;VJOURNAL&quot; CRLF
            
            jourprop   = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            class / created / description / dtstart / dtstamp /
            last-mod / organizer / recurid / seq / status /
            summary / uid / url /
            
            ; the following are optional,
            ; and MAY occur more than once
            
            attach / attendee / categories / comment /
            contact / exdate / exrule / related / rdate /
            rrule / rstatus / x-prop
            
            )
            </pre>
            
            Example 1 - Creating a journal associated with an event:
            
            <pre><code>
            DtStart meetingDate = (DtStart) meeting.getProperties().getProperty(
            Property.DTSTART);
            
            VJournal minutes = new VJournal(meetingDate.getTime(),
            &quot;Progress Meeting - Minutes&quot;);
            
            // add timezone information..
            TzId tzParam = meetingDate.getParameters().getParmaeter(Parameter.TZID);
            minutes.getProperties().getProperty(Property.DTSTART).getParameters().add(
            tzParam);
            
            // add description..
            minutes.getProperties().add(new Description(&quot;1. Agenda.., 2. Action Items..&quot;));
            </code></pre>
            
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VJournal.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VJournal.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary> Constructor.</summary>
            <param name="properties">a list of properties
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VJournal.#ctor(Aspose.Network.iCalendar.ObjectModel.Date,System.String)">
            <summary>
            Constructs a new VJOURNAL instance associated with the specified time with the specified summary.
            </summary>
            <param name="start">the date the journal entry is associated with</param>
            <param name="summary">the journal summary</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VJournal.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.Classification">
            <summary>
            Gets the classification.
            </summary>
            <value>The classification.</value>
            <returns> the optional access classification property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.Created">
            <summary>
            Gets the created.
            </summary>
            <value>The created.</value>
            <returns> the optional creation-time property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
            <returns> the optional description property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.StartDate">
            <summary>
            Convenience method to pull the DTSTART out of the property list.
            </summary>
            <value>The start date.</value>
            <returns> The DtStart object representation of the start Date
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.LastModified">
            <summary>
            Gets the last modified.
            </summary>
            <value>The last modified.</value>
            <returns> the optional last-modified property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.Organizer">
            <summary>
            Gets the organizer.
            </summary>
            <value>The organizer.</value>
            <returns> the optional organizer property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.DateStamp">
            <summary>
            Gets the date stamp.
            </summary>
            <value>The date stamp.</value>
            <returns> the optional date-stamp property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.Sequence">
            <summary>
            Gets the sequence.
            </summary>
            <value>The sequence.</value>
            <returns> the optional sequence number property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
            <returns> the optional status property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.Summary">
            <summary>
            Gets the summary.
            </summary>
            <value>The summary.</value>
            <returns> the optional summary property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.Url">
            <summary>
            Gets the URL.
            </summary>
            <value>The URL.</value>
            <returns> the optional URL property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.RecurrenceId">
            <summary>
            Gets the recurrence id.
            </summary>
            <value>The recurrence id.</value>
            <returns> the optional recurrence identifier property for a journal entry
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VJournal.Uid">
            <summary> Returns the UID property of this component if available.</summary>
            <returns> a Uid instance, or null if no UID property exists
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.VAlarm">
            <summary> Defines an iCalendar VALARM component.
            
            <pre>
            4.6.6 Alarm Component
            
            Component Name: VALARM
            
            Purpose: Provide a grouping of component properties that define an
            alarm.
            
            Formal Definition: A &quot;VALARM&quot; calendar component is defined by the
            following notation:
            
            alarmc     = &quot;BEGIN&quot; &quot;:&quot; &quot;VALARM&quot; CRLF
            (audioprop / dispprop / emailprop / procprop)
            &quot;END&quot; &quot;:&quot; &quot;VALARM&quot; CRLF
            
            audioprop  = 2*(
            
            ; 'action' and 'trigger' are both REQUIRED,
            ; but MUST NOT occur more than once
            
            action / trigger /
            
            ; 'duration' and 'repeat' are both optional,
            ; and MUST NOT occur more than once each,
            ; but if one occurs, so MUST the other
            
            duration / repeat /
            
            ; the following is optional,
            ; but MUST NOT occur more than once
            
            attach /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            x-prop
            
            )
            
            
            
            dispprop   = 3*(
            
            ; the following are all REQUIRED,
            ; but MUST NOT occur more than once
            
            action / description / trigger /
            
            ; 'duration' and 'repeat' are both optional,
            ; and MUST NOT occur more than once each,
            ; but if one occurs, so MUST the other
            
            duration / repeat /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            *x-prop
            
            )
            
            
            
            emailprop  = 5*(
            
            ; the following are all REQUIRED,
            ; but MUST NOT occur more than once
            
            action / description / trigger / summary
            
            ; the following is REQUIRED,
            ; and MAY occur more than once
            
            attendee /
            
            ; 'duration' and 'repeat' are both optional,
            ; and MUST NOT occur more than once each,
            ; but if one occurs, so MUST the other
            
            duration / repeat /
            
            ; the following are optional,
            ; and MAY occur more than once
            
            attach / x-prop
            
            )
            
            
            
            procprop   = 3*(
            
            ; the following are all REQUIRED,
            ; but MUST NOT occur more than once
            
            action / attach / trigger /
            
            ; 'duration' and 'repeat' are both optional,
            ; and MUST NOT occur more than once each,
            ; but if one occurs, so MUST the other
            
            duration / repeat /
            
            ; 'description' is optional,
            ; and MUST NOT occur more than once
            
            description /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            x-prop
            
            )
            </pre>
            
            Example 1 - Creating an alarm to trigger at a specific time:
            
            <pre><code>
            java.util.Calendar cal = java.util.Calendar.getInstance();
            cal.set(java.util.Calendar.MONTH, java.util.Calendar.DECEMBER);
            cal.set(java.util.Calendar.DAY_OF_MONTH, 25);
            
            VAlarm christmas = new VAlarm(cal.getTime());
            </code></pre>
            
            Example 2 - Creating an alarm to trigger one (1) hour before the scheduled start of the parent event/the parent todo
            is due:
            
            <pre><code>
            VAlarm reminder = new VAlarm(-1000 * 60 * 60);
            
            // repeat reminder four (4) more times every fifteen (15) minutes..
            reminder.getProperties().add(new Repeat(4));
            reminder.getProperties().add(new Duration(1000 * 60 * 15));
            
            // display a message..
            reminder.getProperties().add(Action.DISPLAY);
            reminder.getProperties().add(new Description(&quot;Progress Meeting at 9:30am&quot;));
            </code></pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VAlarm.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VAlarm.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary> Constructor.</summary>
            <param name="properties">a list of properties
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VAlarm.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <summary> Constructs a new VALARM instance that will trigger at the specified time.</summary>
            <param name="trigger">the time the alarm will trigger
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VAlarm.#ctor(Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary> Constructs a new VALARM instance that will trigger at the specified time relative to the event/todo component.</summary>
            <param name="trigger">a duration of time relative to the parent component that the alarm will trigger at
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VAlarm.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VAlarm.Action">
            <summary> Returns the mandatory action property.</summary>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VAlarm.Trigger">
            <summary> Returns the mandatory trigger property.</summary>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VAlarm.Duration">
            <summary> Returns the optional duration property.</summary>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VAlarm.Repeat">
            <summary> Returns the optional repeat property.</summary>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VAlarm.Attachment">
            <summary> Returns the optional attachment property.</summary>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VAlarm.Description">
            <summary> Returns the optional description property.</summary>
            <returns>
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VAlarm.Summary">
            <summary> Returns the optional summary property.</summary>
            <returns>
            </returns>
        </member>
        <member name="T:Aspose.Windows.Forms.Recipient">
            <summary>
            Represents a Recipient for a MapiMailMessage.
            </summary>
        </member>
        <member name="F:Aspose.Windows.Forms.Recipient.Address">
            <summary>
            The email address of this recipient.
            </summary>
        </member>
        <member name="F:Aspose.Windows.Forms.Recipient.DisplayName">
            <summary>
            The display name of this recipient.
            </summary>
        </member>
        <member name="F:Aspose.Windows.Forms.Recipient.RecipientType">
            <summary>
            How the recipient will receive this message (To, CC, BCC).
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.Recipient.#ctor(System.String)">
            <summary>
            Creates a new recipient with the specified address.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.Recipient.#ctor(System.String,System.String)">
            <summary>
            Creates a new recipient with the specified address and display name.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.Recipient.#ctor(System.String,Aspose.Windows.Forms.RecipientType)">
            <summary>
            Creates a new recipient with the specified address and recipient type.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.Recipient.#ctor(System.String,System.String,Aspose.Windows.Forms.RecipientType)">
            <summary>
            Creates a new recipient with the specified address, display name and recipient type.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.Recipient.GetInteropRepresentation">
            <summary>
            Returns an interop representation of a recepient.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpAuthentication">
            <summary>
            The SmtpAuthentication represents the mechanism used to authenticate username and password against the SMTP server. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpAuthentication.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the specified object is a SmtpAuthentication object that is equivalent to this SmtpAuthentication object.
            </summary>
            <param name="o">The object to test.</param>
            <returns>Returns true if o is a <see cref="T:Aspose.Network.Mail.SmtpAuthentication">SmtpAuthentication</see> object that is equivalent to this <see cref="T:Aspose.Network.Mail.SmtpAuthentication">SmtpAuthentication</see> object; otherwise, returns false.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpAuthentication.GetHashCode">
            <summary>
            Returns a hash code value that represents this object.
            </summary>
            <returns>Returns a hash code that represents this object.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.SmtpAuthentication.ToString">
            <summary>
            Converts this SmtpAuthentication object to a human-readable string.
            </summary>
            <returns>A string representing this <see cref="T:Aspose.Network.Mail.SmtpAuthentication">SmtpAuthentication</see> object.</returns>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpAuthentication.CramMD5">
            <summary>
            Uses the Cram-MD5 mechanism for authentication
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpAuthentication.DigestMD5">
            <summary>
            Uses the Digest-MD5 mechanism for authentication
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpAuthentication.Plain">
            <summary>
            Uses the AUTH PLAIN mechanism. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpAuthentication.Login">
            <summary>
            Uses the AUTH LOGIN mechanism. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpAuthentication.None">
            <summary>
            Do not authenticate.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpAuthentication.Ntlm">
            <summary>
            Uses the AUTH Ntlm mechanism. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.SmtpAuthentication.Auto">
            <summary>
            Detects the AUTH mechanism automatically. 
            </summary>
        </member>
        <member name="T:Aspose.iCalendar.RecurrencePattern">
            <summary>
            The main class, represents a recurrence pattern.
            </summary>
        </member>
        <member name="M:Aspose.iCalendar.RecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.iCalendar.RecurrencePattern"/> class.
            </summary>
        </member>
        <member name="M:Aspose.iCalendar.RecurrencePattern.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.iCalendar.RecurrencePattern"/> class.
            </summary>
            <param name="pattern">The pattern.</param>
        </member>
        <member name="M:Aspose.iCalendar.RecurrencePattern.GenerateOccurrences">
            <summary>
            Generates the occurrences.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrencePattern.GenerateOccurrences(System.DateTime,System.DateTime)">
            <summary>
            Generates the occurrences.
            </summary>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrencePattern.FromiCalendar(System.String)">
            <summary>
Loads a recurrence pattern from a string in iCalendar format.
</summary><remarks>
<p>The string can be just a recurrence pattern string, or it can be a complete
iCalendar component, such as VEVENT with a recurrence pattern.</p>
<p>The string can be just a one long line or it can be split into 
multiple lines according to iCalendar specification.</p>
<p>In iCalendar, the content is organized into lines of text, delimited
by a CRLF sequence (\r\n). Content lines in iCalendar are no longer than 75 characters,
excluding the line break. When a long content line is broken into two lines in iCalendar,
the CRLF sequence is immediately followed by a single space character.</p>
</remarks><param name="pattern">The string in iCalendar format.</param><returns>A recurrence pattern.</returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrencePattern.FromRecurrence(System.String)">
            <summary>
            Froms the recurrence.
            </summary>
            <param name="recurrenceXMLstring">The recurrence XM lstring.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrencePattern.FromRecurrence(System.Xml.XmlElement)">
            <summary>
            Froms the recurrence.
            </summary>
            <param name="xmlElement">The XML element.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrencePattern.ToiCalendar">
            <summary>
            Tois the calendar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrencePattern.LoadRuleDatesFromXDateString(System.String)">
            <summary>
            Load  from RDATE or EXDATE string into property RuleDates
            </summary>
            <param name="datesiCalendar">
            The string containing RDATE or EXDATE
            </param>
        </member>
        <member name="F:Aspose.iCalendar.RecurrencePattern.MaxRangeEnd">
            <summary>
            This is a hack for parameterless GenerateOccurrences to work without
            exceptions due to reaching DateTime.MaxValue.
            It will still throw an exception if you have interval > 999 years.
            I think we should use this simple solution that will cover almost all reasonable 
            patterns instead of writing try/catch handlers or trying to safely increment dates.
            </summary>
        </member>
        <member name="P:Aspose.iCalendar.RecurrencePattern.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>The start date.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrencePattern.RRules">
            <summary>
            Gets the R rules.
            </summary>
            <value>The R rules.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrencePattern.ExRules">
            <summary>
            Gets the ex rules.
            </summary>
            <value>The ex rules.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrencePattern.RDates">
            <summary>
            Gets the R dates.
            </summary>
            <value>The R dates.</value>
        </member>
        <member name="P:Aspose.iCalendar.RecurrencePattern.ExDates">
            <summary>
            Gets the ex dates.
            </summary>
            <value>The ex dates.</value>
        </member>
        <member name="T:Aspose.Network.License">
            <summary>
            Provides methods to license the component.
            </summary>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code>
            </ms>
            
            <java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code>
            </java>
            
            </example>
        </member>
        <member name="M:Aspose.Network.License.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code>
            </ms>
            
            <java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code>
            </java>
            
            </example>
        </member>
        <member name="M:Aspose.Network.License.SetLicense(System.String)">
            <summary>
            Licenses the component.
            </summary>
            <remarks>
            <p>Tries to find the license in the following locations:</p>
            <p>1. Explicit path.</p>
            
            <ms>
            <p>2. The folder of the component assembly.</p>
            <p>3. The folder of the client's calling assembly.</p>
            <p>4. The folder of the entry assembly.</p>
            <p>5. An embedded resource in the client's calling assembly.</p>
            
            <p><b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
            <p>1. Explicit path.</p>
            <p>2. An embedded resource in the client's calling assembly.</p>
            </ms>
            
            <java>
            <p>2. The folder of the component jar file.</p>
            </java>
            
            </remarks>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code>
            </ms>
            
            <java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code>
            </java>
            
            <param name="licenseName">Can be a full or short file name<ms> or name of an embedded resource</ms>.
            Use an empty string to switch to evaluation mode.</param>
            </example>
        </member>
        <member name="M:Aspose.Network.License.SetLicense(System.IO.Stream)">
            <summary>
            Licenses the component.
            </summary>
            <param name="stream">A stream that contains the license.</param>
            <remarks>
            <p>Use this method to load a license from a stream.</p>
            </remarks>
            <example>
            <code>
            <ms>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </ms>
            <java>
            License license = new License();
            license.setLicense(myStream);
            </java>
            </code>
            </example>
            <javaName>void setLicense(java.io.InputStream stream)</javaName>
        </member>
        <member name="T:Aspose.Network.Ftp.ListItem">
            <summary>
            Represents the item listed in the remote directory.
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.ListItem.ToString">
            <summary>
            Returns a string representation of this instance.
            </summary>
            <returns>String that contains the contents of this ListItem.</returns>
        </member>
        <member name="M:Aspose.Network.Ftp.ListItem.Sort(Aspose.Network.Ftp.ListItem[])">
            <summary>
            Sort the list items with the default comparer.
            </summary>
            <param name="items">The list items.</param>
        </member>
        <member name="M:Aspose.Network.Ftp.ListItem.Sort(Aspose.Network.Ftp.ListItem[],System.Collections.IComparer)">
            <summary>
            Sort the list items with the specified comparer.
            </summary>
            <param name="items">The list items.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.ItemStyle">
            <summary>
            Gets the style of the item.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.Group">
            <summary>
            Gets the group of the item.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.Inodes">
            <summary>
            Gets the inodes of the item.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.Owner">
            <summary>
            Gets the owner of the item.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.Permissions">
            <summary>
            Gets the permissions of the item.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.Date">
            <summary>
            Gets the date of the item.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.RawContent">
            <summary>
            Gets the raw content that returned from Ftp server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.ItemType">
            <summary>
            Gets the type of the item.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.Name">
            <summary>
            Gets the name of the item.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.Size">
            <summary>
            Gets the size of the item.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.SoftLink">
            <summary>
            Gets the soft link.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.ListItem.Time">
            <summary>
            Get the time of the item.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.ListItem.ListItemComparer">
            <summary>
            Represents the default comparer for list items
            </summary>
        </member>
        <member name="M:Aspose.Network.Ftp.ListItem.ListItemComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares the two list item objects.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns>Less than zero, if a is less than b; Zero, if a equals b; Greater than zero, if a is greater then b.</returns>
        </member>
        <member name="T:Aspose.Network.Outlook.OleDocumentFormat">
            <summary>
            Represents the format for OLE document.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.OleDocumentFormat.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the OleDocumentFormat class.
            </summary>
            <param name="guid"></param>
        </member>
        <member name="M:Aspose.Network.Outlook.OleDocumentFormat.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="o">The object to compare with this instance.</param>
            <returns>true if o is a System.Guid that has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.OleDocumentFormat.GetHashCode">
            <summary>
            Returns the hash code of this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.OleDocumentFormat.ToString">
            <summary>
            Overridden. Returns a string representation of this instance. 
            </summary>
            <returns>A string contains the mail addresse.</returns>
        </member>
        <member name="P:Aspose.Network.Outlook.OleDocumentFormat.MicrosoftOutlookMessage">
            <summary>
            Microsoft outlook message format.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.OleDocumentFormat.AdobeAcrobatDocument">
            <summary>
            Adobe PDF format.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.OleDocumentFormat.MicrosoftOfficeExcelWorksheet">
            <summary>
            Microsoft office exccel format.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.OleDocumentFormat.MicrosoftOfficeWordDocument">
            <summary>
            Microsoft office word format.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.OleDocumentFormat.MicrosoftPowerPointPresentation">
            <summary>
            Microsoft power point format.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.OleDocumentFormat.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiObjectProperty">
            <summary>
            Reprensents a Custom object included in Outlook Message documents.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiObjectProperty.IsOutlookMessage">
            <summary>
            Indicates whether the object property is an embedded outlook message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiObjectProperty.OleDocumentFormat">
            <summary>
            Gets the Ole format type.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiObjectProperty.DocumentName">
            <summary>
            Gets the document name.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiObjectProperty.Properties">
            <summary>
            Gets a collection of mapi properties.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.ISDNResourceRecord">
            <summary>
            Represents an ISDN DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.ISDNResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.ISDNResourceRecord">ISDNResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.ISDNResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.ISDNResourceRecord">ISDNResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.ISDNResourceRecord.Address">
            <summary>
            Gets or sets the address
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.ISDNResourceRecord.SubAddress">
            <summary>
            Gets or sets the sub address
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.GPOSResourceRecord">
            <summary>
            Represents a GPOS DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.GPOSResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.GPOSResourceRecord">GPOSResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.GPOSResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.GPOSResourceRecord">GPOSResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.GPOSResourceRecord.Altitude">
            <summary>
            Gets or sets the altitude
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.GPOSResourceRecord.Latitude">
            <summary>
            Gets or sets the latitude
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.GPOSResourceRecord.Longitude">
            <summary>
            Gets or sets the longitude
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.ResourceRecordCollection">
            <summary>
            Represents a collection of <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> objects.
            </summary>
            <remarks>
            Provides a simple collection object that can represent a set of <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> objects.
            The <see cref="T:Aspose.Network.Dns.ResourceRecordCollection">ResourceRecordCollection</see> class provides a simple collection object that can be used to store a set of <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> objects.	
            </remarks>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecordCollection.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.ResourceRecordCollection">ResourceRecordCollection</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecordCollection.AddRange(Aspose.Network.Dns.ResourceRecord[])">
            <summary>
            Copies the elements of the specified array to the end of the collection.
            </summary>
            <param name="value">An array of type <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> containing the objects to add to the collection. </param>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecordCollection.Add(Aspose.Network.Dns.ResourceRecord)">
            <summary>
            Adds the specified <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> to the collection.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> to add.</param>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecordCollection.Contains(Aspose.Network.Dns.ResourceRecord)">
            <summary>
            Gets a value indicating whether the collection contains the specified <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see>.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> to search for in the collection. </param>
            <returns><b>true</b> if the <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> is contained in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecordCollection.IndexOf(Aspose.Network.Dns.ResourceRecord)">
            <summary>
            Gets the index in the collection of the specified <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see>, if it exists in the collection.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> to locate in the collection. </param>
            <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecordCollection.IndexOf(Aspose.Network.Dns.ResourceRecord,System.Int32)">
            <summary>
            Gets the index in the collection of the specified <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see>, if it exists in the collection.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> to locate in the collection. </param>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecordCollection.IndexOf(Aspose.Network.Dns.ResourceRecord,System.Int32,System.Int32)">
            <summary>
            Gets the index in the collection of the specified <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see>, if it exists in the collection.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> to locate in the collection. </param>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="count">The number of elements in the section to search. </param>
            <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecordCollection.Insert(System.Int32,Aspose.Network.Dns.ResourceRecord)">
            <summary>
            Inserts the specified <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> object into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index where the specified <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> should be inserted. </param>
            <param name="value">The <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> to insert. </param>
        </member>
        <member name="M:Aspose.Network.Dns.ResourceRecordCollection.Sort(System.Collections.IComparer)">
            <summary>
            
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="P:Aspose.Network.Dns.ResourceRecordCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Dns.ResourceRecord">ResourceRecord</see> at the specified index.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.LinkedResourceCollection">
            <summary>
            Stores linked resources to be sent as part of an e-mail message. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.LinkedResourceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.LinkedResourceCollection"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern.#ctor(System.Int32,Aspose.Network.Mail.Calendaring.CalendarMonth)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern"/> class.
            </summary>
            <param name="startOffset">The start offset.</param>
            <param name="startMonth">The start month.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern.#ctor(Aspose.Network.Mail.Calendaring.CalendarDay,Aspose.Network.Mail.Calendaring.CalendarMonth,Aspose.Network.Mail.Calendaring.DayPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern"/> class.
            </summary>
            <param name="startDay">The start day.</param>
            <param name="startMonth">The start month.</param>
            <param name="startPosition">The start position.</param>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern.StartDay">
            <summary>
            Gets or sets the start day.
            </summary>
            <value>The start day.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern.StartOffset">
            <summary>
            Gets or sets the start offset.
            </summary>
            <value>The start offset.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern.StartPosition">
            <summary>
            Gets or sets the start position.
            </summary>
            <value>The start position.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.YearlyRecurrencePattern.StartMonth">
            <summary>
            Gets or sets the start month.
            </summary>
            <value>The start month.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.UtcOffset">
            <summary> Represents a timezone offset from UTC time.
            
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.UtcOffset.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.UtcOffset"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.UtcOffset.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.UtcOffset"/> class.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.UtcOffset.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.UtcOffset.Equals(System.Object)">
            <summary>
            Equalses the specified arg0.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.UtcOffset.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.UtcOffset.Offset">
            <returns> Returns the offset.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat">
            <summary> Defines a REPEAT iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat"/> class.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Repeat.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.RDate">
            <summary> Defines an RDATE iCalendar component property.
            
            <pre>
            4.8.5.3 Recurrence Date/Times
            
            Property Name: RDATE
            
            Purpose: This property defines the list of date/times for a
            recurrence set.
            
            Value Type: The default value type for this property is DATE-TIME.
            The value type can be set to DATE or PERIOD.
            
            Property Parameters: Non-standard, value data type and time zone
            identifier property parameters can be specified on this property.
            
            Conformance: The property can be specified in &quot;VEVENT&quot;, &quot;VTODO&quot;,
            &quot;VJOURNAL&quot; or &quot;VTIMEZONE&quot; calendar components.
            
            Description: This property can appear along with the &quot;RRULE&quot; property
            to define an aggregate set of repeating occurrences. When they both
            appear in an iCalendar object, the recurring events are defined by
            the union of occurrences defined by both the &quot;RDATE&quot; and &quot;RRULE&quot;.
            
            The recurrence dates, if specified, are used in computing the
            recurrence set. The recurrence set is the complete set of recurrence
            instances for a calendar component. The recurrence set is generated
            by considering the initial &quot;DTSTART&quot; property along with the &quot;RRULE&quot;,
            &quot;RDATE&quot;, &quot;EXDATE&quot; and &quot;EXRULE&quot; properties contained within the
            iCalendar object. The &quot;DTSTART&quot; property defines the first instance
            in the recurrence set. Multiple instances of the &quot;RRULE&quot; and &quot;EXRULE&quot;
            properties can also be specified to define more sophisticated
            recurrence sets. The final recurrence set is generated by gathering
            all of the start date/times generated by any of the specified &quot;RRULE&quot;
            and &quot;RDATE&quot; properties, and excluding any start date/times which fall
            within the union of start date/times generated by any specified
            &quot;EXRULE&quot; and &quot;EXDATE&quot; properties. This implies that start date/times
            within exclusion related properties (i.e., &quot;EXDATE&quot; and &quot;EXRULE&quot;)
            take precedence over those specified by inclusion properties (i.e.,
            &quot;RDATE&quot; and &quot;RRULE&quot;). Where duplicate instances are generated by the
            &quot;RRULE&quot; and &quot;RDATE&quot; properties, only one recurrence is considered.
            Duplicate instances are ignored.
            
            Format Definition: The property is defined by the following notation:
            
            rdate      = &quot;RDATE&quot; rdtparam &quot;:&quot; rdtval *(&quot;,&quot; rdtval) CRLF
            
            rdtparam   = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; &quot;VALUE&quot; &quot;=&quot; (&quot;DATE-TIME&quot; / &quot;DATE&quot; / &quot;PERIOD&quot;)) /
            (&quot;;&quot; tzidparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            
            )
            
            rdtval     = date-time / date / period
            ;Value MUST match value type
            
            Example: The following are examples of this property:
            
            RDATE:19970714T123000Z
            
            RDATE;TZID=US-EASTERN:19970714T083000
            
            RDATE;VALUE=PERIOD:19960403T020000Z/19960403T040000Z,
            19960404T010000Z/PT3H
            
            RDATE;VALUE=DATE:19970101,19970120,19970217,19970421
            19970526,19970704,19970901,19971014,19971128,19971129,19971225
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RDate"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.#ctor(Aspose.Network.iCalendar.ObjectModel.DateList)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="dates">The dates.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.DateList)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="list">The list.</param>
            <param name="dates">The dates.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.#ctor(Aspose.Network.iCalendar.ObjectModel.PeriodList)">
            <summary>
            Constructor.
            </summary>
            <param name="periods">The periods.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.PeriodList)">
            <summary>
            Constructor.
            </summary>
            <param name="list">The list.</param>
            <param name="periods">The periods.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.GetValue">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.Periods">
            <returns> Returns the period list.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.RDate.TimeZone">
            <summary>
            Sets the timezone associated with this property.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Name">
            <summary> Defines a NAME iCalendar component property.</summary>
            <author> 
            </author>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Name.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Name.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Name"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Name.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Name"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Name.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Name.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.NumberList">
            <summary> Defines a list of numbers.
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.NumberList.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.NumberList.#ctor(System.Int32)">
            <summary>
            Creates a new instance with the specified initial capacity.
            </summary>
            <param name="initialCapacity">the initial capacity of the list</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.NumberList.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.NumberList.Add(System.Int32)">
            <summary>
            Adds the specified number.
            </summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.NumberList.Add(System.Object)">
            <summary>
            Overrides superclass to throw an <code>IllegalArgumentException</code>
            where argument is not a <code>java.lang.Integer</code>.
            </summary>
            <param name="number">The number.</param>
            <returns>
            The <see cref="T:System.Collections.ArrayList"/> index at which the <paramref name="value"/> has been added.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.ArrayList"/> is read-only.-or- The <see cref="T:System.Collections.ArrayList"/> has a fixed size. </exception>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.NumberList.Remove(System.Int32)">
            <summary>
            Removes the specified nuber.
            </summary>
            <param name="nuber">The nuber.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.NumberList.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Dur">
            <summary> Represents a duration of time in iCalendar. Note that according to RFC2445 durations represented in weeks are
            mutually exclusive of other duration fields.
            
            <pre>
            4.3.6   Duration
            
            Value Name: DURATION
            
            Purpose: This value type is used to identify properties that contain
            a duration of time.
            
            Formal Definition: The value type is defined by the following
            notation:
            
            dur-value  = ([&quot;+&quot;] / &quot;-&quot;) &quot;P&quot; (dur-date / dur-time / dur-week)
            
            dur-date   = dur-day [dur-time]
            dur-time   = &quot;T&quot; (dur-hour / dur-minute / dur-second)
            dur-week   = 1*DIGIT &quot;W&quot;
            dur-hour   = 1*DIGIT &quot;H&quot; [dur-minute]
            dur-minute = 1*DIGIT &quot;M&quot; [dur-second]
            dur-second = 1*DIGIT &quot;S&quot;
            dur-day    = 1*DIGIT &quot;D&quot;
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.#ctor(System.String)">
            <summary>
            Constructs a new duration instance from a string representation.
            </summary>
            <param name="value">a string representation of a duration</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.#ctor(System.Int32)">
            <summary>
            Constructs a new duration from the specified weeks.
            </summary>
            <param name="weeks">a duration in weeks.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructs a new duration from the specified arguments.
            </summary>
            <param name="days">duration in days</param>
            <param name="hours">duration in hours</param>
            <param name="minutes">duration in minutes</param>
            <param name="seconds">duration in seconds</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Constructs a new duration representing the time between the two specified dates. The end date may precede the
            start date in order to represent a negative duration.
            </summary>
            <param name="start">the start date of the duration</param>
            <param name="end">the end date of the duration</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.GetTime(System.DateTime)">
            <summary>
            Returns a date representing the end of this duration from the specified start date.
            </summary>
            <param name="start">the date to start the duration</param>
            <returns>the end of the duration as a date</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.Negate">
            <summary>
            Provides a negation of this instance.
            </summary>
            <returns>
            a Dur instance that represents a negation of this instance
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.Add(Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary>
            Add two durations. Durations may only be added if they are both positive
            or both negative durations.
            </summary>
            <param name="duration">the duration to add to this duration</param>
            <returns>
            a new instance representing the sum of the two durations.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.CompareTo(System.Object)">
            <summary>
            Compares to.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>        
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.CompareTo(Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary>
            Compares this duration with another.
            </summary>
            <param name="dur">The dur.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Dur.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Dur.Days">
            <returns> Returns the days.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Dur.Hours">
            <returns> Returns the hours.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Dur.Minutes">
            <returns> Returns the minutes.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Dur.Negative">
            <returns> Returns the negative.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Dur.Seconds">
            <returns> Returns the seconds.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Dur.Weeks">
            <returns> Returns the weeks.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Date">
            <summary> Base class for all representations of time values in RFC2445.
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Date.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Date"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Date.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Date"/> class.
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.VVenue">
            <summary> Defines an iCalendar VVENUE component.
            
            <pre>
            4.  Venue Component
            
            Component Name: "VVENUE"
            
            Purpose: Provide a grouping of component properties that describe an
            event venue.
            
            Format Definition: A "VVENUE" calendar component is defined by the
            following notation:
            venuec  = "BEGIN" ":" "VVENUE" CRLF
            venueprop
            "END" ":" "VVENUE" CRLF
            
            venueprop  = *(
            
            ; the following are all REQUIRED,
            ; but MUST NOT occur more than once
            
            uid
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            name / description / street-address / extended-address /
            locality / region / country / postal-code / tzid / geo /
            location-type / categories
            
            ; the following are optional,
            ; and MAY occur more than once
            
            tel / url
            )
            
            Description: A "VVENUE" calendar component is a grouping of component
            properties that represent a venue where an event occurs.  This
            extends the "LOCATION" property of "VEVENT" and "TODO" components,
            providing the ability to specify detailed information about the event
            venue.
            
            </pre>
            
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VVenue.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VVenue.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary>
            Constructs a new instance containing the specified properties.
            </summary>
            <param name="properties">a list of properties</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VVenue.ToString">
            <summary>
            Toes the string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VVenue.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.VFreeBusy">
            <summary> Defines an iCalendar VFREEBUSY component.
            
            <pre>
            4.6.4 Free/Busy Component
            
            Component Name: VFREEBUSY
            
            Purpose: Provide a grouping of component properties that describe
            either a request for free/busy time, describe a response to a request
            for free/busy time or describe a published set of busy time.
            
            Formal Definition: A &quot;VFREEBUSY&quot; calendar component is defined by the
            following notation:
            
            freebusyc  = &quot;BEGIN&quot; &quot;:&quot; &quot;VFREEBUSY&quot; CRLF
            fbprop
            &quot;END&quot; &quot;:&quot; &quot;VFREEBUSY&quot; CRLF
            
            fbprop     = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            contact / dtstart / dtend / duration / dtstamp /
            organizer / uid / url /
            
            ; the following are optional,
            ; and MAY occur more than once
            
            attendee / comment / freebusy / rstatus / x-prop
            
            )
            
            Description: A &quot;VFREEBUSY&quot; calendar component is a grouping of
            component properties that represents either a request for, a reply to
            a request for free or busy time information or a published set of
            busy time information.
            
            When used to request free/busy time information, the &quot;ATTENDEE&quot;
            property specifies the calendar users whose free/busy time is being
            requested; the &quot;ORGANIZER&quot; property specifies the calendar user who
            is requesting the free/busy time; the &quot;DTSTART&quot; and &quot;DTEND&quot;
            properties specify the window of time for which the free/busy time is
            being requested; the &quot;UID&quot; and &quot;DTSTAMP&quot; properties are specified to
            assist in proper sequencing of multiple free/busy time requests.
            
            When used to reply to a request for free/busy time, the &quot;ATTENDEE&quot;
            property specifies the calendar user responding to the free/busy time
            request; the &quot;ORGANIZER&quot; property specifies the calendar user that
            originally requested the free/busy time; the &quot;FREEBUSY&quot; property
            specifies the free/busy time information (if it exists); and the
            &quot;UID&quot; and &quot;DTSTAMP&quot; properties are specified to assist in proper
            sequencing of multiple free/busy time replies.
            
            When used to publish busy time, the &quot;ORGANIZER&quot; property specifies
            the calendar user associated with the published busy time; the
            &quot;DTSTART&quot; and &quot;DTEND&quot; properties specify an inclusive time window
            that surrounds the busy time information; the &quot;FREEBUSY&quot; property
            specifies the published busy time information; and the &quot;DTSTAMP&quot;
            property specifies the date/time that iCalendar object was created.
            
            The &quot;VFREEBUSY&quot; calendar component cannot be nested within another
            calendar component. Multiple &quot;VFREEBUSY&quot; calendar components can be
            specified within an iCalendar object. This permits the grouping of
            Free/Busy information into logical collections, such as monthly
            groups of busy time information.
            
            The &quot;VFREEBUSY&quot; calendar component is intended for use in iCalendar
            object methods involving requests for free time, requests for busy
            time, requests for both free and busy, and the associated replies.
            
            Free/Busy information is represented with the &quot;FREEBUSY&quot; property.
            This property provides a terse representation of time periods. One or
            more &quot;FREEBUSY&quot; properties can be specified in the &quot;VFREEBUSY&quot;
            calendar component.
            
            When present in a &quot;VFREEBUSY&quot; calendar component, the &quot;DTSTART&quot; and
            &quot;DTEND&quot; properties SHOULD be specified prior to any &quot;FREEBUSY&quot;
            properties. In a free time request, these properties can be used in
            combination with the &quot;DURATION&quot; property to represent a request for a
            duration of free time within a specified window of time.
            
            The recurrence properties (&quot;RRULE&quot;, &quot;EXRULE&quot;, &quot;RDATE&quot;, &quot;EXDATE&quot;) are
            not permitted within a &quot;VFREEBUSY&quot; calendar component. Any recurring
            events are resolved into their individual busy time periods using the
            &quot;FREEBUSY&quot; property.
            
            Example: The following is an example of a &quot;VFREEBUSY&quot; calendar
            component used to request free or busy time information:
            
            BEGIN:VFREEBUSY
            ORGANIZER:MAILTO:jane_doe@host1.com
            ATTENDEE:MAILTO:john_public@host2.com
            DTSTART:19971015T050000Z
            DTEND:19971016T050000Z
            DTSTAMP:19970901T083000Z
            END:VFREEBUSY
            
            The following is an example of a &quot;VFREEBUSY&quot; calendar component used
            to reply to the request with busy time information:
            
            BEGIN:VFREEBUSY
            ORGANIZER:MAILTO:jane_doe@host1.com
            ATTENDEE:MAILTO:john_public@host2.com
            DTSTAMP:19970901T100000Z
            FREEBUSY;VALUE=PERIOD:19971015T050000Z/PT8H30M,
            19971015T160000Z/PT5H30M,19971015T223000Z/PT6H30M
            URL:http://host2.com/pub/busy/jpublic-01.ifb
            COMMENT:This iCalendar file contains busy time information for
            the next three months.
            END:VFREEBUSY
            
            The following is an example of a &quot;VFREEBUSY&quot; calendar component used
            to publish busy time information.
            
            BEGIN:VFREEBUSY
            ORGANIZER:jsmith@host.com
            DTSTART:19980313T141711Z
            DTEND:19980410T141711Z
            FREEBUSY:19980314T233000Z/19980315T003000Z
            FREEBUSY:19980316T153000Z/19980316T163000Z
            FREEBUSY:19980318T030000Z/19980318T040000Z
            URL:http://www.host.com/calendar/busytime/jsmith.ifb
            END:VFREEBUSY
            </pre>
            
            Example 1 - Requesting all busy time slots for a given period:
            
            <pre><code>
            // request all busy time between today and 1 week from now..
            java.util.Calendar cal = java.util.Calendar.getInstance();
            Date start = cal.getTime();
            cal.add(java.util.Calendar.WEEK_OF_YEAR, 1);
            Date end = cal.getTime();
            
            VFreeBusy request = new VFreeBusy(start, end);
            </code></pre>
            
            Example 2 - Publishing all busy time slots for the period requested:
            
            <pre><code>
            VFreeBusy reply = new VFreeBusy(request, calendar.getComponents());
            </code></pre>
            
            Example 3 - Requesting all free time slots for a given period of at least the specified duration:
            
            <pre><code>
            // request all free time between today and 1 week from now of
            // duration 2 hours or more..
            java.util.Calendar cal = java.util.Calendar.getInstance();
            Date start = cal.getTime();
            cal.add(java.util.Calendar.WEEK_OF_YEAR, 1);
            Date end = cal.getTime();
            
            VFreeBusy request = new VFreeBusy(start, end, 2 * 60 * 60 * 1000);
            </code></pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary>
            Constructor.
            </summary>
            <param name="properties">a list of properties</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime,Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <summary>
            Constructs a new VFreeBusy instance with the specified start and end boundaries. This constructor should be used
            for requesting Free/Busy time for a specified period.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime,Aspose.Network.iCalendar.ObjectModel.DateTime,Aspose.Network.iCalendar.ObjectModel.Dur)">
            <summary>
            Constructs a new VFreeBusy instance with the specified start and end boundaries. This constructor should be used
            for requesting Free/Busy time for a specified duration in given period defined by the start date and end date.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="duration">the length of the period being requested</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.#ctor(Aspose.Network.iCalendar.ObjectModel.VFreeBusy,Aspose.Network.iCalendar.ObjectModel.ComponentCollection)">
            <summary> Constructs a new VFreeBusy instance represeting a reply to the specified VFREEBUSY request according to the
            specified list of components.
            </summary>
            <param name="request">a VFREEBUSY request
            </param>
            <param name="components">a component list used to initialise busy time
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.createFreeTime(Aspose.Network.iCalendar.ObjectModel.DateTime,Aspose.Network.iCalendar.ObjectModel.DateTime,Aspose.Network.iCalendar.ObjectModel.Dur,Aspose.Network.iCalendar.ObjectModel.ComponentCollection)">
            <summary> Create a FREEBUSY property representing the free time available of the specified duration for the given list of
            components. component. If the component is not applicable to FREEBUSY time, or if the component is outside the
            bounds of the start and end dates, null is returned. If no valid busy periods are identified in the component an
            empty FREEBUSY property is returned (i.e. empty period list).
            </summary>
            <param name="start">
            </param>
            <param name="end">
            </param>
            <param name="duration">
            </param>
            <param name="components">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.Contact">
            <summary>
            Gets the contact.
            </summary>
            <value>The contact.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.StartDate">
            <summary>
            Gets the start date.
            </summary>
            <value>The start date.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.EndDate">
            <summary>
            Gets the end date.
            </summary>
            <value>The end date.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.Duration">
            <summary>
            Gets the duration.
            </summary>
            <value>The duration.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.DateStamp">
            <summary>
            Gets the date stamp.
            </summary>
            <value>The date stamp.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.Organizer">
            <summary>
            Gets the organizer.
            </summary>
            <value>The organizer.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.Url">
            <summary>
            Gets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VFreeBusy.Uid">
            <summary>
            Returns the UID property of this component if available.
            </summary>
            <value>The uid.</value>
        </member>
        <member name="T:Aspose.Network.Exchange.ExchangeClient">
             <summary>
             <p>The ExchangeClient calss allows applications to manage E-Mail box in Microsoft Exchange Server by using WebDav Exchange Store Protocol.</p>
              
             </summary>
             <example>
             <p>The following exmaple demonstrates how to use ExchangeClient class to fetch e-mail messages from the Exchange Server.</p>
             [C#]
             <code>
            	//create Exchange with specified mailbox url, username and password.
            	ExchangeClient client = new ExchangeClient("http://www.yourcompany.com/exchange/username", "username", "password", "domain");
            	try
            	{
                    //query mailbox infomation
                    ExchangeMailboxInfo mailbox = client.GetMailboxInfo();
             
                    //query message infomation in the inbox of the mailbox
                    ExchangeMessageInfoCollection col = client.ListMessages(mailbox.InboxUri, false);
             
                    if (col.Count > 0)
                    {
                        //Save message locally
                        client.SaveMessage(col[i].UniqueUri, "c:\\" +i + ".eml");
                    }
            
            	}
            	catch (ExchangeException ex)
            	{
            		System.Diagnostics.Debug.WriteLine(ex.ToString());
            	}
             </code>
             [VB.NET]
             <code>
            	'create Exchange with specified mailbox url, username and password.
            	Dim  client As ExchangeClient
                client = new ExchangeClient("http://www.yourcompany.com/exchange/username", "username", "password", "domain")
            	Try
            	
                    'query mailbox infomation
                    Dim mailbox As ExchangeMailboxInfo 
                     mailbox = client.GetMailboxInfo()
             
                    'query message infomation in the inbox of the mailbox
                    Dim messages As ExchangeMessageInfoCollection
                    messages = client.ListMessages(mailbox.InboxUri, false)
             
                    If ( not (message is nothing) AndAlso messages.Count > 0)
                        'Save message locally
                        client.SaveMessage(messages(i).UniqueUri, "c:\\" +i + ".eml")
                    End If
            	
            	Catch ( ex As ExchangeException)
            		System.Diagnostics.Debug.WriteLine(ex.ToString())
            	End Try
             </code>
             </example>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Exchange.ExchangeClient">ExchageClient</see>
            </summary>
            <param name="mailboxUri">The url of the mailbox</param>
            <param name="username">The username of the mailbox</param>
            <param name="password">The password of the mailbox</param>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Exchange.ExchangeClient">ExchageClient</see>
            </summary>
            <param name="mailboxUri">The url of the mailbox</param>
            <param name="username">The username of the mailbox</param>
            <param name="password">The password of the mailbox</param>
            <param name="domain">The domain of the user</param>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.#ctor(System.String,System.Net.ICredentials)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Exchange.ExchangeClient">ExchageClient</see>
            </summary>
            <param name="mailboxUri">The url of the mailbox</param>
            <param name="credentials">The credentials used to log in</param>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.GetMailboxSize">
            <summary>
            Get the size of the maibox
            </summary>
            <returns>The size of the mailbox</returns>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.GetMailboxInfo">
            <summary>
            Get the information of the mailbox
            </summary>
            <returns>The information of the mailbox</returns>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.ListMessages(System.String,System.String,System.Boolean)">
            <summary>
            List the messages in the specified folder
            </summary>
            <param name="folder">The folder Uri</param>
            <param name="messageClass">The message class.</param>
            <param name="recursive">Indicates whether recursive listing or not.</param>
            <returns>A collection of message info</returns>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.ListMessages(System.String,System.Boolean)">
            <summary>
            List the messages in the specified folder
            </summary>
            <param name="folder">The folder Uri</param>
            <param name="recursive">Indicates whether recursive listing or not.</param>
            <returns>A collection of message info</returns>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.ListMessages(System.String,System.String)">
            <summary>
            Lists the messages.
            </summary>
            <param name="folder">The folder.</param>
            <param name="query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.ListMessagesById(System.String,System.String)">
            <summary>
            Lists the messages by id.
            </summary>
            <param name="folder">The folder.</param>
            <param name="messageId">The message id.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.ListMessages(System.String)">
            <summary>
            Lists the mail message in the specified folder.
            </summary>
            <param name="folder">The folder url</param>
            <returns>A <see cref="T:Aspose.Network.Exchange.ExchangeMessageInfoCollection"/> collection.</returns>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.SaveMessage(System.String,System.String)">
            <summary>
            Saves mail message specified by the uri to local file system. The mail message file is RFC 822 compliant format (EML).
            <remarks>if you want to parse the mail message files, use <see cref="T:Aspose.Network.Mail.MailMessage"/>.</remarks>
            </summary>
            <param name="messageUri">The Uri of the mail message</param>
            <param name="path">The target path to save the message</param>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.SaveMessage(System.String,System.IO.Stream)">
            <summary>
            Saves mail message specified by the uri to target stream. The mail message file is RFC 822 compliant format (EML).
            <remarks>if you want to parse the mail message files, use <see cref="T:Aspose.Network.Mail.MailMessage"/>.</remarks>
            </summary>
            <param name="messageUri">The Uri of the mail message</param>
            <param name="stream">The target stream to save the message</param>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.Send(Aspose.Network.Mail.MailMessage)">
            <summary>
            Sends the mail message.
            </summary>
            <param name="message">The mail message to be sent.</param>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.FetchMessage(System.String)">
            <summary>
            Fetches the mail message with specified uri.
            </summary>
            <param name="messageUri">The message uri.</param>
            <returns>A MailMessage object contains the message.</returns>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeClient.DeleteMessage(System.String)">
            <summary>
            Deletes the mail message.
            </summary>
            <param name="messageUri">The message uri.</param>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.ClientCertificate">
            <summary>
            Gets or sets the client certificate.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.KeepAlive">
            <summary>
            Indicates whether to keep alive.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.PreAuthenticate">
            <summary>
            Indicates whether to do pre-authentication.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.Timeout">
            <summary>
            Gest or sets the timeout.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.Credentials">
            <summary>
            Gets or sets the credentials.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.Proxy">
            <summary>
            Gets or sets the proxy.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.MailboxUri">
            <summary>
            Gets or sets the mailbox uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.MailboxInfo">
            <summary>
            Gets the mailbox information.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.CookieContainer">
            <summary>
            Gets or sets the cookie container.
            </summary>
            <value>The cookie container.</value>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeClient.SendChunked">
            <summary>
            Gets or sets a value indicating whether [send chunked].
            </summary>
            <value><c>true</c> if [send chunked]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags">
            <summary>
            Defines the options of validation.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.AllFlags">
            <summary>
            AllFlags.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.AllowUnknownCertificateAuthority">
            <summary>
            AllowUnknownCertificateAuthority. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreCertificateAuthorityRevocationUnknown">
            <summary>
            IgnoreCertificateAuthorityRevocationUnknown.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreInvalidName">
            <summary>
            IgnoreInvalidName.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreCtlSignerRevocationUnknown">
            <summary>
            IgnoreCtlSignerRevocationUnknown.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreCtlNotTimeValid">
            <summary>
            IgnoreCtlNotTimeValid.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreEndRevocationUnknown">
            <summary>
            IgnoreEndRevocationUnknown.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreInvalidBasicConstraints">
            <summary>
            IgnoreInvalidBasicConstraints.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreInvalidPolicy">
            <summary>
            IgnoreInvalidPolicy.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreRootRevocationUnknown">
            <summary>
            IgnoreRootRevocationUnknown.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreNotTimeNested">
            <summary>
            IgnoreNotTimeNested.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreNotTimeValid">
            <summary>
            IgnoreNotTimeValid.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.IgnoreWrongUsage">
            <summary>
            IgnoreWrongUsage.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509VerificationFlags.NoFlag">
            <summary>
            NoFlag.
            </summary>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType">
            <summary>
            Specifies the type of value searched for by the Find method.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByThumbprint">
            <summary>
            The findValue parameter for the Find method must be a string representing the thumbprint of the certificate.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName">
            <summary>
            The findValue parameter for the Find method must be a string representing the subject name of the certificate. This is a less specific search than if you use the FindBySubjectDistinguishedName enumeration value. Using the FindBySubjectName value, the Find method performs a case-insensitive string compare using the supplied value. For example, if you pass "MyCert" to the Find method, it will find all certificates with the subject name containing that string, regardless of other subject values. Searching by distinguished name is a more precise search.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectDistinguishedName">
            <summary>
            The findValue parameter for the Find method must be a string representing the subject distinguished name of the certificate. This is a more specific search than if you use the FindBySubjectName enumeration value. Using the FindBySubjectDistinguishedName value, the Find method performs a case-insensitive string compare for the entire distinguished name. Searching by subject name is a less precise search.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerName">
            <summary>
            The findValue parameter for the Find method must be a string representing the issuer name of the certificate. This is a less specific search than if you use the FindByIssuerDistinguishedName enumeration value. Using the FindByIssuerName value, the Find method performs a case-insensitive string compare using the supplied value. For example, if you pass "MyCA" to the Find method, it will find all certificates with the issuer name containing that string, regardless of other issuer values.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByIssuerDistinguishedName">
            <summary>
            The findValue parameter for the Find method must be a string representing the issuer distinguished name of the certificate. This is a more specific search than if you use the FindByIssuerName enumeration value. Using the FindByIssuerDistinguishedName value, the Find method performs a case-insensitive string compare for the entire distinguished name. Searching by issuer name is a less precise search.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindBySerialNumber">
            <summary>
            The findValue parameter for the Find must be a string representing the serial number of the certificate as it is displayed by the UI. The serial number must be in reverse order since it is an integer.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByTimeValid">
            <summary>
            The findValue parameter for the Find must be a DateTime value in local time, such as Now. Note that the union of certificates returned using FindByTimeValid, FindByTimeNotYetValid and FindByTimeExpired should represent all certificates in the queried collection.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByTimeNotYetValid">
            <summary>
            The findValue parameter for the Find must be a DateTime value in local time, such as Now. Note that the union of certificates returned using FindByTimeValid, FindByTimeNotYetValid and FindByTimeExpired should represent all certificates in the queried collection.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByTimeExpired">
            <summary>
            The findValue parameter for the Find must be a DateTime value in local time, such as Now. Note that the union of certificates returned using FindByTimeValid, FindByTimeNotYetValid and FindByTimeExpired should represent all certificates in the queried collection.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByTemplateName">
            <summary>
            The findValue parameter for the Find must be a string representing the template name of the certificate, such as "ClientAuth." A template name is an X509 version 3 extension that specifies the uses of the certificate.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByApplicationPolicy">
            <summary>
            The findValue parameter for the Find must be a string representing either the application policy friendly name or the object identifier (Oid) of the certificate. For example, "Encrypting File System" or "1.3.6.1.4.1.311.10.3.4" can be used. Note that for an application that is going to be localized, the OID value must be used since the friendly name is localized.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByCertificatePolicy">
            <summary>
            The findValue parameter for the Find must be a string representing either the friendly name or the object identifier (Oid) of the certificate policy. The best practice is to use the OID, such as "1.3.6.1.4.1.311.10.3.4". Note that for an application that is going to be localized, the OID must be used since the friendly name is localized.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByExtension">
            <summary>
            The findValue parameter for the Find must be a string describing the extension to find. The object identifier (OID) is most commonly used to direct the Find method to search for all certificates that have an extension matching that OID value.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindByKeyUsage">
            <summary>
            The findValue parameter for the Find must be either a string representing the key usage or an integer representing a bit mask containing all the requested key usages. For the string value, only one key usage at a time can be specified, but the Find method can be used in a cascading sequence to get the intersection of the requested usages. For example, the findValue parameter can be set to "KeyEncipherment" or an integer (0x30 indicates "KeyEncipherment" and "DataEncipherment"). Values of the X509KeyUsageFlags enumeration can also be used.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectKeyIdentifier">
            <summary>
            The findValue parameter for the Find must be a string representing the subject key identifier in hexadecimal, such as "F3E815D45E83B8477B9284113C64EF208E897112," as displayed in the UI.
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.MailAgentFactory">
            <summary>
            Factory of the MailAgent
            </summary>
        </member>
        <member name="T:Aspose.Network.WhoIs.WhoIsException">
            <summary>
            This exception is thrown when errors in WhoIsClient.
            </summary>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsException.#ctor">
            <summary>
            Initializes a new instance of the WhoIsException class.
            </summary>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WhoIsException class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Aspose.Network.WhoIs.WhoIsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the WhoIsException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Aspose.iCalendar.EndType">
            <summary>
            Specifies how the recurrence rule ends.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.EndType.None">
            <summary>
            Pattern does not have an end.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.EndType.Until">
            <summary>
            Pattern ends on a specified end date.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.EndType.Count">
            <summary>
            Pattern ends after specified number of occurrences.
            </summary>
        </member>
        <member name="T:Aspose.iCalendar.Frequency">
            <summary>
            Specifies frequency of the recurrence rule.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.Frequency.Secondly">
            <summary>
            Occurrences repeat based on an interval of a second or more.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.Frequency.Minutely">
            <summary>
            Occurrences repeat based on an interval of a minute or more.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.Frequency.Hourly">
            <summary>
            Occurrences repeat based on an interval of an hour or more.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.Frequency.Daily">
            <summary>
            Occurrences repeat based on an interval of a day or more.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.Frequency.Weekly">
            <summary>
            Occurrences repeat based on an interval of a week or more.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.Frequency.Monthly">
            <summary>
            Occurrences repeat based on an interval of a month or more.
            </summary>
        </member>
        <member name="F:Aspose.iCalendar.Frequency.Yearly">
            <summary>
            Occurrences repeat based on an interval of a year or more.
            </summary>
        </member>
        <member name="T:Aspose.Network.Proxy.ProxyClient">
            <summary>
            Represents the client implementation for proxies protocols.
            </summary>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.#ctor(System.String,System.Int32,System.String,System.String,Aspose.Network.Proxy.ProxyType)">
            <summary>
            Creates a new instance of the class <see cref="T:Aspose.Network.Proxy.ProxyClient"/>.
            </summary>
            <param name="proxyHost">The address of the proxy host.</param>
            <param name="port">The port of the proxy host</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="proxyType">The <see cref="T:Aspose.Network.Proxy.ProxyType">type</see> of the proxy.</param>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.#ctor(System.String,System.Int32,Aspose.Network.Proxy.ProxyType)">
            <summary>
            Creates a new instance of the class <see cref="T:Aspose.Network.Proxy.ProxyClient"/>
            </summary>
            <param name="proxyHost">The address of the proxy host.</param>
            <param name="port">The port of the proxy host</param>
            <param name="proxyType">The proxy type.</param>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.BeginConnect(System.String,System.Int32)">
            <summary>
            Asynchronously connects to the target server through the proxy.
            </summary>
            <param name="server">The server address.</param>
            <param name="port">The port of the server.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.BeginConnect(System.String,System.Int32,System.Object)">
            <summary>
            Asynchronously connects to the target server through the proxy.
            </summary>
            <param name="server">The server address.</param>
            <param name="port">The port of the server.</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronously connects to the target server through the proxy.
            </summary>
            <param name="server">The server address.</param>
            <param name="port">The port of the server.</param>
            <param name="asyncCallback">The AsyncCallback delegate</param>
            <param name="stateObject">An object that contains state information for this request.</param>
            <returns>An IAsyncResult that references the asynchronous connection.</returns>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.Connect(System.String,System.Int32)">
            <summary>
            Connects to the remote server through the proxy.
            </summary>
            <param name="server">The DNS name of the remote server to which you intend to connect. </param>
            <param name="port">The port number of the remote server to which you intend to connect. </param>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.Connect(System.Net.IPEndPoint)">
            <summary>
            Connects to the remote server through the proxy.
            </summary>
            <param name="remoteEP">The IPEndPoint to which you intend to connect. </param>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.Connect(System.Net.IPAddress,System.Int32)">
            <summary>
            Connects to the remote server through the proxy.
            </summary>
            <param name="address">The IPAddress of the host to which you intend to connect.</param>
            <param name="port">The port number to which you intend to connect.</param>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.GetStream">
            <summary>
            Returns the <see cref="T:System.Net.Sockets.NetworkStream">NetworkStream</see> used to send and receive data.
            </summary>
            <returns>The underlying <see cref="T:System.Net.Sockets.NetworkStream">NetworkStream</see>.</returns>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.Close">
            <summary>
            Closes the connection and releases all resources associated with the ProxyClient.
            </summary>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.Dispose">
            <summary>
            Releases all the resources associated with the ProxyClient.
            </summary>
        </member>
        <member name="M:Aspose.Network.Proxy.ProxyClient.EndConnect(System.IAsyncResult)">
            <summary>
            Ends an asynchronous process for connecting the remote server.
            </summary>		
            <param name="asyncResult">An IAsyncResult that stores state information and any user defined data for this asynchronous operation.</param>
        </member>
        <member name="E:Aspose.Network.Proxy.ProxyClient.ConnectCompleted">
            <summary>
            Occurs when the connection completed.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.LingerState">
            <summary>
            Gets or sets information about the sockets linger time.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.NoDelay">
            <summary>
            Gets or sets a value that disables a delay when send or receive buffers are not full.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.ProxyHost">
            <summary>
            Gets or sets the address of the proxy host.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.Active">
            <summary>
            Gets or set a value that indicates whether a connection has been made.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.Port">
            <summary>
            Gets or sets the port number to connect to the proxy host
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.Password">
            <summary>
            Gets or sets the password used to connect to the proxy host.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.Username">
            <summary>
            Gets or sets the username used to connect to the proxy host.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.SynchronizingObject">
            <summary>
            Gets or sets the object used to marshal the event handler calls issued as a result of a ProxyClient events.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.SendTimeout">
            <summary>
            Gets or sets the amount of time a ProxyClient will wait for a send operation to complete successfully.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.SendBufferSize">
            <summary>
            Gets or sets the size of the send buffer.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.ReceiveTimeout">
            <summary>
            Gets or sets the amount of time a ProxyClient will wait to receive data once a read operation is initiated.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ProxyClient.ReceiveBufferSize">
            <summary>
            Gets or sets the size of the receive buffer.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.TransferBrokenEventHandler">
            <summary>
            Represents the event handler for TransferBrokenEvent.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Aspose.Network.Ftp.DataConnectionMode">
            <summary>
            Represents the connection mode of file transfering.
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.DataConnectionMode.Auto">
            <summary>
            Passive mode is tried; and if it fails, try to use Active mode.
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.DataConnectionMode.Active">
            <summary>
            A PORT command is issued and the server connects to the client.
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.DataConnectionMode.Passive">
            <summary>
            A PASV command is issued and the client connects to the server.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.SOAResourceRecord">
            <summary>
            Represents a SOA DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.SOAResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.SOAResourceRecord">SOAResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.SOAResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.SOAResourceRecord">SOAResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.SOAResourceRecord.Serial">
            <summary>
            Gets or sets the serial
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.SOAResourceRecord.RName">
            <summary>
            Gets or sets the RName
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.SOAResourceRecord.Retry">
            <summary>
            Gets or sets the retry
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.SOAResourceRecord.Refresh">
            <summary>
            Gets or sets the refresh
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.SOAResourceRecord.MName">
            <summary>
            Gets or sets the MName
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.SOAResourceRecord.Minimum">
            <summary>
            Gets or sets the minimum
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.SOAResourceRecord.Expire">
            <summary>
            Gets or sets the expire
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.A6ResourceRecord">
            <summary>
            Presents the 
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.A6ResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.A6ResourceRecord">A6ResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.A6ResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.A6ResourceRecord">A6ResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.A6ResourceRecord.PrefixLength">
            <summary>
            Gets or sets the length of prefix
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.A6ResourceRecord.Address">
            <summary>
            Gets or sets the adress
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.A6ResourceRecord.Prefix">
            <summary>
            Gets or sets the prefix
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiMessagePropertyStream">
            <summary>
            Represents the property stream.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessagePropertyStream.#ctor(Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Outlook.MapiMessagePropertyStream"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessagePropertyStream.GetContent">
            <summary>
            Gets the content.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aspose.Network.Outlook.NormalMessageMailMessageInterpretor">
            <summary>
            Represents the default mail message interpretor.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.NormalMessageMailMessageInterpretor.#ctor">
            <summary>
            Initializes a new instance of the NormalMessageMailMessageInterpretor class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.NormalMessageMailMessageInterpretor.Clone">
            <summary>
            Creates a copy of the current instance.
            </summary>
            <returns>A copy of MailMessageInterpretor.</returns>
        </member>
        <member name="T:Aspose.Network.Mime.MimeHeader">
            <summary>
            Represents the mime header defined in RFC 2822.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeader.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.MimeHeader"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeader.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeHeader.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.Mime.MimeHeader.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeHeader.RawContent">
            <summary>
            Gets the content of the raw.
            </summary>
            <value>The content of the raw.</value>
        </member>
        <member name="T:Aspose.Network.Mail.MailMessageCollection">
            <summary>
            Represents a collection of <see cref="T:Aspose.Network.Mail.MailMessage">MailMessage</see> objects.
            </summary>
            <remarks>
            Provides a simple collection object that can represent a set of <see cref="T:Aspose.Network.Mail.MailMessage">MailMessage</see> objects.
            The <see cref="T:Aspose.Network.Mail.MailMessageCollection">MailMessageCollection</see> class provides a simple collection object that can be used to store a set of <see cref="T:Aspose.Network.Mail.MailMessage">MailMessage</see> objects.	
            </remarks>
        </member>
        <member name="M:Aspose.Network.Mail.MailMessageCollection.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Mail.MailMessageCollection">MailMessageCollection</see>.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Summary">
            <summary> Defines a SUMMARY iCalendar component property.
            
            <pre>
            4.8.1.12 Summary
            
            Property Name: SUMMARY
            
            Purpose: This property defines a short summary or subject for the
            calendar component.
            
            Value Type: TEXT
            
            Property Parameters: Non-standard, alternate text representation and
            language property parameters can be specified on this property.
            
            Conformance: The property can be specified in &quot;VEVENT&quot;, &quot;VTODO&quot;,
            &quot;VJOURNAL&quot; or &quot;VALARM&quot; calendar components.
            
            Description: This property is used in the &quot;VEVENT&quot;, &quot;VTODO&quot; and
            &quot;VJOURNAL&quot; calendar components to capture a short, one line summary
            about the activity or journal entry.
            
            This property is used in the &quot;VALARM&quot; calendar component to capture
            the subject of an EMAIL category of alarm.
            
            Format Definition: The property is defined by the following notation:
            
            summary    = &quot;SUMMARY&quot; summparam &quot;:&quot; text CRLF
            
            summparam  = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; altrepparam) / (&quot;;&quot; languageparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            
            )
            
            Example: The following is an example of this property:
            
            SUMMARY:Department Party
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Summary.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Summary.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Summary"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Summary.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Summary"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Summary.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Summary.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule">
            <summary> Defines a EXRULE iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule.#ctor(Aspose.Network.iCalendar.ObjectModel.Recur)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule"/> class.
            </summary>
            <param name="recur">The recur.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.Recur)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="recur">The recur.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.ExRule.Recur">
            <summary>
            Gets or sets the recur.
            </summary>
            <value>The recur.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Attach">
            <summary> Defines an ATTACH iCalendar component property.
            
            <pre>
            4.8.1.1 Attachment
            
            Property Name: ATTACH
            
            Purpose: The property provides the capability to associate a document
            object with a calendar component.
            
            Value Type: The default value type for this property is URI. The
            value type can also be set to BINARY to indicate inline binary
            encoded content information.
            
            Property Parameters: Non-standard, inline encoding, format type and
            value data type property parameters can be specified on this
            property.
            
            Conformance: The property can be specified in a &quot;VEVENT&quot;, &quot;VTODO&quot;,
            &quot;VJOURNAL&quot; or &quot;VALARM&quot; calendar components.
            
            Description: The property can be specified within &quot;VEVENT&quot;, &quot;VTODO&quot;,
            &quot;VJOURNAL&quot;, or &quot;VALARM&quot; calendar components. This property can be
            specified multiple times within an iCalendar object.
            
            Format Definition: The property is defined by the following notation:
            
            attach     = &quot;ATTACH&quot; attparam &quot;:&quot; uri  CRLF
            
            attach     =/ &quot;ATTACH&quot; attparam &quot;;&quot; &quot;ENCODING&quot; &quot;=&quot; &quot;BASE64&quot;
            &quot;;&quot; &quot;VALUE&quot; &quot;=&quot; &quot;BINARY&quot; &quot;:&quot; binary
            
            attparam   = *(
            
            ; the following is optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; fmttypeparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            
            )
            </pre>
            
            </summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aValue">a value string for this component
            </param>
            <throws>  IOException when there is an error reading the binary stream </throws>
            <throws>  URISyntaxException where the specified string is not a valid uri </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.#ctor(System.SByte[])">
            <param name="data">binary data
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.SByte[])">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="data">binary data
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.#ctor(System.Uri)">
            <param name="aUri">a URI
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Uri)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aUri">a URI
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.SetValue(System.String)">
            <summary> Sets the current value of the Attach instance. If the specified
            value is encoded binary data, the value is decoded and stored in
            the binary field. Otherwise the value is assumed to be a URI
            location to binary data and is stored as such.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.GetValue">
            <summary>
            Get the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.Binary">
            <summary>
            Gets or sets the binary.
            </summary>
            <value>The binary.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Attach.Uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Range">
            <summary> Defines a Recurrence Identifier Range parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Range.ThisAndPrior">
            <summary>
            ThisAndPrior.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Range.ThisAndFuture">
            <summary>
            ThisAndFuture.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Range.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Range"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Range.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Cn">
            <summary> Defines a Common Name parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Cn.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Cn"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Cn.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.AltRep">
            <summary>
            Defines an Alternate Text Representation parameter.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.AltRep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.AltRep"/> class.
            </summary>
            <param name="value">The value.</param>
            <throws>  URISyntaxException when the specified string is not a value (quoted) uri </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.AltRep.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.AltRep"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.AltRep.GetValue">
            <summary>
            Get the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Parameters.AltRep.Uri">
            <summary>
            Gets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.ParameterCollection">
            <summary> Defines a list of iCalendar parameters. A parameter list may be specified as unmodifiable at instantiation - useful
            for constant properties that you don't want modified.
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.#ctor">
            <summary>
            Default constructor. Creates a modifiable parameter list.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="unmodifiable">if set to <c>true</c> [unmodifiable].</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Boolean)">
            <summary>
            Creates a deep copy of the specified parameter list. That is, copies of all parameters in the specified list are
            added to this list.
            </summary>
            <param name="list">a parameter list to copy parameters from</param>
            <param name="unmodifiable">if set to <c>true</c> [unmodifiable].</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.GetParameter(System.String)">
            <summary>
            Returns the first parameter with the specified name.
            </summary>
            <param name="aName">name of the parameter</param>
            <returns>
            the first matching parameter or null if no matching parameters
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.GetParameters(System.String)">
            <summary>
            Returns a list of parameters with the specified name.
            </summary>
            <param name="name">name of parameters to return</param>
            <returns>a parameter list</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.Add(Aspose.Network.iCalendar.ObjectModel.Parameter)">
            <summary>
            Add a parameter to the list. Note that this method will not remove existing parameters of the same type. To
            achieve this use {
            </summary>
            <param name="parameter">the parameter to add</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.Replace(Aspose.Network.iCalendar.ObjectModel.Parameter)">
            <summary>
            Replace any parameters of the same type with the one specified.
            </summary>
            <param name="parameter">parameter to add to this list in place of all others with the same name</param>
            <returns>true if successfully added to this list</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>an iterator</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.Remove(Aspose.Network.iCalendar.ObjectModel.Parameter)">
            <summary>
            Remove a parameter from the list.
            </summary>
            <param name="parameter">the parameter to remove</param>
            <returns>
            true if the list contained the specified parameter
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.RemoveAll(System.String)">
            <summary>
            Remove all parameters with the specified name.
            </summary>
            <param name="paramName">Name of the param.</param>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.Empty">
            <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Network.iCalendar.ObjectModel.ParameterCollection"/> is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.ParameterCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.StoreName">
            <summary>
            Specifies the name of the X.509 certificate store to open.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreName.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreName.AddressBook">
            <summary>
            The X.509 certificate store for other users.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreName.AuthRoot">
            <summary>
            The X.509 certificate store for third-party certificate authorities (CAs).
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreName.CertificateAuthority">
            <summary>
            The X.509 certificate store for intermediate certificate authorities (CAs).
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreName.Disallowed">
            <summary>
            The X.509 certificate store for revoked certificates.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreName.My">
            <summary>
            The X.509 certificate store for personal certificates.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreName.Root">
            <summary>
            The X.509 certificate store for trusted root certificate authorities (CAs).
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreName.TrustedPeople">
            <summary>
            The X.509 certificate store for directly trusted people and resources.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.StoreName.TrustedPublisher">
            <summary>
            The X.509 certificate store for directly trusted publishers.
            </summary>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X509Store">
            <summary>
            Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.#ctor(Aspose.Network.Security.Cryptography.X509Certificates.StoreName)">
            <summary>
            Initializes a new instance of the X509Store class using the specified StoreName value.
            </summary>
            <param name="storeName">One of the StoreName values.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String)">
            <summary>
            Initializes a new instance of the X509Store class using the specified store name.
            </summary>
            <param name="storeName">A string value representing the store name. See StoreName for more information.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.#ctor(Aspose.Network.Security.Cryptography.X509Certificates.StoreName,Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation)">
            <summary>
            Initializes a new instance of the X509Store class using the specified StoreName and StoreLocation values.
            </summary>
            <param name="storeName">One of the StoreLocation values. </param>
            <param name="location">One of the StoreName values.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.#ctor(System.String,Aspose.Network.Security.Cryptography.X509Certificates.StoreLocation)">
            <summary>
            Initializes a new instance of the X509Store class using a string representing a value from the StoreName enumeration and a value from the StoreLocation enumeration.
            </summary>
            <param name="storeName">One of the StoreLocation values. </param>
            <param name="location">A string representing a value from the StoreName enumeration.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.Add(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Adds a certificate to an X.509 certificate store.
            </summary>
            <param name="certificate">An X509Certificate2 object.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.Dispose">
            <summary>
            Releases the unmanaged resources used by the X509Store.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.Finalize">
            <summary>
            Frees resources used by the X509Store class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.Remove(Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Removes a certificate from an X.509 certificate store.
            </summary>
            <param name="certificate">The certificate to remove.</param>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.StoreHandle">
            <summary>
            Gets an IntPtr handle to an HCERTSTORE store. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.Location">
            <summary>
            Gets the location of the X.509 certificate store.
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Store.Name">
            <summary>
            Gets the name of the X.509 certificate store.
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.MailClientAgent">
            <summary>
            Represents the mail client agent.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MailClientAgent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Windows.Forms.MailClientAgent"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MailClientAgent.Launch(System.String,System.String,Aspose.Windows.Forms.RecipientCollection,System.String[])">
            <summary>
            Launches the mail client.
            </summary>
            <param name="subject">The subject.</param>
            <param name="body">The body.</param>
            <param name="recipients">The recipients.</param>
            <param name="attachments">The attachments.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.MailClientAgent.Launch(System.String,System.String,Aspose.Windows.Forms.RecipientCollection)">
            <summary>
            Launches the mail client.
            </summary>
            <param name="subject">The subject.</param>
            <param name="body">The body.</param>
            <param name="recipients">The recipients.</param>
        </member>
        <member name="T:Aspose.iCalendar.RecurrenceRuleCollection">
            <summary>
            Represents a collection of <see cref="T:Aspose.iCalendar.RecurrenceRule"/> objects.
            </summary>
            <remarks>
            <p>Corresponds to a collection of RRULE or EXRULE parts of a recurrence pattern.</p>
            </remarks>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRuleCollection.Add">
            <summary>
            Adds a <see cref="T:Aspose.iCalendar.RecurrenceRule"/> to the collection.
            </summary>
            <returns>
            The zero-based index of the newly added item.
            </returns>
        </member>
        <member name="M:Aspose.iCalendar.RecurrenceRuleCollection.Add(Aspose.iCalendar.RecurrenceRule)">
            <summary>
            Adds a <see cref="T:Aspose.iCalendar.RecurrenceRule"/> to the collection.
            </summary>
            <param name="rule">The <see cref="T:Aspose.iCalendar.RecurrenceRule"/> to add.</param>
            <returns>The zero-based index of the newly added item.</returns>
        </member>
        <member name="P:Aspose.iCalendar.RecurrenceRuleCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:Aspose.iCalendar.RecurrenceRule"/> from the collection.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.LoggingException">
            <summary>
            The exception that is thrown when error is found in logging.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.LoggingException.#ctor">
            <summary>
            Initializes a new instance of the LoggingException class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.LoggingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LoggingException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Aspose.Network.Logging.LoggingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LoggingException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Aspose.Network.Dns.ResponseCode">
            <summary>
            Part of responses in the Dns message header.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.ResponseCode.Ready">
            <summary>
            No error condition.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.ResponseCode.FormatError">
            <summary>
            the name server was unable to interpret the query.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.ResponseCode.ServerFailure">
            <summary>
            The name server was unable to process this query due to a problem with the name server.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.ResponseCode.NameError">
            <summary>
            Meaningful only for responses from an authoritative name server, this code signifies that the domain name referenced in the query does not exist.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.ResponseCode.NotImplemented">
            <summary>
            The name server does not support the requested kind of query.
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.ResponseCode.Refused">
            <summary>
            The name server refuses to perform the specified operation for policy reasons. For example, a name server may not wish to provide the informatoion to the particular requester, or a name server may not wish to perform a particular operation (e.g., zone transfer) for particular data.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.WKSResourceRecord">
            <summary>
            Represents a WKS DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.WKSResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.WKSResourceRecord">WKSResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.WKSResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.WKSResourceRecord">WKSResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.WKSResourceRecord.BitMap">
            <summary>
            Gets or sets the Bit map
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.WKSResourceRecord.Address">
            <summary>
            Gets or sets the address
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.WKSResourceRecord.Protocol">
            <summary>
            Gets or sets the protocol
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.MessageType">
            <summary>
            Represents the messages received from the DNS servers is a query, or a response. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.MessageType.Query">
            <summary>
            Query message. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Dns.MessageType.Response">
            <summary>
            Response message.
            </summary>
        </member>
        <member name="T:Aspose.Network.Pop3.Pop3MailboxInfo">
            <summary>
            Represents the status of the mailbox
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3MailboxInfo.#ctor(System.Int32,System.Int64)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Pop3.MailboxInfo" /> . 
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3MailboxInfo.ToString">
            <summary>
            Converts this Pop3MailboxInfo structure to a human-readable string. 
            </summary>
            <returns></returns>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MailboxInfo.MessageCount">
            <summary>
            Gets the count of messages in the mailbox.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3MailboxInfo.OccupiedSize">
            <summary>
            Gets the occupied size of the mailbox
            </summary>
        </member>
        <member name="T:Aspose.Network.Pop3.Pop3Authentication">
            <summary>
            Pop3 Authentication method
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Authentication.Equals(System.Object)">
            <summary>
            Overrided.
            </summary>        
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Authentication.GetHashCode">
            <summary>
            Overrided.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Authentication.ToString">
            <summary>
            Overrided.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Authentication.CramMD5">
            <summary>
            RFC 2195 CRAM-MD5 authentication
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Authentication.DigestMD5">
            <summary>
            RFC 2831 DIGEST-MD5 authentication
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Authentication.Plain">
            <summary>
            RFC 2595 TLS plaintext authentication
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Authentication.Login">
            <summary>
            Login authentication
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Authentication.ClearText">
            <summary>
            Clear text USER/PASS login
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Authentication.Auto">
            <summary>
            Auto detects the authentication methods.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.DispositionTypeNames">
            <summary>
            Supplies the strings used to specify the disposition type for an e-mail attachment.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.DispositionTypeNames.Attachment">
            <summary>
            Specifies that the attachment is to be displayed as a file attached to the e-mail message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mime.DispositionTypeNames.Inline">
            <summary>
            Specifies that the attachment is to be displayed as part of the e-mail message body.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MessageTemplateManager.#ctor">
            <summary>
            create template manager using a template
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MessageTemplateManager.SetValue(System.String,System.Object)">
            <summary>
            sets value for variable called name
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MessageTemplateManager.GetValue(System.String)">
            <summary>
            gets value for variable called name.
            Throws exception if value is not found
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MessageTemplateManager.Process(System.IO.TextWriter,Aspose.Network.Template.ElementList)">
            <summary>
            processes current template and sends output to writer
            </summary>
            <param name="writer">The writer.</param>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MessageTemplateManager.ProcessElements(System.IO.TextWriter,Aspose.Network.Template.ElementList)">
            <summary>
            processes list of elements.
            This method is mostly used by extenders of the manager
            from custom functions or custom tags.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MessageTemplateManager.EvalExpression(System.IO.TextWriter,Aspose.Network.Template.Expression)">
            <summary>
            evaluates expression.
            This method is used by TemplateManager extensibility.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MessageTemplateManager.WriteValue(System.IO.TextWriter,System.Object)">
            <summary>
            writes value to current writer
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">value to be written</param>
        </member>
        <member name="P:Aspose.Network.Mail.MessageTemplateManager.Functions">
            <summary>
            gets library of functions that are available
            for the tempalte execution
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.MessageTemplateManager.SilentErrors">
            <summary>
            if silet errors is set to true, then any exceptions will not show in the output
            If set to false, all exceptions will be displayed.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.LastModified">
            <summary> Defines a LAST-MODIFIED iCalendar component property.
            
            <pre>
            4.8.7.3 Last Modified
            
            Property Name: LAST-MODIFIED
            
            Purpose: The property specifies the date and time that the
            information associated with the calendar component was last revised
            in the calendar store.
            
            Note: This is analogous to the modification date and time for a
            file in the file system.
            
            Value Type: DATE-TIME
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: This property can be specified in the &quot;EVENT&quot;, &quot;VTODO&quot;,
            &quot;VJOURNAL&quot; or &quot;VTIMEZONE&quot; calendar components.
            
            Description: The property value MUST be specified in the UTC time
            format.
            
            Format Definition: The property is defined by the following notation:
            
            last-mod   = &quot;LAST-MODIFIED&quot; lstparam &quot;:&quot; date-time CRLF
            
            lstparam   = *(&quot;;&quot; xparam)
            </pre>
            
            </summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LastModified.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LastModified.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aValue">a value string for this component
            </param>
            <throws>  ParseException where the specified value string is not a valid date-time/date representation </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LastModified.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <param name="aDate">a date representation of a date-time value
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.LastModified.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aDate">a date representation of a date-time value
            </param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Geo">
            <summary> Defines a GEO iCalendar component property.
            
            <pre>
            4.8.1.6 Geographic Position
            
            Property Name: GEO
            
            Purpose: This property specifies information related to the global
            position for the activity specified by a calendar component.
            
            Value Type: FLOAT. The value MUST be two SEMICOLON separated FLOAT
            values.
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: This property can be specified in  &quot;VEVENT&quot; or &quot;VTODO&quot;
            calendar components.
            
            Description: The property value specifies latitude and longitude, in
            that order (i.e., &quot;LAT LON&quot; ordering). The longitude represents the
            location east or west of the prime meridian as a positive or negative
            real number, respectively. The longitude and latitude values MAY be
            specified up to six decimal places, which will allow for accuracy to
            within one meter of geographical position. Receiving applications
            MUST accept values of this precision and MAY truncate values of
            greater precision.
            
            Values for latitude and longitude shall be expressed as decimal
            fractions of degrees. Whole degrees of latitude shall be represented
            by a two-digit decimal number ranging from 0 through 90. Whole
            degrees of longitude shall be represented by a decimal number ranging
            from 0 through 180. When a decimal fraction of a degree is specified,
            it shall be separated from the whole number of degrees by a decimal
            point.
            
            Latitudes north of the equator shall be specified by a plus sign (+),
            or by the absence of a minus sign (-), preceding the digits
            designating degrees. Latitudes south of the Equator shall be
            designated by a minus sign (-) preceding the digits designating
            degrees. A point on the Equator shall be assigned to the Northern
            Hemisphere.
            
            Longitudes east of the prime meridian shall be specified by a plus
            sign (+), or by the absence of a minus sign (-), preceding the digits
            designating degrees. Longitudes west of the meridian shall be
            designated by minus sign (-) preceding the digits designating
            degrees. A point on the prime meridian shall be assigned to the
            Eastern Hemisphere. A point on the 180th meridian shall be assigned
            to the Western Hemisphere. One exception to this last convention is
            permitted. For the special condition of describing a band of latitude
            around the earth, the East Bounding Coordinate data element shall be
            assigned the value +180 (180) degrees.
            
            Any spatial address with a latitude of +90 (90) or -90 degrees will
            specify the position at the North or South Pole, respectively. The
            component for longitude may have any legal value.
            
            With the exception of the special condition described above, this
            form is specified in Department of Commerce, 1986, Representation of
            geographic point locations for information interchange (Federal
            Information Processing Standard 70-1):  Washington,  Department of
            Commerce, National Institute of Standards and Technology.
            
            The simple formula for converting degrees-minutes-seconds into
            decimal degrees is:
            
            decimal = degrees + minutes/60 + seconds/3600.
            
            Format Definition: The property is defined by the following notation:
            
            geo        = &quot;GEO&quot; geoparam &quot;:&quot; geovalue CRLF
            
            geoparam   = *(&quot;;&quot; xparam)
            
            geovalue   = float &quot;;&quot; float
            ;Latitude and Longitude components
            
            Example: The following is an example of this property:
            
            GEO:37.386013;-122.082932
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Geo.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Geo.#ctor(System.String)">
            <summary>
            Creates a new instance by parsing the specified string representation.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Geo.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Geo"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Geo.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Geo"/> class.
            </summary>
            <param name="latitude">a latitudinal value</param>
            <param name="longitude">a longitudinal value</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Geo.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Geo"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="latitude">a latitudinal value</param>
            <param name="longitude">a longitudinal value</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Geo.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Geo.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Geo.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Geo.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Completed">
            <summary> Defines a COMPLETED iCalendar component property.
            
            <pre>
            4.8.2.1 Date/Time Completed
            
            Property Name: COMPLETED
            
            Purpose: This property defines the date and time that a to-do was
            actually completed.
            
            Value Type: DATE-TIME
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: The property can be specified in a &quot;VTODO&quot; calendar
            component.
            
            Description: The date and time MUST be in a UTC format.
            
            Format Definition: The property is defined by the following notation:
            
            completed  = &quot;COMPLETED&quot; compparam &quot;:&quot; date-time CRLF
            
            compparam  = *(&quot;;&quot; xparam)
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Completed.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Completed.#ctor(System.String)">
            <param name="aValue">a value string for this component
            </param>
            <throws>  ParseException when the specified string is not a valid date-time represenation </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Completed.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aValue">a value string for this component
            </param>
            <throws>  ParseException when the specified string is not a valid date-time represenation </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Completed.#ctor(Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <param name="aDate">a date
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Completed.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.DateTime)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aDate">a date
            </param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz">
            <summary> Defines a CLASS iCalendar property.
            
            <pre>
            4.8.1.3 Classification
            
            Property Name: CLASS
            
            Purpose: This property defines the access classification for a
            calendar component.
            
            Value Type: TEXT
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: The property can be specified once in a &quot;VEVENT&quot;,
            &quot;VTODO&quot; or &quot;VJOURNAL&quot; calendar components.
            
            Description: An access classification is only one component of the
            general security system within a calendar application. It provides a
            method of capturing the scope of the access the calendar owner
            intends for information within an individual calendar entry. The
            access classification of an individual iCalendar component is useful
            when measured along with the other security components of a calendar
            system (e.g., calendar user authentication, authorization, access
            rights, access role, etc.). Hence, the semantics of the individual
            access classifications cannot be completely defined by this memo
            alone. Additionally, due to the &quot;blind&quot; nature of most exchange
            processes using this memo, these access classifications cannot serve
            as an enforcement statement for a system receiving an iCalendar
            object. Rather, they provide a method for capturing the intention of
            the calendar owner for the access to the calendar component.
            
            Format Definition: The property is defined by the following notation:
            
            class      = &quot;CLASS&quot; classparam &quot;:&quot; classvalue CRLF
            
            classparam = *(&quot;;&quot; xparam)
            
            classvalue = &quot;PUBLIC&quot; / &quot;PRIVATE&quot; / &quot;CONFIDENTIAL&quot; / iana-token
            / x-name
            ;Default is PUBLIC
            
            Example: The following is an example of this property:
            
            CLASS:PUBLIC
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz.Public">
            <summary>
            Public.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz.Private">
            <summary>
            Private.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz.Confidential">
            <summary>
            Confidential.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Clazz.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Encoding">
            <summary> Defines an Inline Encoding parameter. Constants are provided for all encodings specified in <a
            href="http://www.ietf.org/rfc/rfc2045.txt">RFC2045</a>.
            
            <pre>
            4.2.7 Inline Encoding
            
            Parameter Name: ENCODING
            
            Purpose: To specify an alternate inline encoding for the property
            value.
            
            Format Definition: The property parameter is defined by the following
            notation:
            
            encodingparam      = &quot;ENCODING&quot; &quot;=&quot;
            (&quot;8BIT&quot;
            ; &quot;8bit&quot; text encoding is defined in [RFC 2045]
            / &quot;BASE64&quot;
            ; &quot;BASE64&quot; binary encoding format is defined in [RFC 2045]
            / iana-token
            ; Some other IANA registered iCalendar encoding type
            / x-name)
            ; A non-standard, experimental encoding type
            
            Description: The property parameter identifies the inline encoding
            used in a property value. The default encoding is &quot;8BIT&quot;,
            corresponding to a property value consisting of text. The &quot;BASE64&quot;
            encoding type corresponds to a property value encoded using the
            &quot;BASE64&quot; encoding defined in [RFC 2045].
            
            If the value type parameter is &quot;;VALUE=BINARY&quot;, then the inline
            encoding parameter MUST be specified with the value
            &quot;;ENCODING=BASE64&quot;.
            
            Example:
            
            ATTACH;FMTYPE=IMAGE/JPEG;ENCODING=BASE64;VALUE=BINARY:MIICajC
            CAdOgAwIBAgICBEUwDQYJKoZIhvcNAQEEBQAwdzELMAkGA1UEBhMCVVMxLDA
            qBgNVBAoTI05ldHNjYXBlIENvbW11bmljYXRpb25zIENvcnBvcmF0aW9uMRw
            &lt;...remainder of &quot;BASE64&quot; encoded binary data...&gt;
            </pre>
            
            </summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Encoding.SeventBit">
            <summary>
            SeventBit.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Encoding.EightBit">
            <summary>
            EightBit.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Encoding.Binary">
            <summary>
            Binary.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Encoding.QuotedPrintable">
            <summary>
            QuotedPrintable.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Encoding.Base64">
            <summary>
            Base64.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Encoding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Encoding"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Encoding.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedFrom">
            <summary> Defines a Delegators parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedFrom.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedFrom"/> class.
            </summary>
            <param name="value">The value.</param>
            <throws>  URISyntaxException when the specified string is not a valid list of cal-addresses </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedFrom.#ctor(Aspose.Network.iCalendar.ObjectModel.AddressCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedFrom"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedFrom.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Parameters.DelegatedFrom.Delegators">
            <summary>
            Gets the delegators.
            </summary>
            <value>The delegators.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.DefaultTimeZoneRegistryFactory">
            <summary> Default factory implementation for timezone registries.</summary>
            <author>  
            </author>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.TimeZoneRegistryFactory">
            <summary> Provides access to the configured <code>TimeZoneRegistry</code> instance.
            Alternative factory implementations may be specified via the following
            system property:
            <pre>net.fortuna.ical4j.timezone.registry=&lt;factory_class_name&gt;</pre>
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.TimeZoneRegistryFactory.createRegistry">
            <summary> Returns a new instance of the configured <code>TimeZoneRegistry</code>.</summary>
            <returns> a timezone registry instance
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.TimeZoneRegistryFactory.Instance">
            <returns>
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.XComponent">
            <summary> Implementation of an experimental component as defined in RFC2445.</summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.XComponent.#ctor(System.String)">
            <summary> Creates a new experimental component with the specified name.</summary>
            <param name="name">the name of the experimental component
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.XComponent.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary> Creates a new experimental component with the specified name and properties.</summary>
            <param name="name">the name of the experimental component
            </param>
            <param name="properties">a list of properties
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.XComponent.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.AddressCollection">
            <summary>
            Defines a list of iCalendar addresses.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.AddressCollection.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.AddressCollection.#ctor(System.String)">
            <summary>
            Parses the specified string representation to create a list of addresses.
            </summary>
            <param name="aValue">a string representation of a list of addresses</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.AddressCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.AddressCollection.Add(System.Uri)">
            <summary>
            Add an address to the list.
            </summary>
            <param name="address">the address to add</param>
            <returns>true</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.AddressCollection.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>an iterator</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.AddressCollection.Remove(System.Uri)">
            <summary> Remove an address from the list.</summary>
            <param name="address">the address to remove
            </param>
            <returns> true if the list contained the specified address
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.AddressCollection.Empty">
            <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Network.iCalendar.ObjectModel.AddressCollection"/> is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
            <returns> boolean indicates if the list is empty
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.AddressCollection.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags">
            <summary>
            Defines the status of an X509 chain.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CaNotTrusted">
            <summary>
            CaNotTrusted.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CnNotMatch">
            <summary>
            CnNotMatch.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CtlSignatureNotValid">
            <summary>
            Specifies that the certificate trust list (CTL) contains an invalid signature.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CtlTimeNotValid">
            <summary>
            Specifies that the certificate trust list (CTL) is not valid because of an invalid time value, such as one that indicates that the CTL has expired.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.CtlNotValidForUsage">
            <summary>
            Specifies that the certificate trust list (CTL) is not valid for this use.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.Cyclic">
            <summary>
            Specifies that the X509 chain could not be built.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasExcludedNameConstraint">
            <summary>
            ExcludedNameConstraint.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.ExplicitDistrust">
            <summary>
            ExplicitDistrust.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.PartialChain">
            <summary>
            Specifies that the X509 chain could not be built up to the root certificate.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidBasicConstraints">
            <summary>
            Specifies that the X509 chain is invalid due to invalid basic constraints.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidChain">
             <summary>
            InvalidChain.
             </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidExtension">
            <summary>
            Specifies that the X509 chain is invalid due to an invalid extension.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidNameConstraints">
            <summary>
            Specifies that the X509 chain is invalid due to invalid name constraints.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.InvalidPolicyConstraints">
            <summary>
            Specifies that the X509 chain is invalid due to invalid policy constraints.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.Malformed">
            <summary>
            Malformed.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.MoreErrors">
            <summary>
            MoreErrors.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoIssuanceChainPolicy">
            <summary>
            Specifies that there is no certificate policy extension in the certificate. This error would occur if a group policy has specified that all certificates must have a certificate policy.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasNotDefinedNameConstraint">
            <summary>
            Specifies that the certificate has an undefined name constant.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasNotPermittedNameConstraint">
            <summary>
            Specifies that the certificate has an impermissible name constraint.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.OfflineRevocation">
            <summary>
            Specifies that the online certificate revocation list (CRL) the X509 chain relies on is currently offline.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.PathTooLong">
            <summary>
            PathTooLong.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.Revoked">
            <summary>
            Specifies that the X509 chain is invalid due to a revoked certificate.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.UntrustedRoot">
            <summary>
            Specifies that the X509 chain is invalid due to an untrusted root certificate.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotSignatureValid">
            <summary>
            Specifies that the X509 chain is invalid due to an invalid certificate signature.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.TimeNotNested">
            <summary>
            Specifies that the CA (certificate authority) certificate and the issued certificate have validity periods that are not nested. For example, the CA cert can be valid from January 1 to December 1 and the issued certificate from January 2 to December 2, which would mean the validity periods are not nested.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.TimeNotValid">
            <summary>
            Specifies that the X509 chain is not valid due to an invalid time value, such as a value that indicates an expired certificate.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.UnknownCa">
            <summary>
            UnknownCa.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.UnknownCriticalExtension">
            <summary>
            UnknownCriticalExtension.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.UnknownError">
            <summary>
            UnknownError.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.RevocationStatusUnknown">
            <summary>
            Specifies that it is not possible to determine whether the certificate has been revoked. This can be due to the certificate revocation list (CRL) being offline or unavailable.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.HasNotSupportedNameConstraint">
            <summary>
            Specifies that the certificate does not have a supported name constant or has a name constant that is unsupported.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NotValidForUsage">
            <summary>
            Specifies that the key usage is not valid.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError">
            <summary>
            Specifies that the X509 chain has no errors.
            </summary>
        </member>
        <member name="T:Aspose.Network.WhoIs.QueryCompletedEventHandler">
            <summary>
            Event handler for Send an E-Mail message.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Aspose.Network.Proxy.ConnectCompletedEventArgs">
            <summary>
            Represents the event for onnection completed.
            </summary>
        </member>
        <member name="P:Aspose.Network.Proxy.ConnectCompletedEventArgs.AsyncResult">
            <summary>
            Gets the result of the asynchronous operation requested.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.TimeExceededMessage">
            <summary>
            Represents the time exceeded icmp messages.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.TimeExceededMessage.#ctor">
            <summary>
            Initializes a new instance of the TimeExceededMessage class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.ListItemStyle">
            <summary>
            Represents the style of the list item.
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.ListItemStyle.MSDOS">
            <summary>
            MS-DOS style
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.ListItemStyle.Unix">
            <summary>
            Unix style
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.ListItemStyle.VMS">
            <summary>
            VAX/VMS style
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.TransferType">
            <summary>
            Represents the type for data tranfering.
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.TransferType.Ascii">
            <summary>
            ASCII (7 bit) file transfers
            </summary>
        </member>
        <member name="F:Aspose.Network.Ftp.TransferType.Binary">
            <summary>
            Binary (8 bit) file transfers
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.NSAPResourceRecord">
            <summary>
            Represents a NSAP DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.NSAPResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.NSAPResourceRecord">NSAPResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.NSAPResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.NSAPResourceRecord">NSAPResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.NSAPResourceRecord.NSAPAddress">
            <summary>
            Gets or sets the NSA address
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.CNAMEResourceRecord">
            <summary>
            Represents an CNAME DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.CNAMEResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.CNAMEResourceRecord">CNAMEResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.CNAMEResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.CNAMEResourceRecord">CNAMEResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.CNAMEResourceRecord.CanonicalName">
            <summary>
            Gets or sets the canonical name
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.QueryMessage">
            <summary>
            Represents the query sent to the DNS servers.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.QueryMessage.#ctor(System.String,Aspose.Network.Dns.QueryType)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.QueryMessage"/>.
            </summary>
            <param name="domainName">The domain name to query.</param>
            <param name="queryType">The type of the query.</param>
        </member>
        <member name="M:Aspose.Network.Dns.QueryMessage.#ctor(System.String,Aspose.Network.Dns.QueryType,Aspose.Network.Dns.QueryClass)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.QueryMessage"/>.
            </summary>
            <param name="domainName">The domain name to query.</param>
            <param name="queryType">The type of the query.</param>
            <param name="queryClass">The class of the query.</param>
        </member>
        <member name="M:Aspose.Network.Dns.QueryMessage.#ctor(Aspose.Network.Dns.Question)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.QueryMessage"/>.
            </summary>
            <param name="question">The question to send by the query.</param>
        </member>
        <member name="M:Aspose.Network.Dns.QueryMessage.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.QueryMessage"/>.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.Questions">
            <summary>
            Gets or sets the questions in the query message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.AdditionalRecords">
            <summary>
            Gets or sets the additional records
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.Answers">
            <summary>
            Gets or sets the resource record received from the Dns servers.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.Authorities">
            <summary>
            Gets or sets the authorities resource records
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.AdditionalRecordsCount">
            <summary>
            Specifying the number of resource records in the additional records session.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.AnswersCount">
            <summary>
            Specifying the number of resource records in the answer section.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.NameServersCount">
            <summary>
            Specifying the number of name server resource records in the authority records section.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.QueriesCount">
            <summary>
            Specifying the number of entryies in the question section.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.Identifier">
            <summary>
            A 16 bit identifier assigned by the program that generates any kind of query. this identifier is copied the corresponding reply and can be used by the requester to match up replies to outstanding queries.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.MessageType">
            <summary>
            Gets or sets the message tpe
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.OptionCode">
            <summary>
            Gets or sets the  option code
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.AuthoritativeAnswer">
            <summary>
            Gets or sets the signal of authoritative answer
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.Truncation">
            <summary>
            Gets or sets the signal for truncation
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.RecursionDesired">
            <summary>
            Gets or sets the signal indicates whether recursion is desired.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.RecursionAvailable">
            <summary>
            Gets or sets the signal indicates whether recursion is availble
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.Reserved">
            <summary>
            Gets or sets the reserved field
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.ResponseCode">
            <summary>
            Gets or sets the response code
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.QueryMessage.HeaderInfo">
            <summary>
            Present the header information in the DNS query message instance.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.HeaderInfo.AdditionalRecordsCount">
            <summary>
            Specifying the number of resource records in the additional records session.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.HeaderInfo.AnswersCount">
            <summary>
            Specifying the number of resource records in the answer section.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.HeaderInfo.NameServersCount">
            <summary>
            Specifying the number of name server resource records in the authority records section.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.HeaderInfo.QueriesCount">
            <summary>
            Specifying the number of entryies in the question section.
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.QueryMessage.HeaderInfo.Identifier">
            <summary>
            A 16 bit identifier assigned by the program that generates any kind of query. this identifier is copied the corresponding reply and can be used by the requester to match up replies to outstanding queries.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiMessageFlags">
            <summary>
            MapiMessageFlags.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiMessageFlags.MSGFLAG_UNSENT">
            <summary>
            MSGFLAG_UNSENT.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiMessageFlags.MSGFLAG_FROMME">
            <summary>
            MSGFLAG_FROMME.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiMessageFlags.MSGFLAG_HASATTACH">
            <summary>
            MSGFLAG_HASATTACH.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiMessageFlags.MSGFLAG_ASSOCIATED">
            <summary>
            MSGFLAG_ASSOCIATED.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiMessageFlags.MSGFLAG_RESEND">
            <summary>
            MSGFLAG_RESEND.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.OutlookMessageFormat">
            <summary>
            Represents outlook message format.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.OutlookMessageFormat.ASCII">
            <summary>
            ASCII.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.OutlookMessageFormat.Unicode">
            <summary>
            Unicode.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.MimeException">
            <summary>
            Represents the exception that is thrown when errors found in eml parsing.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.MimeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.MimeException"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.MimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.MimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.MimeException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="M:Aspose.Network.Mime.MimeException.#ctor(System.String,Aspose.Network.Mime.MimeExceptionStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.MimeException"/> class.
            </summary>
            <param name="msg">The MSG.</param>
            <param name="status">The status.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.MimeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is a null reference (Nothing in Visual Basic). </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter"/>
            </PermissionSet>
        </member>
        <member name="P:Aspose.Network.Mime.MimeException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
        </member>
        <member name="T:Aspose.Network.Imap.ImapClient">
            <summary>
            <p>The ImapClient calss allows applications to manage E-Mail box by using the Internet Message Access Protocol (IMAP).</p>
            
            <p>The ImapClient class fully supports the Imap commands and functions.</p>
            
            <p>The ImapClient class fully supports the Asynchronous and Synchronous programming model.</p>
            
            <p>The ImapClient the major entry for the developers who want to add Imap management to their .Net applications.</p>
            </summary>
            <example>
            <p>The following exmaple demonstrates how to use ImapClient class to fetch e-mail messages from the server.</p>
            [C#]
            <code>
            //create imap client with specified server, username and password.
            ImapClient client = new ImapClient("imap.yourdomain.com", "username", "password");
            try
            {
            	//connect and login to the imap server
            	client.Connect(true);
            	//select the inbox as the current working folder
            	client.SelectFolder("inbox");
            	//save the message
            	client.SaveMessage(1, "file.eml");
            }
            catch (ImapException ex)
            {
            	System.Diagnostics.Debug.WriteLine(ex.ToString());
            }
            </code>
            [VB.NET]
            <code>
            'create imap client with specified server, username and password.
            Dim client As ImapClient =  New ImapClient("imap.yourdomain.com","username","password") 
            Try
            	'connect and login to the imap server
            	client.Connect(True)
            	'select the inbox as the current working folder
            	client.SelectFolder("inbox")
            	'save the message
            	client.SaveMessage(1, "file.eml")
            Catch ex As ImapException
            	System.Diagnostics.Debug.WriteLine(ex.ToString())
            End Try
            </code>
            </example>
            <note>
            Internet Message Access Protocol (IMAP) is defined in RFC 3501, which is available at http://www.ietf.org.
            </note>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.#ctor">
            <summary>
            Creates a new ImapClient instance.
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.#ctor(System.String)">
            <summary>
            Creates a new ImapClient instance
            </summary>
            <param name="host">The host address.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new ImapClient instance
            </summary>
            <param name="host">The host address.</param>
            <param name="port">The server port (eg. 143). </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a new Imapclient instance used specified values.
            </summary>
            <param name="host">The host address.</param>
            <param name="username">The username to login to the server</param>
            <param name="password">The password for the username.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Creates a new ImapClient instance.
            </summary>
            <param name="host">The host address.</param>
            <param name="port">The port number.</param>
            <param name="username">The user name.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.Connect">
            <summary>
            Connects to the IMAP server. 
            </summary>        
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.Connect(System.Boolean)">
            <summary>
            Connects to the IMAP server. 
            </summary>
            <param name="autoLogin">If it needs auto login to the server.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.CopyMessage(System.Int32,System.String)">
            <summary>
            Copies a message with the specified sequence number to the specified folder. 
            </summary>
            <param name="sequenceNumber">The sequence number of the message.</param>
            <param name="folderName">Folder that will receive copies of the message. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.CopyMessage(System.String,System.String)">
            <summary>
            Copies a message with the specified unique ID to the specified folder. 
            </summary>
            <param name="uniqueId">Message unique ID. </param>
            <param name="folderName">Folder that will receive copies of the message. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.CreateFolder(System.String)">
            <summary>
            Creates a folder with the specified name. 
            </summary>
            <param name="folderName">Folder to be created. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ExistFolder(System.String)">
            <summary>
            Check whether this folder exists
            </summary>
            <param name="folderName">name of the folder</param>
            <returns>Returns True if the folder is existing, otherwise returns False</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ExistFolder(System.String,Aspose.Network.Imap.ImapFolderInfo@)">
            <summary>
            Check whether this folder exists, extract folder info if so
            </summary>
            <param name="folderName">name of the folder</param>
            <param name="folderInfo">folder information</param>
            <returns>Returns True if the folder is existing, otherwise returns False</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.DeleteFolder(System.String)">
            <summary>
            Deletes a specified folder. This method represents IMAP DELETE command.
            </summary>
            <param name="folderName">Folder to be deleted. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.DeleteMessage(System.Int32)">
            <summary>
            Marks a message with the specified sequence number as deleted. 
            </summary>
            <param name="sequenceNumber">The sequence number of the message.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.DeleteMessage(System.String)">
            <summary>
            Marks a message with the specified unique ID  as deleted. 
            </summary>
            <param name="uniqueId">The unique id of the message</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.Disconnect">
            <summary>
            Disconnects from the IMAP server. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Appender, and optionally disposes of the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ListFolder(System.String)">
            <summary>
            Returns information about the specified folder without selecting it. 
            </summary>
            <param name="folderName">Folder to retrieve information about. </param>
            <returns>The specified folder information.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ListFolders">
            <summary>
            Gets the list of root subfolders.
            </summary>
            <returns>Information of subfolders.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ListFolders(System.String)">
            <summary>
            Gets the list of subfolders in specified folder.
            </summary>
            <param name="folderName">The path to folder for which a list of subfolders is returned. </param>
            <returns>A list of subfolders.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ListFolders(System.String,System.Boolean)">
            <summary>
            Gets the list of subfolders in specified folder.
            </summary>
            <param name="folderName">The path to folder for which a list of subfolders is returned. </param>
            <param name="subscribedOnly">Returns subscribed folders only if true</param>
            <returns>A list of subfolders.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ListFolders(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the list of subfolders in the specified folder
            </summary>
            <param name="folderName">The path to folder for which a list of subfolders is returned. </param>
            <param name="subscribedOnly">Returns subscribed folders only if true</param>
            <param name="recursive">Specifies whether to return the shole subfolder tree. </param>
            <returns>A list of subfolders.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.FetchMessage(System.Int32)">
            <summary>
            Downloads the message with the specified sequence number and loads it into an instance of MailMessage.
            </summary>
            <param name="sequenceNumber">The sequence number of the message</param>
            <returns>The downloaded mailmessage.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.FetchMessage(System.String)">
            <summary>
            Downloads the message with the specified unique ID and loads it into an instance of MailMessage. 
            </summary>
            <param name="uniqueId">Message unique ID. </param>
            <returns>The downloaded mailmessage.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.SaveMessage(System.Int32,System.IO.Stream)">
            <summary>
            Downloads the message with the specified sequence number and writes its data into a supplied stream
            </summary>
            <param name="sequenceNumber">The sequence number of the message.</param>
            <param name="output">Stream that will receive the message. </param>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.SaveMessage(System.Int32,System.String)">
            <summary>
            Downloads the message with the specified sequence number and writes its data into a local file. 
            </summary>
            <param name="sequenceNumber">The sequence number of the message.</param>
            <param name="fileName">The path of the local file. This cannot be a directory. </param>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.SaveMessage(System.String,System.IO.Stream)">
            <summary>
            Downloads the message with the specified unique ID and writes its data into a supplied stream. 
            </summary>
            <param name="uniqueId">Message unique ID. </param>
            <param name="output">Stream that will receive the message.</param>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.SaveMessage(System.String,System.String)">
            <summary>
            Downloads the message with the specified unique ID and writes its data into a local file. 
            </summary>
            <param name="uniqueId">Message unique ID. </param>
            <param name="fileName">The path of the local file. This cannot be a directory. </param>
            <returns>The length of the message in bytes.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.GetMessageHeaders(System.Int32,System.IO.Stream)">
            <summary>
            Downloads the headers of a message with the specified sequence number and writes it into a supplied stream. 
            </summary>
            <param name="sequenceNumber">The sequence number of the message.</param>
            <param name="output">Stream that will receive the message headers. </param>
            <returns>The length of the headers in bytes.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.GetMessageHeaders(System.String,System.IO.Stream)">
            <summary>
            Downloads the headers of a message with the specified unique ID and writes it into a supplied stream. 
            </summary>
            <param name="uniqueId">Message unique ID. </param>
            <param name="output">Stream that will receive the message headers. </param>
            <returns>The length of the headers in bytes.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ListMessage(System.Int32)">
            <summary>
            Get mail message information
            </summary>
            <param name="sequenceNumber">identifier stands for this mail message</param>
            <returns>ImapMessageInfo</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ListMessage(System.String)">
            <summary>
            Get mail message information
            </summary>
            <param name="uniqueId">unique identifier string stands for this mail message</param>
            <returns>The ImapMessageInfo for the specified E-Mail message.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ListMessages">
            <summary>
            Gets the list of messages in the current folder. 
            </summary>
            <returns>Collection of ImapMessageInfo objects.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.Login">
            <summary>
            Authenticates the user to the IMAP server using the specified authentication method.
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.Login(Aspose.Network.Imap.ImapAuthentication)">
            <summary>
            Log in to the Imap server
            </summary>
            <param name="method">authentication method by login</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ExpungeMessages">
            <summary>
            Permanently removes all messages marked as deleted (with a Deleted flag) from the current folder. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.RenameFolder(System.String,System.String)">
            <summary>
            Renames a specified folder to a new name. 
            </summary>
            <param name="folderName">Folder to be renamed. </param>
            <param name="newName">New folder name</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.RequestCheckpoint">
            <summary>
            Requests a checkpoint of the currently selected mailbox. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.SelectFolder(System.String)">
            <summary>
            Selects the specified folder.
            </summary>
            <param name="folderName">Folder to be selected. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.SelectFolder(System.String,System.Boolean)">
            <summary>
            Selects the specified folder . 
            </summary>
            <param name="folderName">Folder to be selected. </param>
            <param name="readOnly">Specifies whether the folder is to be selected as read-only. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AddMessageFlags(System.Int32,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Adds the flags to the message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.RemoveMessageFlags(System.Int32,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Removes the flags of the message.
            </summary>		
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ChangeMessageFlags(System.Int32,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Changes the flags of the message.
            </summary>		
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AddMessageFlags(System.String,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Adds the flags to the message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.RemoveMessageFlags(System.String,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Removes the flags of the message.
            </summary>	
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.ChangeMessageFlags(System.String,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Changes the flags of the message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AppendMessage(System.String,Aspose.Network.Mail.MailMessage)">
            <summary>
            Uploads the mail message to the specified folder. 
            </summary>
            <param name="folderName">Folder that will receive the mail message. </param>
            <param name="message">Mail message to be upload.</param>
            <returns>Unique ID of the message</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AppendMessage(System.String,System.IO.Stream)">
            <summary>
            Uploads the message read from the stream to the specified folder. 
            </summary>
            <param name="folderName">Folder that will receive the message. </param>
            <param name="input">The input stream. </param>
            <returns>Unique ID of the message</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AppendMessage(System.String,System.String)">
            <summary>
            Uploads the message read from a local file to specified folder. 
            </summary>
            <param name="folderName">Folder that will receive the message. </param>
            <param name="path">The path to the mail message file. </param>
            <returns>Unique ID of the message.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AppendMessage(System.String,Aspose.Network.Mail.MailMessage,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Uploads the message to the specified folder and sets its flags. 
            </summary>
            <param name="folderName">Folder that will receive the message. </param>
            <param name="message">Mail message to upload. </param>
            <param name="flags">Message flags</param>
            <returns>Unique ID of the message.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AppendMessage(System.String,System.IO.Stream,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Uploads the message read from the stream to the specified folder and sets its flags. 
            </summary>
            <param name="folderName">Folder that will receive the message. </param>
            <param name="input">The input stream. </param>
            <param name="flags">Message flags. </param>
            <returns>Unique ID of the message.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AppendMessage(System.String,System.String,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Uploads the message read from a local file and sets its flags. 
            </summary>
            <param name="folderName">Folder that will receive the message</param>
            <param name="path">The path to the mail message file. </param>
            <param name="flags">Message flags. </param>
            <returns>Unique ID of the message</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AppendMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Store a new message to the specifed folder.
            </summary>
            <param name="folderName">The destination folder.</param>
            <param name="from">Message sender. </param>
            <param name="to">Comma-separated list of message recipients. </param>
            <param name="subject">The subject of the message. </param>
            <param name="body">The text body of the message. </param>
            <returns>Unique ID of the message.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.AppendMessage(System.String,System.String,System.String,System.String,System.String,Aspose.Network.Imap.MessageFlags)">
            <summary>
            Uploads the message to the specified folder and sets its flags. 
            </summary>
            <param name="folderName">The destination folder.</param>
            <param name="from">Message sender. </param>
            <param name="to">Comma-separated list of message recipients. </param>
            <param name="subject">The subject of the message. </param>
            <param name="body">The text body of the message. </param>
            <param name="flags">Message flags. </param>
            <returns>Unique ID of the message</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.SubscribeFolder(System.String)">
            <summary>
            Subscribes to a specified folder.
            </summary>
            <param name="folderName">Folder to subscribe to. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.UndeleteMessage">
            <summary>
            Marks all messages as not deleted.
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.UndeleteMessage(System.Int32)">
            <summary>
            Marks a message with the specified sequence number as not deleted. 
            </summary>
            <param name="sequenceNumber">The sequence number of the message.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.UndeleteMessage(System.String)">
            <summary>
            Marks a message with the specified unique ID as not deleted. 
            </summary>
            <param name="uniqueId">Message unique ID. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.UnselectFolder">
            <summary>
            Unselects the currently selected folder. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.UnsubscribeFolder(System.String)">
            <summary>
            Unsubscribes from a specified folder.
            </summary>
            <param name="folderName">Folder to unsubscribe from. </param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginConnect(System.AsyncCallback,System.Object)">
            <summary>
            Begins async request ofconnecting to Imap server, paired with EndConnect
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginCopyMessage(System.Int32,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request ofcopying messages to a specified folder, paired with EndCopyMessage
            </summary>
            <param name="sequenceNumber">identifier stands for this mail message</param>
            <param name="folderName">destination folder name</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginCopyMessage(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request ofcopying message to a specified folder, paired with EndCopyMessage
            </summary>
            <param name="uniqueId">Unique string identifier stands for this mail message</param>
            <param name="folderName">destination folder name</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginCreateFolder(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request ofcreating a folder, paired with EndCreateFolder
            </summary>
            <param name="folderName">name of the folder to be created</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginDeleteFolder(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request ofdeleting folder, paired with EndDeleteFolder
            </summary>
            <param name="folderName">name of the folder to be deleted</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginDeleteMessage(System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request ofdeleting message, paired with EndDeleteMessage
            </summary>
            <param name="sequenceNumber">identifier stands for target mail message</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginDeleteMessage(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request ofdisconnecting from Imap server, paired with EndDisconnect
            </summary>
            <param name="uniqueId">The unique id for the message</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginDisconnect(System.AsyncCallback,System.Object)">
            <summary>
            Begins async request ofgetting information of the specified folder, paired with EndListFolder
            </summary>
            <param name="callback">The AsyncCallback delegate. </param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginListFolder(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request ofgetting information of the specified folder, paired with EndListFolder method
            </summary>
            <param name="folderName">name of the target folder</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginListFolders(System.String,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request offetching mail message from Imap server, paired with EndFetchMessage
            </summary>
            <param name="folderName">The path to folder for which a list of subfolders is returned. </param>
            <param name="subscribedOnly">Returns subscribed folders only if true</param>
            <param name="recursive">Specifies whether to return the shole subfolder tree. </param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginFetchMessage(System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request offetching mail message from Imap server, paired with EndFetchMessage
            </summary>
            <param name="sequenceNumber">identifier stands for the mail message</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginFetchMessage(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request of saving message from Imap server to output stream, paired with EndSaveMessage method
            </summary>
            <param name="uniqueId">unique identifier string stands for the mail message</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginSaveMessage(System.Int32,System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request of saving message from Imap server to file, paired with EndSaveMessage
            </summary>
            <param name="sequenceNumber">identifier stands for the mail message</param>
            <param name="output">target output stream</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginSaveMessage(System.Int32,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request of saving message from Imap server to output stream, paired with EndSaveMessage
            </summary>
            <param name="sequenceNumber">identifier stands for the mail message</param>
            <param name="fileName">target file name</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginSaveMessage(System.String,System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request of saving message from Imap server to file, paired with EndSaveMessage
            </summary>
            <param name="uniqueId">unique identifier string stands for the mail message</param>
            <param name="output">The output stream.</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginSaveMessage(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request of listing mail message information, paired with EndListMessage
            </summary>
            <param name="fileName">The file name.</param>
            <param name="uniqueId">The unique id of the mail message.</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginListMessages(System.AsyncCallback,System.Object)">
            <summary>
            Begins async request of listing mail message information, paired with EndListMessage
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginLogin(System.AsyncCallback,System.Object)">
            <summary>
            Begins async request oflogging onto Imap server
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginExpungeMessages(System.AsyncCallback,System.Object)">
            <summary>
            Permanently removes all messages marked as deleted (with a Deleted flag) from the current folder, paired with EndExpungeMessages
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginRenameFolder(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request of renaming a folder
            </summary>
            <param name="folderName">name of the target folder</param>
            <param name="newName">new folder name</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginRequestCheckpoint(System.AsyncCallback,System.Object)">
            <summary>
            Requests a checkpoint of the currently selected mailbox, paired with EndRequestCheckpoint
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginSelectFolder(System.String,System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Select the specified folder, paired with EndSelectFolder
            </summary>
            <param name="folderName">name of the folder to be selected</param>
            <param name="readOnly"></param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginAppendMessage(System.String,Aspose.Network.Mail.MailMessage,Aspose.Network.Imap.MessageFlags,System.AsyncCallback,System.Object)">
            <summary>
            Begins async request of appending message to Imap server, paired with EndAppendMessage
            </summary>
            <param name="folderName">The target folder name.</param>
            <param name="message">The MailMessge to append.</param>
            <param name="flags">The message flags.</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginSubscribeFolder(System.String,System.AsyncCallback,System.Object)">
            <summary>
            subscribe to a specified folder, paired with EndSubscribeFolder method
            </summary>
            <param name="folderName">target folder name</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">object state</param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginUndeleteMessage(System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Cancel former delete operations, paired with EndUndeleteMessage
            </summary>
            <remarks>
            Some Imap server may not support cancel deleting
            </remarks>
            <param name="sequenceNumber">an identifier stands for the mail message</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginUndeleteMessage(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Cancel former delete operations, paired with EndUndeleteMessage
            </summary>
            <param name="uniqueId">unique identifier string stands for the mail message</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginUnselectFolder(System.AsyncCallback,System.Object)">
            <summary>
            Unselect the currently selected folder, paired with EndUnselectFolder method
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.BeginUnsubscribeFolder(System.String,System.AsyncCallback,System.Object)">
            <summary>
            Unsubsribe from a subsribed folder, paired with EndUnsubscribeFolder method
            </summary>
            <param name="folderName">target folder name</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndConnect(System.IAsyncResult)">
            <summary>
            End async request ofConnecting to IMap server, paired with BeginConnect
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndCopyMessage(System.IAsyncResult)">
            <summary>
            End async request ofcopying message, paired with BeginCopyMessage method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndCreateFolder(System.IAsyncResult)">
            <summary>
            End async request ofcreating folder, paired with BeginCreateFolder metod
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndDeleteFolder(System.IAsyncResult)">
            <summary>
            End async request ofdeleting folder, paired with BeginDeleteFolder method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndDeleteMessage(System.IAsyncResult)">
            <summary>
            End async request ofdeleting message, paired with BeginDeleteMessage method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndDisconnect(System.IAsyncResult)">
            <summary>
            End async request ofdisconnection from imap server, paired with BeginDisconnect method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndListFolder(System.IAsyncResult)">
            <summary>
            End async request oflisting folder, paired with BeginListFolder method
            </summary>
            <param name="asyncResult">async operation status control</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndListFolders(System.IAsyncResult)">
            <summary>
            End async request oflisting folders, paired with BeginListingFolders method
            </summary>
            <param name="asyncResult">async operation status control</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndFetchMessage(System.IAsyncResult)">
            <summary>
            End async request offetching message from imap server, paired with BeginFetchingMessage method
            </summary>
            <param name="asyncResult">async operation status control</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndSaveMessage(System.IAsyncResult)">
            <summary>
            End async request of saving message from imap server, paired with BeginSaveMessage method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndListMessage(System.IAsyncResult)">
            <summary>
            End async request oflisting message information, paired with BeginListMessage method
            </summary>
            <param name="asyncResult">async operation status control</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndListMessages(System.IAsyncResult)">
            <summary>
            End async request oflisting messages information, paired with BeginListMessages method
            </summary>
            <param name="asyncResult">async operation status control</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndLogin(System.IAsyncResult)">
            <summary>
            End async request oflogging onto imap server, paired with BeginLogin method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndExpungeMessages(System.IAsyncResult)">
            <summary>
            End async request ofdeleting message, paired with BeginExpungeMessages method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndRenameFolder(System.IAsyncResult)">
            <summary>
            End async request ofrenaming folder, paired with BeginRenameFolder method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndRequestCheckpoint(System.IAsyncResult)">
            <summary>
            End async request ofrequesting check point, paired with BeginRequestCheckpoint method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndSelectFolder(System.IAsyncResult)">
            <summary>
            End async request ofselecting a folder, paired with BeginSelectFolder method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndAppendMessage(System.IAsyncResult)">
            <summary>
            End async request ofappending message to folder, paired with BeginAppendMessage method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndSubscribeFolder(System.IAsyncResult)">
            <summary>
            End async request ofsubscribing a folder, paired with BeginSubscribeFolder method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndUndeleteMessage(System.IAsyncResult)">
            <summary>
            End aync request of Undeleting message, paired with BeginUndeleteMessage method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndUnselectFolder(System.IAsyncResult)">
            <summary>
            End aync request of Unselecting a folder, paired with BeginUnselectFolder method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapClient.EndUnsubscribeFolder(System.IAsyncResult)">
            <summary>
            End aync request of Unsubscribing to a folder, paired with BeginUnsubscribeFolder method
            </summary>
            <param name="asyncResult">async operation status control</param>
        </member>
        <member name="P:Aspose.Network.Imap.ImapClient.CurrentFolder">
            <summary>
            Gets the information of currently selected folder.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapClient.Encoding">
            <summary>
            Gets or sets the Encoding to use to encode and decode command parameters and server responses. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapClient.State">
            <summary>
            Gets the current state of the Imap connection. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapClient.AuthenticationMethod">
            <summary>
            Gets or sets the authentication method of the ImapClient object.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapClient.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapClient.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Aspose.Network.Imap.ImapClient.EnableSsl">
            <summary>
            Specifies whether the ImapClient uses Secure Sockets Layer (SSL) to encrypt the connection.
            </summary>
            <example>
            <p>The following exmaple demonstrates how to use ImapClient class to fetch e-mail messages from gmail.</p>
            [C#]
            <code>
            //create imap client with specified server, username and password.
            ImapClient client = new ImapClient("imap.gmail.com", 993, "youraccount@google.com", "password");
               client.EnableSsl = true;
               client.SecurityMode = ImapSslSecurityMode.Implicit;
            try
            {
            	//connect and login to the imap server
            	client.Connect(true);
            	//select the inbox as the current working folder
            	client.SelectFolder("inbox");
            	//save the message
            	client.SaveMessage(1, "file.eml");
            }
            catch (ImapException ex)
            {
            	System.Diagnostics.Debug.WriteLine(ex.ToString());
            }
            </code>
            [VB.NET]
            <code>
            'create imap client with specified server, username and password.
            Dim client As ImapClient =  New new ImapClient("imap.gmail.com", 993, "youraccount@google.com", "password");
               client.EnableSsl = true;
               client.SecurityMode = ImapSslSecurityMode.Implicit;
            Try
            	'connect and login to the imap server
            	client.Connect(True)
            	'select the inbox as the current working folder
            	client.SelectFolder("inbox")
            	'save the message
            	client.SaveMessage(1, "file.eml")
            Catch ex As ImapException
            	System.Diagnostics.Debug.WriteLine(ex.ToString())
            End Try
            </code>
            </example>
        </member>
        <member name="P:Aspose.Network.Imap.ImapClient.SecurityMode">
            <summary>
            Specifies which security mode will be used when Secure Sockets Layer (SSL) to encrypt the connection.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.TimeZoneRegistry">
            <summary> Implementors provide a list of timezone definitions applicable for use
            with iCalendar objects.
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.TimeZoneRegistry.register(Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary> Registers a new timezone for use with iCalendar objects. If a timezone
            with the same identifier is already registered this timezone will take
            precedence.
            </summary>
            <param name="timezone">a timezone to be registered for use with iCalendar
            objects
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.TimeZoneRegistry.clear">
            <summary> Clears all registered timezones.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.TimeZoneRegistry.getTimeZone(System.String)">
            <summary> Returns a timezone with the specified identifier.</summary>
            <param name="id">a timezone identifier
            </param>
            <returns> a timezone matching the specified identifier. If no timezone
            is registered with the specified identifier null is returned.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Uid">
            <summary> Defines a UID iCalendar component property.
            
            <pre>
            4.8.4.7 Unique Identifier
            
            Property Name: UID
            
            Purpose: This property defines the persistent, globally unique
            identifier for the calendar component.
            
            Value Type: TEXT
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: The property MUST be specified in the &quot;VEVENT&quot;, &quot;VTODO&quot;,
            &quot;VJOURNAL&quot; or &quot;VFREEBUSY&quot; calendar components.
            
            Description: The UID itself MUST be a globally unique identifier. The
            generator of the identifier MUST guarantee that the identifier is
            unique. There are several algorithms that can be used to accomplish
            this. The identifier is RECOMMENDED to be the identical syntax to the
            [RFC 822] addr-spec. A good method to assure uniqueness is to put the
            domain name or a domain literal IP address of the host on which the
            identifier was created on the right hand side of the &quot;@&quot;, and on the
            left hand side, put a combination of the current calendar date and
            time of day (i.e., formatted in as a DATE-TIME value) along with some
            other currently unique (perhaps sequential) identifier available on
            the system (for example, a process id number). Using a date/time
            value on the left hand side and a domain name or domain literal on
            the right hand side makes it possible to guarantee uniqueness since
            no two hosts should be using the same domain name or IP address at
            the same time. Though other algorithms will work, it is RECOMMENDED
            that the right hand side contain some domain identifier (either of
            the host itself or otherwise) such that the generator of the message
            identifier can guarantee the uniqueness of the left hand side within
            the scope of that domain.
            
            This is the method for correlating scheduling messages with the
            referenced &quot;VEVENT&quot;, &quot;VTODO&quot;, or &quot;VJOURNAL&quot; calendar component.
            
            The full range of calendar components specified by a recurrence set
            is referenced by referring to just the &quot;UID&quot; property value
            corresponding to the calendar component. The &quot;RECURRENCE-ID&quot; property
            allows the reference to an individual instance within the recurrence
            set.
            
            This property is an important method for group scheduling
            applications to match requests with later replies, modifications or
            deletion requests. Calendaring and scheduling applications MUST
            generate this property in &quot;VEVENT&quot;, &quot;VTODO&quot; and &quot;VJOURNAL&quot; calendar
            components to assure interoperability with other group scheduling
            applications. This identifier is created by the calendar system that
            generates an iCalendar object.
            
            Implementations MUST be able to receive and persist values of at
            least 255 characters for this property.
            
            Format Definition: The property is defined by the following notation:
            
            uid        = &quot;UID&quot; uidparam &quot;:&quot; text CRLF
            
            uidparam   = *(&quot;;&quot; xparam)
            
            Example: The following is an example of this property:
            
            UID:19960401T080045Z-4000F192713-0052@host1.com
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Uid.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Uid.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Uid"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Uid.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Uid"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Uid.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Uid.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.ExDate">
            <summary> Defines a EXDATE iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExDate.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExDate.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="aValue">a value string for this component
            </param>
            <throws>  ParseException where the specified value string is not a valid date-time/date representation </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExDate.#ctor(Aspose.Network.iCalendar.ObjectModel.DateList)">
            <param name="dList">a list of dates
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExDate.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.DateList)">
            <param name="aList">a list of parameters for this component
            </param>
            <param name="dList">a list of dates
            </param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd">
            <summary> Defines a DTEND iCalendar component property.
            
            <pre>
            4.8.2.2 Date/Time End
            
            Property Name: DTEND
            
            Purpose: This property specifies the date and time that a calendar
            component ends.
            
            Value Type: The default value type is DATE-TIME. The value type can
            be set to a DATE value type.
            
            Property Parameters: Non-standard, value data type, time zone
            identifier property parameters can be specified on this property.
            
            Conformance: This property can be specified in &quot;VEVENT&quot; or
            &quot;VFREEBUSY&quot; calendar components.
            
            Description: Within the &quot;VEVENT&quot; calendar component, this property
            defines the date and time by which the event ends. The value MUST be
            later in time than the value of the &quot;DTSTART&quot; property.
            
            Within the &quot;VFREEBUSY&quot; calendar component, this property defines the
            end date and time for the free or busy time information. The time
            MUST be specified in the UTC time format. The value MUST be later in
            time than the value of the &quot;DTSTART&quot; property.
            
            Format Definition: The property is defined by the following notation:
            
            dtend      = &quot;DTEND&quot; dtendparam&quot;:&quot; dtendval CRLF
            
            dtendparam = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; &quot;VALUE&quot; &quot;=&quot; (&quot;DATE-TIME&quot; / &quot;DATE&quot;)) /
            (&quot;;&quot; tzidparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            
            )
            
            
            
            dtendval   = date-time / date
            ;Value MUST match value type
            </pre>
            
            Examples:
            
            <pre>
            // construct an end date from a start date and a duration..
            DtStart start = ...
            Dur oneWeek = new Dur(&quot;1W&quot;);
            DtEnd end = new DtEnd(oneWeek.getTime(start.getDate());
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd.#ctor">
            <summary> Default constructor. The time value is initialised to the time of instantiation.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd.#ctor(Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new DTEND property initialised with the specified timezone.
            </summary>
            <param name="timezone">initial timezone</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd.#ctor(System.String)">
            <summary>
            Creates a new instance initialised with the parsed value.
            </summary>
            <param name="value">the DTEND value string to parse</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd"/> class.
            </summary>
            <param name="aValue">A value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new DTEND property initialised with the specified timezone and value.
            </summary>
            <param name="value">a string representation of a DTEND value</param>
            <param name="timezone">initial timezone</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd.#ctor(Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd.#ctor(Aspose.Network.iCalendar.ObjectModel.Date,System.Boolean)">
            <summary>
            Constructs a new DtEnd with the specified time.
            </summary>
            <param name="time">the time of the DtEnd</param>
            <param name="utc">specifies whether time is UTC</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.DtEnd.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="date">The date.</param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.PropertyCollection">
            <summary> Defines a list of iCalendar properties.</summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyCollection.#ctor(System.Int32)">
            <summary>
            Creates a new instance with the specified initial capacity.
            </summary>
            <param name="initialCapacity">the initial capacity of the list</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyCollection.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary>
            Creates a deep copy of the specified property list.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyCollection.GetProperty(System.String)">
            <summary>
            Returns the first property of specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>
            a property or null if no matching property found
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyCollection.GetProperties(System.String)">
            <summary>
            Returns a list of properties with the specified name.
            </summary>
            <param name="name">name of properties to return</param>
            <returns>a property list</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyCollection.Add(Aspose.Network.iCalendar.ObjectModel.Property)">
            <summary>
            Add a property to the list.
            </summary>
            <param name="property">the property to add</param>
            <returns>true</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyCollection.Add(System.Object)">
            <summary>
            Adds an object to the end of the <see cref="T:System.Collections.ArrayList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to be added to the end of the <see cref="T:System.Collections.ArrayList"/>. The value can be null.</param>
            <returns>
            The <see cref="T:System.Collections.ArrayList"/> index at which the <paramref name="value"/> has been added.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.ArrayList"/> is read-only.-or- The <see cref="T:System.Collections.ArrayList"/> has a fixed size. </exception>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.PropertyCollection.Remove(System.String)">
            <summary>
            Remove a property from the list.
            </summary>
            <param name="name">The name.</param>
            <returns>
            true if the list contained the specified property
            </returns>
        </member>
        <member name="T:Aspose.Windows.Forms.FileDataObject">
            <summary>
            Represents the file data.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.FileDataObject.Save(System.IO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Aspose.Windows.Forms.FileDataObject.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Aspose.Windows.Forms.FileDataObject.CreationTime">
            <summary>
            Gets the creation time.
            </summary>
            <value>The creation time.</value>
        </member>
        <member name="M:Aspose.Network.Template.TemplateLexer.ReadWhitespace">
            <summary>
            reads all whitespace characters (does not include newline)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Template.TemplateLexer.StartRead">
            <summary>
            save read point positions so that CreateToken can use those
            </summary>
        </member>
        <member name="M:Aspose.Network.Template.TemplateLexer.ReadId">
            <summary>
            reads word. Word contains any alpha character or _
            </summary>
        </member>
        <member name="M:Aspose.Network.Template.TemplateLexer.ReadNumber">
            <summary>
            returns either Integer or Double Token
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aspose.Network.Logging.NullAppender">
            <summary>
            Represents a do-nothing appender.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.NullAppender.#ctor">
            <summary>
            Creates a new instace of NullAppender.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.NullAppender.Append(Aspose.Network.Logging.LogEntry)">
            <summary>
            Appends a log entry to NullAppender.
            </summary>
            <param name="entry">The entry need to log.</param>
        </member>
        <member name="T:Aspose.Network.Icmp.ReceiveCompletedEventHandler">
            <summary>
            Represents the method that will handle the ReceiveCompleted event of an IcmpClient object.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.SourceQuenchMessage">
            <summary>
            Represents a source quench message in the ICMP protocol.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.SourceQuenchMessage.#ctor">
            <summary>
            Initializes a new instance of the SourceQuenchMessage class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.TransferProgressEventHandler">
            <summary>
            Event handler for transfer progress.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event argument.</param>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiPropertyTag">
            <summary>
            Represents the MAPI property tags definition.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiPropertyTag.GetPropertyName(System.Int64)">
            <summary>
            Gets the name of the tag.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyTag.PR_7BIT_DISPLAY_NAME">
            <summary>
            The PR_7BIT_DISPLAY_NAME property contains a 7-bit ASCII version of a messaging user's name. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyTag.PR_7BIT_DISPLAY_NAME_A">
            <summary>
            The ASCII peer for PR_7BIT_DISPLAY_NAME.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyTag.PR_7BIT_DISPLAY_NAME_W">
            <summary>
            The Unicode peer for PR_7BIT_DISPLAY_NAME.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyTag.PR_AB_DEFAULT_DIR">
            <summary>
            The PR_AB_DEFAULT_DIR property contains the entry identifier of the address book container that is to be shown to the user first. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyTag.PR_AB_DEFAULT_PAB">
            <summary>
            The PR_AB_DEFAULT_PAB property contains the entry identifier of the address book container that is to be used as the personal address book.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyTag.PR_AB_PROVIDER_ID">
            <summary>
            The PR_AB_DEFAULT_PAB property contains the entry identifier of the address book container that is to be used as the personal address book.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyTag.PR_AB_PROVIDERS">
            <summary>
            The PR_AB_PROVIDERS property contains a list of identifiers for address book providers in the current profile. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiPropertyTag.PR_AB_SEARCH_PATH">
            <summary>
            The PR_AB_PROVIDERS property contains a list of identifiers for address book providers in the current profile. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiAttachmentCollection">
            <summary>
            Represents a collection of MapiAttachment objects. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiAttachmentCollection.#ctor">
            <summary>
            Initializes a new instance of the MapiAttachmentCollection class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.MFResourceRecord">
            <summary>
            Represents a MF DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MFResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MFResourceRecord">MFResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MFResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MFResourceRecord">MFResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.MFResourceRecord.MailAgent">
            <summary>
            Gets or sets the mail agent
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.HINFOResourceRecord">
            <summary>
            Represents a HINFO DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.HINFOResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.HINFOResourceRecord">HINFOResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.HINFOResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.HINFOResourceRecord">HINFOResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.HINFOResourceRecord.CPU">
            <summary>
            Gets or sets the cpu
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.HINFOResourceRecord.OS">
            <summary>
            Gets or sets the os
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.AResourceRecord">
            <summary>
            Represents an A DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.AResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.AResourceRecord">AResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.AResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.AResourceRecord">AResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.AResourceRecord.Address">
            <summary>
            Gets or sets the address
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.QuestionCollection">
            <summary>
            Represents a collection of <see cref="T:Aspose.Network.Dns.Question">Question</see> objects.
            </summary>
            <remarks>
            Provides a simple collection object that can represent a set of <see cref="T:Aspose.Network.Dns.Question">Question</see> objects.
            The <see cref="T:Aspose.Network.Dns.QuestionCollection">QuestionCollection</see> class provides a simple collection object that can be used to store a set of <see cref="T:Aspose.Network.Dns.Question">Question</see> objects.	
            </remarks>
        </member>
        <member name="M:Aspose.Network.Dns.QuestionCollection.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Dns.QuestionCollection">QuestionCollection</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.QuestionCollection.AddRange(Aspose.Network.Dns.Question[])">
            <summary>
            Copies the elements of the specified array to the end of the collection.
            </summary>
            <param name="value">An array of type <see cref="T:Aspose.Network.Dns.Question">Question</see> containing the objects to add to the collection. </param>
        </member>
        <member name="M:Aspose.Network.Dns.QuestionCollection.Add(Aspose.Network.Dns.Question)">
            <summary>
            Adds the specified <see cref="T:Aspose.Network.Dns.Question">Question</see> to the collection.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.Question">Question</see> to add.</param>
        </member>
        <member name="M:Aspose.Network.Dns.QuestionCollection.Contains(Aspose.Network.Dns.Question)">
            <summary>
            Gets a value indicating whether the collection contains the specified <see cref="T:Aspose.Network.Dns.Question">Question</see>.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.Question">Question</see> to search for in the collection. </param>
            <returns><b>true</b> if the <see cref="T:Aspose.Network.Dns.Question">Question</see> is contained in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.QuestionCollection.IndexOf(Aspose.Network.Dns.Question)">
            <summary>
            Gets the index in the collection of the specified <see cref="T:Aspose.Network.Dns.Question">Question</see>, if it exists in the collection.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.Question">Question</see> to locate in the collection. </param>
            <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.QuestionCollection.IndexOf(Aspose.Network.Dns.Question,System.Int32)">
            <summary>
            Gets the index in the collection of the specified <see cref="T:Aspose.Network.Dns.Question">Question</see>, if it exists in the collection.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.Question">Question</see> to locate in the collection. </param>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.QuestionCollection.IndexOf(Aspose.Network.Dns.Question,System.Int32,System.Int32)">
            <summary>
            Gets the index in the collection of the specified <see cref="T:Aspose.Network.Dns.Question">Question</see>, if it exists in the collection.
            </summary>
            <param name="value">The <see cref="T:Aspose.Network.Dns.Question">Question</see> to locate in the collection. </param>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="count">The number of elements in the section to search. </param>
            <returns>The index in the collection of the specified object, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Aspose.Network.Dns.QuestionCollection.Insert(System.Int32,Aspose.Network.Dns.Question)">
            <summary>
            Inserts the specified <see cref="T:Aspose.Network.Dns.Question">Question</see> object into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index where the specified <see cref="T:Aspose.Network.Dns.Question">Question</see> should be inserted. </param>
            <param name="value">The <see cref="T:Aspose.Network.Dns.Question">Question</see> to insert. </param>
        </member>
        <member name="P:Aspose.Network.Dns.QuestionCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Dns.Question">Question</see> at the specified index.
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.DnsUtility">
            <summary>
            Summary description for DnsUtility.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.AppointmentMailMessageInterpretor">
            <summary>
            Represents an appointment mail message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.AppointmentMailMessageInterpretor.#ctor">
            <summary>
            Initializes a new instance of the AppointmentMailMessageInterpretor class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.AppointmentMailMessageInterpretor.Clone">
            <summary>
            Creates a copy of current instance.
            </summary>
            <returns>A copy of MailMessageInterpretor.</returns>
        </member>
        <member name="M:Aspose.Network.Outlook.AppointmentMailMessageInterpretor.LoadMessageHeader(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Imports the headers of MIME protocol to a MailMessage from the MapiMessage instance.
            </summary>
            <param name="mailMessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.AppointmentMailMessageInterpretor.LoadMessageBodyHtml(Aspose.Network.Mail.MailMessage,Aspose.Network.Outlook.MapiMessage)">
            <summary>
            Creates the HtmlBody property of the MailMessage according to the specified MapiMessage instance.
            </summary>
            <param name="mailMessage">The target MailMessage.</param>
            <param name="mapiMessage">The source MapiMessage.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.AppointmentMailMessageInterpretor.Save(Aspose.Network.Outlook.MapiMessage,System.IO.Stream,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Saves the specified MapiMessage to a Stream.
            </summary>
            <param name="mapiMessage">The source MapiMessage instance.</param>
            <param name="stream">The target stream</param>
            <param name="messageFormat">The message format.</param>
        </member>
        <member name="P:Aspose.Network.Outlook.AppointmentMailMessageInterpretor.FormatTemplates">
            <summary>
            Gets the format templates.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mime.MimeMessage">
            <summary>
            Obsoleted. Please use MailMessage clas instead.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.MimeMessage"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mime.MimeMessage"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Load(System.IO.Stream)">
            <summary>
            Loads the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Load(System.String)">
            <summary>
            Loads the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Load(System.IO.Stream,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Load MimeMessage from specifed Stream and Format
            </summary>
            <param name="stream">The Stream contains the mail content</param>
            <param name="format">Specified the mail message format,it can be in eml,mhtml or msg format.</param>
            <returns>MimeMessage object.</returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.op_Implicit(Aspose.Network.Mail.MailMessage)~Aspose.Network.Mime.MimeMessage">
            <summary>
            Performs an implicit conversion from <see cref="T:Aspose.Network.Mail.MailMessage"/> to <see cref="T:Aspose.Network.Mime.MimeMessage"/>.
            </summary>
            <param name="message">The message.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Load(System.String,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Load message from specified file and store into a MimeMessage object
            </summary>
            <param name="fileName">Specified the filename</param>
            <param name="format">Specified the mail message format,it can be in eml,mhtml or msg format.</param>
            <returns>The MimeMessage object.</returns>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Save(System.IO.Stream)">
            <summary>
            Saves the specified output.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Save(System.String)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Save(System.IO.TextWriter)">
            <summary>
            Saves this mail message to the specified TextWriter 
            </summary>
            <param name="writer">Specified the TextWriter where the mail message will be saved</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Save(System.IO.Stream,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Saves this mail message to the specified Stream in specified Format
            </summary>
            <param name="stream">Specified the Stream where the mail message will be saved</param>
            <param name="format">An MessagFormat that specifies the format of the saved mail message.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Save(System.IO.Stream,Aspose.Network.Mail.MessageFormat,Aspose.Network.Mail.IMessageFormatter)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="format">The format.</param>
            <param name="formatter">The formatter.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Save(System.String,Aspose.Network.Mail.MessageFormat)">
            <summary>
            Saves this mail message to the specified file in specified Format
            </summary>
            <param name="fileName">String that contains the name of the file to which to save this  mail message </param>
            <param name="format">An MessagFormat that specifies the format of the saved mail message.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Save(System.String,Aspose.Network.Mail.MessageFormat,Aspose.Network.Mail.IMessageFormatter)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="format">The format.</param>
            <param name="formatter">The formatter.</param>
        </member>
        <member name="M:Aspose.Network.Mime.MimeMessage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.AlternateViews">
            <summary>
            Gets the alternate views.
            </summary>
            <value>The alternate views.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Attachments">
            <summary>
            Gets the attachments.
            </summary>
            <value>The attachments.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Bcc">
            <summary>
            Gets or sets the BCC.
            </summary>
            <value>The BCC.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.BodyEncoding">
            <summary>
            Gets or sets the body encoding.
            </summary>
            <value>The body encoding.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.HtmlBody">
            <summary>
            Gets or sets the HTML body.
            </summary>
            <value>The HTML body.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.TextBody">
            <summary>
            Gets or sets the text body.
            </summary>
            <value>The text body.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.TextBodyView">
            <summary>
            Gets or sets the text body view.
            </summary>
            <value>The text body view.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.HtmlBodyView">
            <summary>
            Gets or sets the HTML body view.
            </summary>
            <value>The HTML body view.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value>The body.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.CC">
            <summary>
            Gets or sets the CC.
            </summary>
            <value>The CC.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Date">
            <summary>
            Gets or Sets the DateTime of this mail.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.EnvelopeId">
            <summary>
            Gets or sets the envelope id.
            </summary>
            <value>The envelope id.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>From.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Headers">
            <summary>
            Gets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.IsSigned">
            <summary>
            Gets a value indicating whether this instance is signed.
            </summary>
            <value><c>true</c> if this instance is signed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.MessageId">
            <summary>
            Gets or sets the message id.
            </summary>
            <value>The message id.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>The priority.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.ReplyTo">
            <summary>
            Gets or sets the reply to.
            </summary>
            <value>The reply to.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Resources">
            <summary>
            Gets the resources.
            </summary>
            <value>The resources.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.SubjectEncoding">
            <summary>
            Gets or sets the subject encoding.
            </summary>
            <value>The subject encoding.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>To.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.DeliveryNotificationOptions">
            <summary>
            Gets or sets the delivery notification options.
            </summary>
            <value>The delivery notification options.</value>
        </member>
        <member name="P:Aspose.Network.Mime.MimeMessage.Sensitivity">
            <summary>
            Gets or sets the sensitivity.
            </summary>
            <value>The sensitivity.</value>
        </member>
        <member name="T:Aspose.Network.Mail.MailAddress">
            <summary>
            Represents the address of an electronic mail sender or recipient.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailAddress"/> class.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddress.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailAddress"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="displayName">The display name.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddress.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailAddress"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="ignoreValidate">if set to <c>true</c> [ignore validate].</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddress.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailAddress"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="displayName">The display name.</param>
            <param name="ignoreValidate">if set to <c>true</c> [ignore validate].</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.MailAddress"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="displayName">The display name.</param>
            <param name="displayNameEncoding">The display name encoding.</param>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddress.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddress.Equals(System.Object)">
            <summary>
            Equalses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddress.op_Implicit(System.String)~Aspose.Network.Mail.MailAddress">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Aspose.Network.Mail.MailAddress"/>.
            </summary>
            <param name="address">The address.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.MailAddress.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.Mail.MailAddress.Address">
            <summary>
            Gets the address.
            </summary>
            <value>The address.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MailAddress.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MailAddress.Host">
            <summary>
            Gets the host.
            </summary>
            <value>The host.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MailAddress.IsGroup">
            <summary>
            Gets a value indicating whether this instance is group.
            </summary>
            <value><c>true</c> if this instance is group; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.Mail.MailAddress.User">
            <summary>
            Gets the user.
            </summary>
            <value>The user.</value>
        </member>
        <member name="T:Aspose.Network.Mail.HeaderType">
            <summary>
            Represents the Internet standards and RFCs define header fields which may occur on Internet Mail Messages .
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.HeaderType.Equals(System.Object)">
            <summary>
            Overrided.
            </summary>
            <param name="o">The o.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.HeaderType.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.Mail.HeaderType.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.Mail.HeaderType.op_Implicit(Aspose.Network.Mail.HeaderType)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Aspose.Network.Mail.HeaderType"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.ApparentlyTo">
            <summary>
            Inserted by sending e-mail when there is no "To:" recipient in the original message. This causes the recipients derived from the envelope to be listed in the message heading. 
            This behavior is not quite proper, MTAs should not modify headers (except inserting Received lines), and it can in some cases cause Bcc recipients to be wrongly divulged to non-Bcc recipients. 
            Example:
            Apparently-To: someone@somedomain.com
            
            Non-standard header that is discouraged in use, mentioned in RFC1211.         
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.ApprovedBy">
            <summary>
            Name of the moderator of the mailing list to which this message is sent; necessary on a posting sent to a moderated mailing list to allow its distribution to the list members. 
            Example:
            Approved-By: someone@somedomain.com
            
            Non-standard for use in e-mail. Defined in RFC1036. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.Bcc">
            <summary>
            A copy of the e-mail message that is sent to one or more recipients without the knowledge of the primary recipients. 
            Primary recipients are listed in the To: and Cc: lines. This is useful if you want to copy a message to many people without each of them seeing who the other recipients are. 
            If you see this header on incoming mail, something is wrong because it does not appear in the headers.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.CC">
            <summary>
            This header can be considered an extension of the "To:" field as it is used to specifiy additional recipients. 
            In this case, the copy of an e-mail message sent to a recipient has the recipient's address appearing in the message. 
            This is useful if you want to copy a message to many people with each of them seeing who the other recipients are; contrast with Bcc above. 
            This header does appear in incoming e-mail. 
            Exmple:
            Cc: gboyd@netcom.com
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.Comments">
            <summary>
            This is a free-form header field defined in RFC2822. 
            The header is used to place explanatory text into the header portion of an e-mail message. 
            The field may contain arbitrary text.
            Exmple:
            Comments: Authenticated sender is someone@somedonmain.com.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.ContentType">
            <summary>
             The "Content-Type" defines the format of content (character set etc.) Note that the values for this header are defined in different ways in RFC1049 and in MIME (RFC2045). Look for the MIME-version: header to understand if Content-Type is to be interpreted according to RFC1049 or according to MIME (RFC2045). The MIME definition should be used in generating mail. 
            
             Historically, Content-Type field was proposed in RFC1049. In it, Content-Type did not distinguish type and subtype like RFC2045 does. 
            
             Example:
             Content-Type: text/plain; charset="us-ascii"
             Content-type: text/plain; charset=US-ASCII
             Content-Type: text/plain; charset="iso-8859-1"
             Content-Type: text/plain; charset=koi8-r
             Content-Type: text/plain; charset=unknown-8bit
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.ContentTransferEncoding">
            <summary>
            The third of the MIME-related headers. Indicates the coding method used in a MIME message body. 
            It has no direct relevance to the delivery of e-mail, but it affects how MIME compliant mail programs interpret the content of the message. 
            
            Defined in RFC2045. 
            
            Content-Transfer-Encoding: 8bit
            Content-transfer-encoding: 7BIT
            Content-Transfer-Encoding: 7bit
            Content-Transfer-Encoding: base64
            Content-Transfer-Encoding: quoted-printable
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.Date">
            <summary>
            This header specifies a date (and time), normally the date the message was composed and sent. In X.400 mail systems, the time a message was submitted. Some Internet mail systems also use the date when the message was submitted. If this header is omitted by the sender's computer, it might conceivably be added by a mail server or even by some other machine along the route. 
            What you may not know is that the information in the "Date:" line is supplied by the time on the sender's computer, which may or may not be set correctly. Also, the "Date:" header does not normally indicate when the message was sent, but only when it was composed. 
            The date is in the form 3 character day-of-week (Sun - Sat), day number (1-31) dd, 3-character month name, 4-digit year yyyy, followed by time (24-hour) hh:mm:ss and zone zzz format. Time Zone (zzz) is either the 3-character time zone or the local differential in hours and minutes offset from UTC (Universal Time Coordinated - old Greenwich Mean Time). "-" indicates west and "+" indicates east of UTC. 
            No standard Time Zone definitions seem to exist. Many UNIX versions understand a great range of abbreviations, but the most exhaustive list I found was the GNU tar manual Timezone item and documentation for the Perl date manipulation module TIMEZONES. 
            
            Example:
            Date: Tue, 9 Jan 2001 23:40:00 -0800
            Date: Sun, 1 Apr 2001 22:52:04 EDT
            Date: Mon, 2 Apr 2001 16:02:19 +0200
            Date: Fri, 30 Mar 2001 10:47:15 -0800
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.From">
            <summary>
            This field contains the identity of the person(s) who wished this message to be sent. 
            The message-creation process should default this field to be a single, authenticated machine address, indicating the AGENT (person, system or process) composing the message. 
            If this is not done, the "Sender:" field MUST be present. If the "From:" field IS defaulted this way, the "Sender:" field is optional and is redundant with the "From:" field. 
            
            Example:
            From: "Mr. Some One" someone@somedomain.com
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.FollowupTo">
             <summary>
            Used in Usenet News to indicate that future discussions (=follow-up) on an article should go to a different set of newsgroups than the replied-to article. 
            The most common usage is when an article is posted to several newsgroups, and further discussions is to take place in only one of them. 
            
             Defined in RFC 1036: 2.2.3, not standardized for use in e-mail. 
              
             </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.InReplyTo">
            <summary>
            Reference to message which this message is a reply to. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.MessageID">
            <summary>
            Unique ID of this message. 
            Defined In RFC 822: 4.6.1 ,RFC 1036: 2.1.5. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.MIMEVersion">
            <summary>
            An indicator that this message is formatted according to the MIME standard, and an indication of which version of MIME is utilized. 
            
            Defined in RFC 2045
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.Newsgroups">
            <summary>
            In Usenet News: group(s) to which this article was posted. 
            Some systems provide this header field also in e-mail although it is not standardized there. 
            Unfortunately, the header field can appear in e-mail with three different and contradictory meanings: 
            (a) Indicating the newsgroup recipient of an article/message sent to both e-mail and Usenet News recipients. 
            (b) In a message adressed to some mail to news gateways, indicates the newsgroup(s) that the message is to be posted to. 
            (c) In a personally addressed reply to an article in a news-group, indicating the newsgroup in which this discussion originated. 
            
            Defined in RFC 1036: 2.1.3, not standardized and controversial for use in e-mail.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.Received">
            <summary>
            Trace of MTAs which a message has passed. 
            
            Defined in RFC 822
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.ReturnPath">
            <summary>
            Used to convey the information from the MAIL FROM envelope attribute in final delivery, when the message leaves the SMTP environment in which "MAIL FROM" is used. /// 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.Sender">
            <summary>
            The person or agent submitting the message to the network, if other than shown by the From: header field. Should be authenticated, according to RFC 822, but what kind of authentication is not clear. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.ReplyTo">
            <summary>
            This header field is meant to indicate where the sender wants replies to go. 
            Unfortunately, this is ambiguous, since there are different kinds of replies, which the sender may wish to go to different addresses. 
            In particular, there are personal replies intended for only one person, and group replies, intended for the whole group of people who read the replied-to message (often a mailing list, anewsgroup name cannot appear here because of different syntax, see "FollowupTo" .). 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.Subject">
            <summary>
            Title, heading, subject. Often used as thread indicator for messages replying to or commenting on other messages. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.To">
            <summary>
            Primary recipients. 
            
            Example:
            To: someone@somedomain.com
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.References">
            <summary>
            Reference to other related messages. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.XMailer">
            <summary>
            Information about the client software of the originator. 
            
            Example:
            X-Mailer: Aspose.Network
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.XConfirmReadingTo">
            <summary>
            This header requests an automated confirmation notice when the message is received or read. It is typically ignored; presumably some software acts on it. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.Importance">
            <summary>
            Gets the importance.
            </summary>
            <value>The importance.</value>
        </member>
        <member name="P:Aspose.Network.Mail.HeaderType.Sensitivity">
            <summary>
            Gets the sensitivity.
            </summary>
            <value>The sensitivity.</value>
        </member>
        <member name="T:Aspose.Network.Mail.Calendar">
             <summary>
             Represents a calendar to an e-mail.
             </summary>
            <example>
             <p>This example demonstrates how to add a calendar to an E-Mail message.</p>
             [C#]
             <code>
            	    MailMessage msg = new MailMessage();
                 //attendees for the event
            	    MailAddressCollection attendees = new MailAddressCollection();
            	    attendees.Add(new MailAddress("person1@domain.com"));
            	    attendees.Add(new MailAddress("person2@domain.com"));
            	    attendees.Add(new MailAddress("person3@domain.com"));
                 //create calendar
            	    Calendar cal = new Calendar("Room 112",new DateTime(2006,7,17,13,0,0),new DateTime(2006,7,17,14,0,0),new MailAddress("somebody@domain.com"), attendees );
            	    cal.Summary = "Release Meetting";
            	    cal.Description = "Discuss for the next release";
                 //add calendar to the message
            	    msg.AddCalendar(cal);
             
                 //send the email message
                 SmtpClient smtp= new SmtpClient("smtp.server.com", 25, "user", "password");
                 smtp.Send(msg);
             </code>
             [VB.Net]
             <code>
             	Dim msg As MailMessage =  New MailMessage() 
                'attendees for the event
             	Dim attendees As MailAddressCollection =  New MailAddressCollection() 
             	attendees.Add(New MailAddress("person1@domain.com"))
             	attendees.Add(New MailAddress("person2@domain.com"))
             	attendees.Add(New MailAddress("person3@domain.com"))
                'create calendar
             	Dim cal As Calendar =  New Calendar("Room 112",New DateTime(2006,7,17,13,0,0),New DateTime(2006,7,17,14,0,0),New MailAddress("somebody@domain.com"),attendees) 
             	cal.Summary = "Release Meetting"
             	cal.Description = "Discuss for the next release"
                'add calendar to the message
             	msg.AddCalendar(cal)
             </code>
             </example>
        </member>
        <member name="M:Aspose.Network.Mail.Calendar.#ctor(System.String,System.DateTime,System.DateTime,Aspose.Network.Mail.MailAddress,Aspose.Network.Mail.MailAddressCollection)">
            <summary>
            Initialize a new instance of Calendar object.
            </summary>
            <param name="location">The location of the calendar event.</param>
            <param name="startDate">The start time of the calendar event.</param>
            <param name="endDate">The end time of the calendar event.</param>
            <param name="organizer">The organizer of the calendar event.</param>
            <param name="attendees">The attendees of th calendar event.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendar.#ctor(System.String,System.String,System.String,System.DateTime,System.DateTime,Aspose.Network.Mail.MailAddress,Aspose.Network.Mail.MailAddressCollection)">
            <summary>
            Initialize a new instance of Calendar object.
            </summary>
            <param name="location">The location of the calendar event.</param>
            <param name="summary">The summary of the calendar event.</param>
            <param name="description">The description of the calendar event.</param>
            <param name="startDate">The start time of the calendar event.</param>
            <param name="endDate">The end time of the calendar event.</param>
            <param name="organizer">The organizer of the calendar event.</param>
            <param name="attendees">The attendees of th calendar event.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendar.#ctor(System.String,System.String,System.String,System.DateTime,System.DateTime,Aspose.Network.Mail.MailAddress,Aspose.Network.Mail.MailAddressCollection,Aspose.Network.Mail.Calendaring.RecurrencePattern)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendar"/> class.
            </summary>
            <param name="location">The location.</param>
            <param name="summary">The summary.</param>
            <param name="description">The description.</param>
            <param name="startDate">The start date.</param>
            <param name="endDate">The end date.</param>
            <param name="organizer">The organizer.</param>
            <param name="attendees">The attendees.</param>
            <param name="recurrencePattern">The recurrence pattern.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendar.Save(System.IO.Stream)">
            <summary>
            Saves the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendar.Save(System.String)">
            <summary>
            Saves the specified file name.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendar.GetCalendarHtml">
            <summary>
            Gets the calendar HTML.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendar.GetCalendarText">
            <summary>
            Gets the calendar text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendar.CreateCancelRequestFrom(Aspose.Network.Mail.Calendar,System.String,System.Int32)">
            <summary>
            Creates the cancel request from.
            </summary>
            <param name="calendar">The calendar.</param>
            <param name="uniqueId">The unique id.</param>
            <param name="sequenceId">The sequence id.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Mail.Calendar.CreateCancelRequestFrom(System.String)">
            <summary>
            Creates the cancel request from.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.Summary">
            <summary>
            Gets or sets the summary.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.Attendees">
            <summary>
            Gets or sets the attendees.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.Organizer">
            <summary>
            Gets or sets the organizer.
            </summary>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.RecurrencePattern">
            <summary>
            Gets or sets the recurrence pattern.
            </summary>
            <value>The recurrence pattern.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.UniqueId">
            <summary>
            Gets or sets the unique id.
            </summary>
            <value>The unique id.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendar.SequenceId">
            <summary>
            Gets the sequence id.
            </summary>
            <value>The sequence id.</value>
        </member>
        <member name="T:Aspose.Network.Mail.AlternateViewCollection">
            <summary>
            Represents a collection of AlternateView objects. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.AlternateViewCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.AlternateViewCollection"/> class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.Calendaring.DayPosition">
            <summary>
            Represents the position of the day.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.DayPosition.First">
            <summary>
            First.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.DayPosition.Fourth">
            <summary>
            Fourth.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.DayPosition.Last">
            <summary>
            Last.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.DayPosition.Second">
            <summary>
            Second.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.DayPosition.Third">
            <summary>
            Third.
            </summary>
        </member>
        <member name="T:Aspose.Network.Imap.ImapFolderInfoCollection">
            <summary>
            Provides a container for a collection of ImapFolderInfo objects. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapFolderInfoCollection.#ctor">
            <summary>
            Initializes a new instance of the ImapFolderInfoCollection class. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Imap.ImapFolderInfoCollection.Add(Aspose.Network.Imap.ImapFolderInfo)">
            <summary>
            Adds the ImapFolderInfo to the ImapFolderInfoCollection. 
            </summary>
            <param name="item">The ImapFolderInfo object.</param>
        </member>
        <member name="M:Aspose.Network.Imap.ImapFolderInfoCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a folder info at specified index.
            </summary>
            <param name="index">The zero-based index of the ImapFolderInfo to remove. </param>
        </member>
        <member name="P:Aspose.Network.Imap.ImapFolderInfoCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Version">
            <summary> Defines a VERSION iCalendar property. When creating a new calendar you should always add a version property with
            value "2.0". There is actually a constant defined in the Version class for this. e.g:
            <code>    Calendar calendar = new Calendar();</code>
            <code>    calendar.getProperties().add(Version.VERSION_2_0);</code>
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Version.Version20">
            <summary>
            Version 2.0.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Version.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Version.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Version"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Version.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Version"/> class.
            </summary>
            <param name="minVersion">a string representation of the minimum version</param>
            <param name="maxVersion">a string representation of the maximum version</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Version.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Version"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="minVersion">The min version.</param>
            <param name="maxVersion">The max version.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Version.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
            <throws>  IOException possibly thrown by setting the value of certain properties </throws>
            <throws>  URISyntaxException possibly thrown by setting the value of certain properties </throws>
            <throws>  ParseException possibly thrown by setting the value of certain properties </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Version.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Version.setMaxVersion(System.String)">
            <param name="maxVersion">The maxVersion to set.
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Version.setMinVersion(System.String)">
            <param name="minVersion">The minVersion to set.
            </param>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Version.MaxVersion">
            <summary>
            Gets or sets the max version.
            </summary>
            <value>The max version.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Version.MinVersion">
            <summary>
            Gets or sets the min version.
            </summary>
            <value>The min version.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Url">
            <summary> Defines a URL iCalendar component property.
            
            <pre>
            4.8.4.6 Uniform Resource Locator
            
            Property Name: URL
            
            Purpose: This property defines a Uniform Resource Locator (URL)
            associated with the iCalendar object.
            
            Value Type: URI
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: This property can be specified once in the &quot;VEVENT&quot;,
            &quot;VTODO&quot;, &quot;VJOURNAL&quot; or &quot;VFREEBUSY&quot; calendar components.
            
            Description: This property may be used in a calendar component to
            convey a location where a more dynamic rendition of the calendar
            information associated with the calendar component can be found. This
            memo does not attempt to standardize the form of the URI, nor the
            format of the resource pointed to by the property value. If the URL
            property and Content-Location MIME header are both specified, they
            MUST point to the same resource.
            
            Format Definition: The property is defined by the following notation:
            
            url        = &quot;URL&quot; urlparam &quot;:&quot; uri CRLF
            
            urlparam   = *(&quot;;&quot; xparam)
            
            Example: The following is an example of this property:
            
            URL:http://abc.com/pub/calendars/jsmith/mytime.ics
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Url.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Url.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Url"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
            <throws>  URISyntaxException where the specified value string is not a valid uri </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Url.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Url"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Url.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Url"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Url.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Url.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Url.Uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Priority">
            <summary> Defines a PRIORITY iCalendar component property.
            
            <pre>
            4.8.1.9 Priority
            
            Property Name: PRIORITY
            
            Purpose: The property defines the relative priority for a calendar
            component.
            
            Value Type: INTEGER
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: The property can be specified in a &quot;VEVENT&quot; or &quot;VTODO&quot;
            calendar component.
            
            Description: The priority is specified as an integer in the range
            zero to nine. A value of zero (US-ASCII decimal 48) specifies an
            undefined priority. A value of one (US-ASCII decimal 49) is the
            highest priority. A value of two (US-ASCII decimal 50) is the second
            highest priority. Subsequent numbers specify a decreasing ordinal
            priority. A value of nine (US-ASCII decimal 58) is the lowest
            priority.
            
            A CUA with a three-level priority scheme of &quot;HIGH&quot;, &quot;MEDIUM&quot; and
            &quot;LOW&quot; is mapped into this property such that a property value in the
            range of one (US-ASCII decimal 49) to four (US-ASCII decimal 52)
            specifies &quot;HIGH&quot; priority. A value of five (US-ASCII decimal 53) is
            the normal or &quot;MEDIUM&quot; priority. A value in the range of six (US-
            ASCII decimal 54) to nine (US-ASCII decimal 58) is &quot;LOW&quot; priority.
            
            A CUA with a priority schema of &quot;A1&quot;, &quot;A2&quot;, &quot;A3&quot;, &quot;B1&quot;, &quot;B2&quot;, ...,
            &quot;C3&quot; is mapped into this property such that a property value of one
            (US-ASCII decimal 49) specifies &quot;A1&quot;, a property value of two (US-
            ASCII decimal 50) specifies &quot;A2&quot;, a property value of three (US-ASCII
            decimal 51) specifies &quot;A3&quot;, and so forth up to a property value of 9
            (US-ASCII decimal 58) specifies &quot;C3&quot;.
            
            Other integer values are reserved for future use.
            
            Within a &quot;VEVENT&quot; calendar component, this property specifies a
            priority for the event. This property may be useful when more than
            one event is scheduled for a given time period.
            
            Within a &quot;VTODO&quot; calendar component, this property specified a
            priority for the to-do. This property is useful in prioritizing
            multiple action items for a given time period.
            
            Format Definition: The property is specified by the following
            notation:
            
            priority   = &quot;PRIORITY&quot; prioparam &quot;:&quot; privalue CRLF
            ;Default is zero
            
            prioparam  = *(&quot;;&quot; xparam)
            
            privalue   = integer       ;Must be in the range [0..9]
            ; All other values are reserved for future use
            
            The following is an example of a property with the highest priority:
            
            PRIORITY:1
            
            The following is an example of a property with a next highest
            priority:
            
            PRIORITY:2
            
            Example: The following is an example of a property with no priority.
            This is equivalent to not specifying the &quot;PRIORITY&quot; property:
            
            PRIORITY:0
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.High">
            <summary>
            High.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.Medium">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.Low">
            <summary>
            Low.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Priority"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Priority"/> class.
            </summary>
            <param name="level">The level.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Priority"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
            <throws>  IOException possibly thrown by setting the value of certain properties </throws>
            <throws>  URISyntaxException possibly thrown by setting the value of certain properties </throws>
            <throws>  ParseException possibly thrown by setting the value of certain properties </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.Level">
            <summary>
            Gets or sets the level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.ImmutablePriority">
            <author>   An immutable instance of Priority.
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Priority.ImmutablePriority.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
            <throws>  IOException possibly thrown by setting the value of certain properties </throws>
            <throws>  URISyntaxException possibly thrown by setting the value of certain properties </throws>
            <throws>  ParseException possibly thrown by setting the value of certain properties </throws>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.TzId">
            <summary> Defines a Time Zone Identifier parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.TzId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.TzId"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.TzId.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Dir">
            <summary> Defines a Directory Entry Reference parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Dir.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Dir"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Dir.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Dir"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Dir.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Parameters.Dir.Uri">
            <returns> Returns the uri.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection">
            <summary> Defines a list of iCalendar location types.
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection.#ctor(System.String)">
            <summary>
            Parses the specified string representation to create
            a list of categories.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection.Add(System.String)">
            <summary>
            Add a location type to the list.
            </summary>
            <param name="locationType">Type of the location.</param>
            <returns>true</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>an iterator</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection.Remove(System.String)">
            <summary>
            Remove a locationType from the list.
            </summary>
            <param name="locationType">Type of the location.</param>
            <returns>
            true if the list contained the specified category
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection.Empty">
            <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection"/> is empty.
            </summary>
            <value><c>true</c> if empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.LocationTypeCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.IndexedPropertyList">
            <summary> Provides indexing of properties on a specific parameter.</summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.IndexedPropertyList.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection,System.String)">
            <summary> Creates a new instance indexed on the parameters with the specified name.</summary>
            <param name="list">a list of properties
            </param>
            <param name="parameterName">the name of parameters on which to index
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.IndexedPropertyList.GetProperties(System.String)">
            <summary>
            Returns a list of properties containing a parameter with the
            specified value.
            </summary>
            <param name="paramValue">the value of the parameter contained in the
            returned properties</param>
            <returns>a property list</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.IndexedPropertyList.GetProperty(System.String)">
            <summary>
            Returns the first property containing a parameter with the specified
            value.
            </summary>
            <param name="paramValue">the value of the parameter identified in the returned
            property</param>
            <returns>
            a property or null if no property is found containing a parameter
            with the specified value
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.VToDo">
            <summary> Defines an iCalendar VTODO component.
            
            <pre>
            4.6.2 To-do Component
            
            Component Name: VTODO
            
            Purpose: Provide a grouping of calendar properties that describe a
            to-do.
            
            Formal Definition: A &quot;VTODO&quot; calendar component is defined by the
            following notation:
            
            todoc      = &quot;BEGIN&quot; &quot;:&quot; &quot;VTODO&quot; CRLF
            todoprop *alarmc
            &quot;END&quot; &quot;:&quot; &quot;VTODO&quot; CRLF
            
            todoprop   = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            class / completed / created / description / dtstamp /
            dtstart / geo / last-mod / location / organizer /
            percent / priority / recurid / seq / status /
            summary / uid / url /
            
            ; either 'due' or 'duration' may appear in
            ; a 'todoprop', but 'due' and 'duration'
            ; MUST NOT occur in the same 'todoprop'
            
            due / duration /
            
            ; the following are optional,
            ; and MAY occur more than once
            attach / attendee / categories / comment / contact /
            exdate / exrule / rstatus / related / resources /
            rdate / rrule / x-prop
            
            )
            </pre>
            
            Example 1 - Creating a todo of two (2) hour duration starting tomorrow:
            
            <pre><code>
            java.util.Calendar cal = java.util.Calendar.getInstance();
            // tomorrow..
            cal.add(java.util.Calendar.DAY_OF_MONTH, 1);
            cal.set(java.util.Calendar.HOUR_OF_DAY, 11);
            cal.set(java.util.Calendar.MINUTE, 00);
            
            VToDo documentation = new VEvent(cal.getTime(), 1000 * 60 * 60 * 2,
            &quot;Document calendar component usage&quot;);
            
            // add timezone information..
            VTimeZone tz = VTimeZone.getDefault();
            TzId tzParam = new TzId(tz.getProperties().getProperty(Property.TZID)
            .getValue());
            documentation.getProperties().getProperty(Property.DTSTART).getParameters()
            .add(tzParam);
            </code></pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VToDo.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VToDo.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary> Constructor.</summary>
            <param name="properties">a list of properties
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VToDo.#ctor(Aspose.Network.iCalendar.ObjectModel.Date,System.String)">
            <summary> Constructs a new VTODO instance starting at the specified time with the specified summary.</summary>
            <param name="start">the start date of the new todo
            </param>
            <param name="summary">the todo summary
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VToDo.#ctor(Aspose.Network.iCalendar.ObjectModel.Date,Aspose.Network.iCalendar.ObjectModel.Date,System.String)">
            <summary> Constructs a new VTODO instance starting and ending at the specified times with the specified summary.</summary>
            <param name="start">the start date of the new todo
            </param>
            <param name="due">the due date of the new todo
            </param>
            <param name="summary">the todo summary
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VToDo.#ctor(Aspose.Network.iCalendar.ObjectModel.Date,Aspose.Network.iCalendar.ObjectModel.Dur,System.String)">
            <summary> Constructs a new VTODO instance starting at the specified times, for the specified duration, with the specified
            summary.
            </summary>
            <param name="start">the start date of the new todo
            </param>
            <param name="duration">the duration of the new todo
            </param>
            <param name="summary">the todo summary
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VToDo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VToDo.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VToDo.Copy">
            <summary>
            Overrides default copy method to add support for copying alarm sub-components.
            </summary>
            <returns>the component copy</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Alarms">
            <summary> Returns the list of alarms for this todo.</summary>
            <returns> a component list
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Classification">
            <returns> the optional access classification property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.DateCompleted">
            <returns> the optional date completed property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Created">
            <returns> the optional creation-time property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Description">
            <returns> the optional description property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.StartDate">
            <summary> Convenience method to pull the DTSTART out of the property list.</summary>
            <returns> The DtStart object representation of the start Date
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.GeographicPos">
            <returns> the optional geographic position property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.LastModified">
            <returns> the optional last-modified property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Location">
            <returns> the optional location property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Organizer">
            <returns> the optional organizer property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.PercentComplete">
            <returns> the optional percentage complete property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Priority">
            <returns> the optional priority property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.DateStamp">
            <returns> the optional date-stamp property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Sequence">
            <returns> the optional sequence number property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Status">
            <returns> the optional status property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Summary">
            <returns> the optional summary property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Url">
            <returns> the optional URL property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.RecurrenceId">
            <returns> the optional recurrence identifier property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Duration">
            <returns> the optional Duration property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Due">
            <returns> the optional due property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VToDo.Uid">
            <summary> Returns the UID property of this component if available.</summary>
            <returns> a Uid instance, or null if no UID property exists
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.FoldingWriter">
            <summary> A writer that performs iCalendar folding as it writes.</summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.FoldingWriter.#ctor(System.IO.TextWriter,System.Int32)">
            <param name="writer">a writer to write output to
            </param>
            <param name="foldLength">
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.FoldingWriter.#ctor(System.IO.TextWriter)">
            <param name="writer">a writer to write output to
            </param>
        </member>
        <member name="T:Aspose.Network.Exchange.ExchangeMailboxInfo">
            <summary>
            Represents the mail box information of an exchange server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeMailboxInfo.#ctor">
            <summary>
            Initializes a new instance of the ExchangeMailboxInfo class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeMailboxInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExchangeMailboxInfo class.
            </summary>
            <param name="mailBoxUri">The address of the mailbox.</param>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.MailboxUri">
            <summary>
            Gets the mailbox uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.CalendarUri">
            <summary>
            Gets the calendar uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.ContactsUri">
            <summary>
            Gets the contracts uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.DeletedItemsUri">
            <summary>
            Gets the deleted items uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.DraftsUri">
            <summary>
            Gets the drafts uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.InboxUri">
            <summary>
            Gets the inbox uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.JournalUri">
            <summary>
            Gets the journal uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.SubmissionUri">
            <summary>
            Gets the submission uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.NotesUri">
            <summary>
            Gets the notes uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.OutboxUri">
            <summary>
            Gets the outbox uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.RootUri">
            <summary>
            Gets the root uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.SentItemsUri">
            <summary>
            Gets the sent items uri.
            </summary>
        </member>
        <member name="P:Aspose.Network.Exchange.ExchangeMailboxInfo.TasksUri">
            <summary>
            Gets the tasks uri.
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.RecipientType">
            <summary>
            Specifies the valid RecipientTypes for a Recipient.
            </summary>
        </member>
        <member name="F:Aspose.Windows.Forms.RecipientType.To">
            <summary>
            Recipient will be in the TO list.
            </summary>
        </member>
        <member name="F:Aspose.Windows.Forms.RecipientType.CC">
            <summary>
            Recipient will be in the CC list.
            </summary>
        </member>
        <member name="F:Aspose.Windows.Forms.RecipientType.BCC">
            <summary>
            Recipient will be in the BCC list.
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.MapiAgentImpl">
            <summary>
            Represents an email message to be sent through MAPI.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MapiAgentImpl.#ctor">
            <summary>
            Creates a blank mail message.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MapiAgentImpl.#ctor(System.String)">
            <summary>
            Creates a new mail message with the specified subject.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MapiAgentImpl.#ctor(System.String,System.String)">
            <summary>
            Creates a new mail message with the specified subject and body.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MapiAgentImpl.ShowDialog">
            <summary>
            Displays the mail message dialog asynchronously.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MapiAgentImpl._ShowMail(System.Object)">
            <summary>
            Sends the mail message.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MapiAgentImpl._DeallocFiles(Aspose.Windows.Forms.MAPIHelperInterop.MapiMessage)">
            <summary>
            Deallocates the files in a message.
            </summary>
            <param name="message">The message to deallocate the files from.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.MapiAgentImpl._AllocAttachments(System.Int32@)">
            <summary>
            Allocates the file attachments
            </summary>
            <param name="fileCount"></param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Windows.Forms.MapiAgentImpl._ShowMail">
            <summary>
            Sends the mail message.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.MapiAgentImpl._LogErrorMapi(System.Int32)">
            <summary>
            Logs any Mapi errors.
            </summary>
        </member>
        <member name="P:Aspose.Windows.Forms.MapiAgentImpl.Subject">
            <summary>
            Gets or sets the subject of this mail message.
            </summary>
        </member>
        <member name="P:Aspose.Windows.Forms.MapiAgentImpl.Body">
            <summary>
            Gets or sets the body of this mail message.
            </summary>
        </member>
        <member name="P:Aspose.Windows.Forms.MapiAgentImpl.Recipients">
            <summary>
            Gets the recipient list for this mail message.
            </summary>
        </member>
        <member name="P:Aspose.Windows.Forms.MapiAgentImpl.Files">
            <summary>
            Gets the file list for this mail message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.EnqueueCompletedOpToInbox(Aspose.Network.Threading.AsyncEnumerator.AsyncOp)">
            <summary>
            Called internally when an async operation completes
            </summary>
            <param name="asyncOp">The AsyncOp that wraps the non-cancelable or cancelable async operation.</param>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.DequeueAsyncResult">
            <summary>
            Dequeues a completed AsyncOp's IAsyncResult object from the inbox.
            </summary>
            <returns>The completed AsyncOp's IAsyncResult object.</returns>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.End(System.Int32,Aspose.Network.Threading.AsyncEnumerator.EndObjectXxx)">
            <summary>
            Pass the result of this method to a BegixXxx method's AsyncCallback argument to have a cancelable operation
            complete to advance the enumerator.
            </summary>
            <param name="discardMarker">Identifies an operation sequence number used for cancelation. The number passed must be >= to the last number passed.</param>
            <param name="callback">The EndXxx method that must be called when this canceled operation eventually completes.</param>
            <returns>The value that should be passed to a BeginXxx method's AsyncCallback argument.</returns>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.EndVoid(System.Int32,Aspose.Network.Threading.AsyncEnumerator.EndVoidXxx)">
            <summary>
            Pass the result of this method to a BegixXxx method's AsyncCallback argument to have a cancelable operation
            complete to advance the enumerator.
            </summary>
            <param name="discardMarker">Identifies an operation sequence number used for cancelation. The number passed must be >= to the last number passed.</param>
            <param name="callback">The EndXxx method that must be called when this canceled operation eventually completes.</param>
            <returns>The value that should be passed to a BeginXxx method's AsyncCallback argument.</returns>
        </member>
        <member name="T:Aspose.Network.Threading.AsyncEnumerator.EndObjectXxx">
            <summary>
            Identifies an EndXxx method that takes an IAsyncResult and returns some result
            </summary>
            <param name="result">The IAsyncResult of the completion operation.</param>
            <returns>The EndXxx method's return value.</returns>
        </member>
        <member name="T:Aspose.Network.Threading.AsyncEnumerator.EndVoidXxx">
            <summary>
            Identifies an EndXxx method that takes an IAsyncResult and doesn't return a value
            </summary>
            <param name="result">The IAsyncResult of the completion operation.</param>
        </member>
        <member name="T:Aspose.Network.Threading.AsyncEnumerator.AsyncOp">
            <summary>
            Base class that wraps an asynchronous operation and its AsyncCallback method.
            </summary>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.AsyncOp.SelfComplete">
            <summary>
            Called when an AsyncOp is being rejected/dicarded to ensure that its EndXxx method is invoked
            </summary>
        </member>
        <member name="T:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts">
            <summary>
            This struct contains a single Int32 member that encapsulates the  
            number of items the enumerator is waiting for and the number of 
            completed async operations in the inbox. All members of this type
            manipulate the counters atomically.
            </summary>
        </member>
        <member name="F:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.c_MaxWait">
            <summary>
            Sentinal value used to indicate that a thread determined that 
            it should call MoveNext again to advance the iterator 
            </summary>
        </member>
        <member name="F:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.m_waitAndInboxCounts">
            <summary>
            High 16 bits=number of inbox items to wait for before calling MoveNext
            Low 16 bits=number of items in inbox 
            </summary>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.#ctor(System.Int32)">
            <summary>
            Constructs a WaitAndInboxCounts instance from an Int32
            </summary>
            <param name="waic">The Int32 instance.</param>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.ToInt32">
            <summary>
            Converts a WaitAndInboxCounts instance to an Int32
            </summary>
            <returns>The WaitAndInboxCounts object as an Int32.</returns>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.Initialize">
            <summary>
            Initializes the Wait to the sentinal value because we don't want
            a thread to MoveNext until the iterator has returned a Wait at least once
            </summary>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.AtomicSetWait(System.UInt16)">
            <summary>
            Atomically updates the number of inbox items the enumerator 
            wants to wait for and returns the new value.
            </summary>
            <param name="numberOpsToWaitFor">The number of asynchronous operations that must complete before the enumerator advances.</param>
            <returns>Returns true if the calling thread met the requirements necessary to call the enumerator's MoveNext method.</returns>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.AtomicIncrementInbox">
            <summary>
            Atomically updates the number of inbox items the enumerator 
            wants to wait for and returns the new value. 
            </summary>
            <returns>Returns true if the calling thread met the requirements necessary to call the enumerator's MoveNext method.</returns>
        </member>
        <member name="M:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.AtomicDecrementInbox(System.Int32)">
            <summary>
            Atomically subtracts the number of discarded items from the inbox.
            </summary>
            <param name="numRemoved">The number of asynchronous operations that were discarded from the inbox.</param>
        </member>
        <member name="P:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.Wait">
            <summary>
            Gets/Sets the number of items the enumerator is waiting for 
            </summary>
        </member>
        <member name="P:Aspose.Network.Threading.AsyncEnumerator.WaitAndInboxCounts.Inbox">
            <summary>
            Gets/Sets the number of items in the inbox
            </summary>
        </member>
        <member name="T:Aspose.Network.Security.Authentication.InvalidCredentialException">
            <summary>
            The exception that is thrown when authentication fails for an authentication stream and cannot be retried
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Authentication.InvalidCredentialException.#ctor">
            <summary>
            Initializes a new instance of the InvalidCredentialException class with no message. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Authentication.InvalidCredentialException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InvalidCredentialException class with the specified message.
            </summary>
            <param name="message">A String that describes the authentication failure.</param>
        </member>
        <member name="M:Aspose.Network.Security.Authentication.InvalidCredentialException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the InvalidCredentialException class with the specified message and inner exception.
            </summary>
            <param name="message">A String that describes the authentication failure.</param>
            <param name="innerException">The Exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Aspose.Network.Logging.LogLevel">
            <summary>
            Defines available log levels.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.LogLevel.Trace">
            <summary>
            The Trace level.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.LogLevel.Debug">
            <summary>
            The Debug level.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.LogLevel.Information">
            <summary>
            The Info level.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.LogLevel.Warning">
            <summary>
            The Warn level.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.LogLevel.Error">
            <summary>
            The Error level.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.LogLevel.Fatal">
            <summary>
            The Fatal level.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.LogLevel.op_LessThanOrEqual(Aspose.Network.Logging.LogLevel,Aspose.Network.Logging.LogLevel)">
            <summary>
            Compares two <see cref="T:Aspose.Network.Logging.LogLevel"/> objects 
            and returns a value indicating whether 
            the first one is less than or equal to the second one.
            </summary>
            <param name="l1">The first level.</param>
            <param name="l2">The second level.</param>
            <returns>The value of <c>l1.Ordinal &lt;= l2.Ordinal</c></returns>
        </member>
        <member name="M:Aspose.Network.Logging.LogLevel.op_GreaterThanOrEqual(Aspose.Network.Logging.LogLevel,Aspose.Network.Logging.LogLevel)">
            <summary>
            Compares two <see cref="T:Aspose.Network.Logging.LogLevel"/> objects 
            and returns a value indicating whether 
            the first one is greater than or equal to the second one.
            </summary>
            <param name="l1">The first level.</param>
            <param name="l2">The second level.</param>
            <returns>The value of <c>l1.Ordinal &gt;= l2.Ordinal</c></returns>
        </member>
        <member name="M:Aspose.Network.Logging.LogLevel.op_LessThan(Aspose.Network.Logging.LogLevel,Aspose.Network.Logging.LogLevel)">
            <summary>
            Compares two <see cref="T:Aspose.Network.Logging.LogLevel"/> objects 
            and returns a value indicating whether 
            the first one is less than the second one.
            </summary>
            <param name="l1">The first level.</param>
            <param name="l2">The second level.</param>
            <returns>The value of <c>l1.Ordinal &lt; l2.Ordinal</c></returns>
        </member>
        <member name="M:Aspose.Network.Logging.LogLevel.op_GreaterThan(Aspose.Network.Logging.LogLevel,Aspose.Network.Logging.LogLevel)">
            <summary>
            Compares two <see cref="T:Aspose.Network.Logging.LogLevel"/> objects 
            and returns a value indicating whether 
            the first one is greater than the second one.
            </summary>
            <param name="l1">The first level.</param>
            <param name="l2">The second level.</param>
            <returns>The value of <c>l1.Ordinal &gt; l2.Ordinal</c></returns>
        </member>
        <member name="M:Aspose.Network.Logging.LogLevel.ToString">
            <summary>
            Returns a string representation of the log level.
            </summary>
            <returns>Log level name.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.LogLevel.CompareTo(System.Object)">
            <summary>
            Compares the level to the other <see cref="T:Aspose.Network.Logging.LogLevel"/> object.
            </summary>
            <param name="obj">the object object</param>
            <returns>a value less than zero when this logger's <see cref="P:Aspose.Network.Logging.LogLevel.Ordinal"/> is 
            less than the other logger's ordinal, 0 when they are equal and 
            greater than zero when this ordinal is greater than the
            other ordinal.</returns>
        </member>
        <member name="T:Aspose.Network.Logging.LogEntry">
            <summary>
            Represents a log message.  Contains the common properties that are required for all log messages.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.#ctor">
            <summary>
            Initialize a new instance of a <see cref="T:Aspose.Network.Logging.LogEntry"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.#ctor(System.String)">
            <summary>
            Initialize a new instance of a <see cref="T:Aspose.Network.Logging.LogEntry"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.#ctor(System.String,System.Exception)">
            <summary>
            Initialize a new instance of a <see cref="T:Aspose.Network.Logging.LogEntry"/> class.
            </summary>
            <param name="message">Message body to log.  Value from ToString() method from message object.</param>
            <param name="innerException">The inner exception to log.</param>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.#ctor(System.String,Aspose.Network.Logging.LogLevel)">
            <summary>
            Initialize a new instance of a <see cref="T:Aspose.Network.Logging.LogEntry"/> class.
            </summary>
            <param name="message">Message body to log.  Value from ToString() method from message object.</param>
            <param name="severity">Log entry severity as a <see cref="P:Aspose.Network.Logging.LogEntry.Severity"/> enumeration. (Unspecified, Information, Warning or Error).</param>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.#ctor(System.String,System.Exception,Aspose.Network.Logging.LogLevel)">
            <summary>
            Initialize a new instance of a <see cref="T:Aspose.Network.Logging.LogEntry"/> class.
            </summary>
            <param name="message">Message body to log.  Value from ToString() method from message object.</param>
            <param name="innerException">The inner exception to log.</param>
            <param name="severity">Log entry severity as a <see cref="P:Aspose.Network.Logging.LogEntry.Severity"/> enumeration. (Unspecified, Information, Warning or Error).</param>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.#ctor(System.String,Aspose.Network.Logging.LogLevel,System.String,System.Int32,System.String,System.Collections.IDictionary)">
            <summary>
            Create a new instance of <see cref="T:Aspose.Network.Logging.LogEntry"/> with a full set of constructor parameters
            </summary>
            <param name="message">Message body to log.  Value from ToString() method from message object.</param>
            <param name="severity">Log entry severity as a <see cref="P:Aspose.Network.Logging.LogEntry.Severity"/> enumeration. (Unspecified, Information, Warning or Error).</param>
            <param name="category">Category name used to route the log entry to a one or more sinks.</param>
            <param name="eventId">Event number or identifier.</param>
            <param name="title">Additional description of the log entry message.</param>
            <param name="properties">Dictionary of key/value pairs to record.</param>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.#ctor(System.String,System.Exception,Aspose.Network.Logging.LogLevel,System.String,System.Int32,System.String,System.Collections.IDictionary)">
            <summary>
            Create a new instance of <see cref="T:Aspose.Network.Logging.LogEntry"/> with a full set of constructor parameters
            </summary>
            <param name="message">Message body to log.  Value from ToString() method from message object.</param>
            <param name="innerException">The inner exception to log.</param>
            <param name="severity">Log entry severity as a <see cref="P:Aspose.Network.Logging.LogEntry.Severity"/> enumeration. (Unspecified, Information, Warning or Error).</param>
            <param name="category">Category name used to route the log entry to a one or more sinks.</param>
            <param name="eventId">Event number or identifier.</param>
            <param name="title">Additional description of the log entry message.</param>
            <param name="properties">Dictionary of key/value pairs to record.</param>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.Clone">
            <summary>
            Creates a new <see cref="T:Aspose.Network.Logging.LogEntry"/> that is a copy of the current instance.
            </summary>
            <returns>A new <c>LogEntry</c> that is a copy of the current instance.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.AddErrorMessage(System.String)">
            <summary>
            Add an error or warning message to the start of the messages string builder.
            Used by the distributor to record problems.
            </summary>
            <param name="message">Message to be added to this instance</param>
        </member>
        <member name="M:Aspose.Network.Logging.LogEntry.CollectIntrinsticProperties">
            <summary>
            Set the intrinsic properties such as MachineName and UserIdentity.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.Message">
            <summary>
            Message body to log.  Value from ToString() method from message object.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.Category">
            <summary>
            Category name used to route the log entry to a one or more sinks.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.EventId">
            <summary>
            Event number or identifier.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.Severity">
            <summary>
            Log entry severity as a <see cref="P:Aspose.Network.Logging.LogEntry.Severity"/> enumeration. (Unspecified, Information, Warning or Error).
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.Title">
            <summary>
            Additional description of the log entry message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.TimeStamp">
            <summary>
            Date and time of the log entry message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.MachineName">
            <summary>
            Name of the computer.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.AppDomainName">
            <summary>
            The AppDomain in which we are running
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.ThreadName">
            <summary>
            The name of the .NET thread. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.ContextualProperties">
            <summary>
            Dictionary of key/value pairs to record.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.ErrorMessages">
            <summary>
            Gets the error message with the <see cref="T:Aspose.Network.Logging.LogEntry"></see>
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.SequenceId">
            <summary>
            The unique identifier of log event which is automatically generated
            and monotonously increasing.
            </summary>
        </member>
        <member name="P:Aspose.Network.Logging.LogEntry.InnerException">
            <summary>
            Gets or sets the inner exception object.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.SendCompletedEventArgs">
            <summary>
            Provides data for the SendCompleted event. When your asynchronous send operation calls an event handler, an instance of this class is passed to the handler.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.SendCompletedEventArgs.AsyncResult">
            <summary>
            Gets the result of the asynchronous operation requested.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.SendCompletedEventArgs.Sender">
            <summary>
            Gets the sender of the event
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.EchoMessage">
            <summary>
            Represents the echo message in ICMP protocol.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoMessage.#ctor">
            <summary>
            Creates a new instance of EchoMessage.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoMessage.#ctor(System.Byte[])">
            <summary>
            Creates a new instance of EchoMessage.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.EchoMessage.CreateIdentifier">
            <summary>
            Creates a new identifier.
            </summary>
            <returns>A new identifier.</returns>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoMessage.Identifier">
            <summary>
            Gets or sets identifier.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoMessage.SequenceNumber">
            <summary>
            Gets or sets sequence number.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.DestinationUnreachableMessage">
            <summary>
            Represents a destination unreachable message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.DestinationUnreachableMessage.#ctor">
            <summary>
            Initializes a new instance of the DestinationUnreachableMessage class.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.EchoCompletedEventArgs">
            <summary>
            Provides data for the EchoCompleted event. When your asynchronous receive operation calls an event handler, an instance of this class is passed to the handler.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoCompletedEventArgs.AsyncResult">
            <summary>
            Gets the result of the asynchronous operation requested.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoCompletedEventArgs.Sender">
            <summary>
            Gets the sender of the event
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.EchoCompletedEventArgs.Message">
            <summary>
            Gets the message from the server.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiAttachment">
            <summary>
            Represents the attachment in the E-mail message.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiAttachment.Save(System.String)">
            <summary>
            Save attachment content.
            </summary>
            <param name="filename">The file name to save.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiAttachment.Save(System.IO.Stream)">
            <summary>
            Save attachment content.
            </summary>
            <param name="stream">The stream to save.</param>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.Extension">
            <summary>
            Gets a filename extension that indicates the document type of an attachment.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.FileName">
            <summary>
            Gets an attachment's base filename and extension, excluding path. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.LongFileName">
            <summary>
            Gets an attachment's long filename and extension, excluding path.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.DisplayName">
            <summary>
            Gets the display name of the ole object in an attachment.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.MimeTag">
            <summary>
            Gets formatting information about a Multipurpose Internet Mail Extensions (MIME) attachment.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.BinaryData">
            <summary>
            Gets binary attachment data typically accessed through the OLE IStream interface. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.ObjectData">
            <summary>
            Gets an attachment object typically accessed through the OLE IStorage interface. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.PropertyStream">
            <summary>
            Gets the property stream.
            </summary>
            <value>The property stream.</value>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.SubStorages">
            <summary>
            Gets the sub storages.
            </summary>
            <value>The sub storages.</value>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiAttachment.Content">
            <summary>
            Gets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:Aspose.Network.Dns.DnsException">
            <summary>
            Defines the base class for predefined exceptions in the Aspose.Network.Dns namespace.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.DnsException.#ctor">
            <summary>
            Initializes a new instance of the class <see cref="T:Aspose.Network.Dns.DnsException"/>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.DnsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the class <see cref="T:Aspose.Network.Dns.DnsException"/>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.DnsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the class <see cref="T:Aspose.Network.Dns.DnsException"/>.
            </summary>
        </member>
        <member name="T:Aspose.Network.Pop3.Pop3SslSecurityMode">
            <summary>
            Represents the SSL security mode for Pop3Client.
            </summary>
        </member>
        <member name="F:Aspose.Network.Pop3.Pop3SslSecurityMode.Explicit">
            <summary>
            Explicit mode.
            </summary>
        </member>
        <member name="F:Aspose.Network.Pop3.Pop3SslSecurityMode.Implicit">
            <summary>
            Implicit mode.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiNamedPropertyMappingStorage">
            <summary>
            Represents the named property mapping.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiNamedPropertyMappingStorage.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiNamedPropertyMappingStorage.Content">
            <summary>
            Gets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.TimeZoneRegistryImpl">
            <summary> The default implementation of a <code>TimeZoneRegistry</code>. This implementation will search the classpath for
            applicable VTimeZone definitions used to back the provided TimeZone instances.
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.TimeZoneRegistryImpl.#ctor">
            <summary>
            Creates a new instance using the specified resource prefix.
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence">
            <summary> Defines a SEQUENCE iCalendar component property.
            
            <pre>
            4.8.7.4 Sequence Number
            
            Property Name: SEQUENCE
            
            Purpose: This property defines the revision sequence number of the
            calendar component within a sequence of revisions.
            
            Value Type: integer
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: The property can be specified in &quot;VEVENT&quot;, &quot;VTODO&quot; or
            &quot;VJOURNAL&quot; calendar component.
            
            Description: When a calendar component is created, its sequence
            number is zero (US-ASCII decimal 48). It is monotonically incremented
            by the &quot;Organizer's&quot; CUA each time the &quot;Organizer&quot; makes a
            significant revision to the calendar component. When the &quot;Organizer&quot;
            makes changes to one of the following properties, the sequence number
            MUST be incremented:
            
            .  &quot;DTSTART&quot;
            
            .  &quot;DTEND&quot;
            
            .  &quot;DUE&quot;
            
            .  &quot;RDATE&quot;
            
            .  &quot;RRULE&quot;
            
            .  &quot;EXDATE&quot;
            
            .  &quot;EXRULE&quot;
            
            .  &quot;STATUS&quot;
            
            In addition, changes made by the &quot;Organizer&quot; to other properties can
            also force the sequence number to be incremented. The &quot;Organizer&quot; CUA
            MUST increment the sequence number when ever it makes changes to
            properties in the calendar component that the &quot;Organizer&quot; deems will
            jeopardize the validity of the participation status of the
            &quot;Attendees&quot;. For example, changing the location of a meeting from one
            locale to another distant locale could effectively impact the
            participation status of the &quot;Attendees&quot;.
            
            The &quot;Organizer&quot; includes this property in an iCalendar object that it
            sends to an &quot;Attendee&quot; to specify the current version of the calendar
            component.
            
            The &quot;Attendee&quot; includes this property in an iCalendar object that it
            sends to the &quot;Organizer&quot; to specify the version of the calendar
            component that the &quot;Attendee&quot; is referring to.
            
            A change to the sequence number is not the mechanism that an
            &quot;Organizer&quot; uses to request a response from the &quot;Attendees&quot;. The
            &quot;RSVP&quot; parameter on the &quot;ATTENDEE&quot; property is used by the
            &quot;Organizer&quot; to indicate that a response from the &quot;Attendees&quot; is
            requested.
            
            Format Definition: This property is defined by the following
            notation:
            
            seq = &quot;SEQUENCE&quot; seqparam &quot;:&quot; integer CRLF
            ; Default is &quot;0&quot;
            
            seqparam   = *(&quot;;&quot; xparam)
            
            Example: The following is an example of this property for a calendar
            component that was just created by the &quot;Organizer&quot;.
            
            SEQUENCE:0
            
            The following is an example of this property for a calendar component
            that has been revised two different times by the &quot;Organizer&quot;.
            
            SEQUENCE:2
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence"/> class.
            </summary>
            <param name="sequenceNo">The sequence no.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="sequenceNo">The sequence no.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Sequence.SequenceNumber">
            <returns> Returns the sequenceNo.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Location">
            <summary> Defines a LOCATION iCalendar component property.
            
            <pre>
            4.8.1.7 Location
            
            Property Name: LOCATION
            
            Purpose: The property defines the intended venue for the activity
            defined by a calendar component.
            
            Value Type: TEXT
            
            Property Parameters: Non-standard, alternate text representation and
            language property parameters can be specified on this property.
            
            Conformance: This property can be specified in &quot;VEVENT&quot; or &quot;VTODO&quot;
            calendar component.
            
            Description: Specific venues such as conference or meeting rooms may
            be explicitly specified using this property. An alternate
            representation may be specified that is a URI that points to
            directory information with more structured specification of the
            location. For example, the alternate representation may specify
            either an LDAP URI pointing to an LDAP server entry or a CID URI
            pointing to a MIME body part containing a vCard [RFC 2426] for the
            location.
            
            Format Definition: The property is defined by the following notation:
            
            location   = &quot;LOCATION locparam &quot;:&quot; text CRLF
            
            locparam   = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; altrepparam) / (&quot;;&quot; languageparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            
            )
            
            Example: The following are some examples of this property:
            
            LOCATION:Conference Room - F123, Bldg. 002
            
            LOCATION;ALTREP=&quot;http://xyzcorp.com/conf-rooms/f123.vcf&quot;:
            Conference Room - F123, Bldg. 002
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Location.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Location.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Location"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Location.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Location"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Location.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Location.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy">
            <summary> Defines a FREEBUSY iCalendar component property.
            
            <pre>
            4.8.2.6 Free/Busy Time
            
            Property Name: FREEBUSY
            
            Purpose: The property defines one or more free or busy time
            intervals.
            
            Value Type: PERIOD. The date and time values MUST be in an UTC time
            format.
            
            Property Parameters: Non-standard or free/busy time type property
            parameters can be specified on this property.
            
            Conformance: The property can be specified in a &quot;VFREEBUSY&quot; calendar
            component.
            
            Property Parameter: &quot;FBTYPE&quot; and non-standard parameters can be
            specified on this property.
            
            Description: These time periods can be specified as either a start
            and end date-time or a start date-time and duration. The date and
            time MUST be a UTC time format.
            
            &quot;FREEBUSY&quot; properties within the &quot;VFREEBUSY&quot; calendar component
            SHOULD be sorted in ascending order, based on start time and then end
            time, with the earliest periods first.
            
            The &quot;FREEBUSY&quot; property can specify more than one value, separated by
            the COMMA character (US-ASCII decimal 44). In such cases, the
            &quot;FREEBUSY&quot; property values SHOULD all be of the same &quot;FBTYPE&quot;
            property parameter type (e.g., all values of a particular &quot;FBTYPE&quot;
            listed together in a single property).
            
            Format Definition: The property is defined by the following notation:
            
            freebusy   = &quot;FREEBUSY&quot; fbparam &quot;:&quot; fbvalue
            CRLF
            
            fbparam    = *(
            ; the following is optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; fbtypeparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            
            )
            
            fbvalue    = period *[&quot;,&quot; period]
            ;Time value MUST be in the UTC time format.
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy.#ctor(Aspose.Network.iCalendar.ObjectModel.PeriodList)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy"/> class.
            </summary>
            <param name="periods">The periods.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.PeriodList)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="periods">The periods.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.FreeBusy.Periods">
            <returns> Returns the periods.
            </returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.ExtendedAddress">
            <summary>
            Defines a EXTENDED_ADDRESS iCalendar component property.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExtendedAddress.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExtendedAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.ExtendedAddress"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExtendedAddress.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.ExtendedAddress"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExtendedAddress.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.ExtendedAddress.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee">
            <summary> Defines an ATTENDEE iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee"/> class.
            </summary>
            <param name="value">The value.</param>
            <throws>  URISyntaxException where the specified value string is not a valid uri </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Properties.Attendee.CalAddress">
            <summary>
            Gets or sets the cal address.
            </summary>
            <value>The cal address.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.DateTime">
            <summary>
            Represents a time of day on a specific date.
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateTime.ParseExact(System.String)">
            <summary>
            Parses the exact.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateTime.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateTime.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.DateTime"/> class.
            </summary>
            <param name="time">The time.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateTime.#ctor(System.DateTime,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.DateTime"/> class.
            </summary>
            <param name="time">The time.</param>
            <param name="utc">if set to <c>true</c> [UTC].</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateTime.#ctor(System.String)">
            <summary>
            Constructs a new DateTime instance from parsing the specified string representation in the default (local)
            timezone.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateTime.#ctor(System.DateTime,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.DateTime"/> class.
            </summary>
            <param name="dtValue">The dt value.</param>
            <param name="timezone">The timezone.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateTime.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new date-time instance from the specified value in the given timezone. If a timezone is not specified,
            the default timezone (as returned by {@link java.util.TimeZone#getDefault()}) is used.
            </summary>
            <param name="value">The value.</param>
            <param name="timezone">The timezone.</param>
            <throws>  ParseException </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateTime.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.DateTime"/> class.
            </summary>
            <param name="utc">if set to <c>true</c> [UTC].</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.DateTime.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.DateTime.Utc">
            <summary>
            Updates this date-time to display in UTC time if the argument is true. Otherwise, resets to the default timezone.
            </summary>
            <value><c>true</c> if UTC; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.DateTime.TimeZone">
            <summary>
            Returns the current timezone associated with this date-time value.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="T:Aspose.Network.Exchange.ExchangeException">
            <summary>
            Represents the exception that is thrown when the ExchangeClient gets errors.
            </summary>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeException.#ctor">
            <summary>
            Initializes a new instance of the ExchangeException class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExchangeException class.
            </summary>
            <param name="message">A String that describes the error that occurred.</param>
        </member>
        <member name="M:Aspose.Network.Exchange.ExchangeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ExchangeException class.
            </summary>
            <param name="message">A String that describes the error that occurred.</param>
            <param name="innerException">The exception that is the cause of the current exception. </param>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2">
            <summary>
            Represents an X.509 certificate. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the X509Certificate2 class using information from a byte array.
            </summary>
            <param name="rowData">A byte array containing data from an X.509 certificate.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the X509Certificate2 class using a certificate file name.
            </summary>
            <param name="fileName">The name of a certificate file.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.Dispose">
            <summary>
            Releases the unmanaged resources used by the X509Certificate2 class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.Finalize">
            <summary>
            Frees resources used by the X509Certificate2 class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.LoadDer(System.String)">
            <summary>
            Populates an X509Certificate2 object with information from a certificate file.
            </summary>
            <param name="fileName">The name of a certificate file.</param>
            <returns>The X509Certificate2 object.</returns>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.ImportDer(System.String)">
            <summary>
            Populates an X509Certificate2 object with information from a certificate file.
            </summary>
            <param name="fileName">The name of a certificate.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.LoadPfx(System.Byte[],System.String)">
            <summary>
            Populates an X509Certificate2 object with information from a certificate file.
            </summary>
            <param name="data">A byte array that contains data from an X.509 certificate.</param>
            <param name="password">The password required to access the X.509 certificate data.</param>
            <returns>The X509Certificate2 object.</returns>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.LoadPfx(System.String,System.String)">
            <summary>
            Populates an X509Certificate2 object with information from a certificate file.
            </summary>
            <param name="fileName">A byte array that contains data from an X.509 certificate.</param>
            <param name="password">The password required to access the X.509 certificate data.</param>
            <returns>The X509Certificate2 object.</returns>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.ImportPfx(System.Byte[],System.String)">
            <summary>
            Populates an X509Certificate2 object with information from a certificate file.
            </summary>
            <param name="data">A byte array that contains data from an X.509 certificate.</param>
            <param name="password">The password required to access the X.509 certificate data.</param>
            <returns>The X509Certificate2 object.</returns>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.ImportPfx(System.String,System.String)">
            <summary>
            Populates an X509Certificate2 object with information from a certificate file.
            </summary>
            <param name="fileName">A byte array that contains data from an X.509 certificate.</param>
            <param name="password">The password required to access the X.509 certificate data.</param>
            <returns>The X509Certificate2 object.</returns>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore">
            <summary>
            Gets the date in local time on which a certificate becomes valid.
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter">
            <summary>
            Gets the date in local time after which a certificate is no longer valid.
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName">
            <summary>
            Gets the distinguished name of the certificate issuer.
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber">
            <summary>
            Gets the serial number of a certificate.
            </summary>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName">
            <summary>
            Gets the subject distinguished name from a certificate.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.DnsMailClient">
            <summary>
            Represents a mail transfer agent using DNS MX server to send email messages.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.DnsMailClient.#ctor">
            <summary>
            Creates a new instance of DnsMailClient.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.DnsMailClient.Send(Aspose.Network.Mail.MailMessage)">
            <summary>
            Sends the specified email message. 
            </summary>
            <param name="message">A MailMessage that contains the message to send.</param>
            <example>
            The following code example demonstrates using this method.
            [C#]
            <code>
               MailMessage msg = new MailMessage();
               msg.From = "somebody@somedomain.com";
               msg.To = "onebody@somedomain.com, onebody2@somedomain.com";
               msg.Subject = "Hello, DnsMail";
               msg.TextBody = "Send e-mail using DnsMailClient";
               DnsClient client = new DnsClient();        
               client.Send(msg);
            </code>
            [VB.NET]
            <code>
               Dim msg As MailMessage = New MailMessage 
               msg.From = "somebody@somedomain.com" 
               msg.To = "onebody@somedomain.com, onebody2@somedomain.com" 
               msg.Subject = "Hello, DnsMail" 
               msg.TextBody = "Send e-mail using DnsMailClient" 
               Dim client As DnsClient = New DnsClient() 
               client.Send(msg)
            </code>
            </example>
        </member>
        <member name="M:Aspose.Network.Mail.DnsMailClient.Send(System.String,System.String,System.String,System.String)">
            <summary>
            Sends the specified e-mail message. The message sender, recipients, subject, and message body are specified using String objects. 
            </summary>
            <param name="from">A String that contains the address information of the message sender.</param>
            <param name="recipients">A String that contains the addresses that the message is sent to.</param>
            <param name="subject">A String that contains the subject line for the message.</param>
            <param name="body">A String that contains the message body.</param>
        </member>
        <member name="M:Aspose.Network.Mail.DnsMailClient.BeginSend(Aspose.Network.Mail.MailMessage,System.AsyncCallback,System.Object)">
            <summary>
            Begin Sending mail message, paired with EndSend method
            </summary>
            <param name="message">the message to be sent</param>
            <param name="callback">the method you want to call when send complete</param>
            <param name="state">object state</param>
            <returns>The async result.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.DnsMailClient.BeginSend(System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begin Sending a custom mail message
            </summary>
            <param name="from">Sender's address</param>
            <param name="recipients">Receiver's address(s)</param>
            <param name="subject">Subject of the mail message</param>
            <param name="body">Body of the mail message</param>
            <param name="asyncCallback">The async callback.</param>
            <param name="stateObject">The state object.</param>
            <returns>The async result.</returns>
        </member>
        <member name="M:Aspose.Network.Mail.DnsMailClient.EndSend(System.IAsyncResult)">
            <summary>
            End async request ofsending message, paired with BeginSend method
            </summary>
            <param name="asyncResult"></param>
        </member>
        <member name="M:Aspose.Network.Mail.DnsMailClient.Clone">
            <summary>
            Creates a copy of current instance.
            </summary>
            <returns>A copy of DnsMailClient.</returns>
        </member>
        <member name="E:Aspose.Network.Mail.DnsMailClient.SendCompleted">
            <summary>
            Occurs if the an asynchronous message send operation is completed.
            </summary>
        </member>
        <member name="T:Aspose.iCalendar.DateCollection">
            <summary>
            Represents a collection of <see cref="T:System.DateTime"/> values.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Aspose.iCalendar.DateCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.DateTime"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Aspose.iCalendar.ByDayCollection">
            <summary>
            Represents a collection of <see cref="T:Aspose.iCalendar.ByDay"/> objects.
            </summary>
            <remarks>
            <p>Corresponds to the BYDAY part of the recurrence rule.</p>
            <p>The BYDAY rule specifies a list of days of the week for a monthly or yearly recurrence rule.</p>
            <p>For each day of the week, a specific Nth occurrence or all occurrences can be specified.</p>
            </remarks>
        </member>
        <member name="M:Aspose.iCalendar.ByDayCollection.Add(Aspose.iCalendar.ByDay)">
            <summary>
            Adds a <see cref="T:Aspose.iCalendar.ByDay"/> to the collection.
            </summary>
            <param name="byDay">The item to add to the collection.</param>
            <returns>The zero-based index of the newly added item.</returns>
        </member>
        <member name="M:Aspose.iCalendar.ByDayCollection.Add(System.DayOfWeek)">
            <summary>
            Creates and adds a <see cref="T:Aspose.iCalendar.ByDay"/> that represents all occurrences of the day of the week to the collection.
            </summary>
            <param name="dayOfWeek">A day of the week.</param>
            <returns>The zero-based index of the newly added item.</returns>
        </member>
        <member name="M:Aspose.iCalendar.ByDayCollection.Add(System.Int32,System.DayOfWeek)">
            <summary>
            Creates and adds a <see cref="T:Aspose.iCalendar.ByDay"/> to the collection.
            </summary>
            <param name="nthOccurrence">The nth occurrence of the day of the week.</param>
            <param name="dayOfWeek">A day of the week.</param>
            <returns>The zero-based index of the newly added item.</returns>
        </member>
        <member name="M:Aspose.iCalendar.ByDayCollection.Contains(Aspose.iCalendar.ByDay,System.Int32)">
            <summary>
            Not really sure what this does, need to find out and document.
            </summary>
        </member>
        <member name="M:Aspose.iCalendar.ByDayCollection.Contains(System.DayOfWeek)">
            <summary>
            Returns True if the specified day of week is present in the collection.
            </summary>
        </member>
        <member name="P:Aspose.iCalendar.ByDayCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:Aspose.iCalendar.ByDay"/> from the collection.
            </summary>
        </member>
        <member name="T:Aspose.iCalendar.ByDay">
            <summary>
            Represents Nth occurrence (or all occurrences) of the specified day of the week.
            </summary>
            <remarks>
            <p>Corresponds to one day of the week specified in the BYDAY part of a recurrence rule.</p>
            <p>Can be used in a monthly or yearly recurrence rule to specify Nth occurrence (or all occurrences)
            of the specified day of the week in a month or year.</p>
            <p>BYDAY=MO represents all Mondays of the month or year. To represent all occurrences, set NthOccurrence to 0.</p>
            <p>BYDAY=2MO represents 2nd Monday in a month or year.</p>
            <p>BYDAY=-1MO represents the last Monday of a month or year.</p>
            <seealso cref="T:Aspose.iCalendar.ByDayCollection"/>
            </remarks>
        </member>
        <member name="M:Aspose.iCalendar.ByDay.#ctor(System.DayOfWeek)">
             <summary>
             Initializes a new instance of ByDay class.
             </summary>
            <param name="dayOfWeek">A day of the week.</param>
        </member>
        <member name="M:Aspose.iCalendar.ByDay.#ctor(System.Int32,System.DayOfWeek)">
             <summary>
             Initializes a new instance of ByDay class.
             </summary>
            <param name="nthOccurrence">The nth occurrence of the day of the week.</param>
            <param name="dayOfWeek">A day of the week.</param>
        </member>
        <member name="P:Aspose.iCalendar.ByDay.NthOccurrence">
            <summary>
            Gets or sets the nth occurrence of the day of the week.
            </summary>
            <remarks>
            <p>Valid range for this property is from -53 to 53.</p>
            <p>Positive values represent Nth occurrence from the beginning of the period, for example NthOccurrence = 1,
            represents 1st occurrence of the day of the week.</p>
            <p>Negative values represent Nth occurrence from the end of the period, for example NthOccurrence = -1,
            represents last occurrence of the day of the week.</p>
            <p>When NthOccurrence is zero, it represents all occurrences of the specified day of the week.
            For example, BYDAY=MO has NthOccurrence zero and represents all Mondays in the set.</p>
            </remarks>
        </member>
        <member name="P:Aspose.iCalendar.ByDay.DayOfWeek">
            <summary>
            Gets or sets the day of the week.
            </summary>
        </member>
        <member name="P:Aspose.iCalendar.ByDay.IsAllOccurrences">
            <summary>
            Returns True when NthOccurrence is zero (meaning all occurrences of this day of week).
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.TimestampReplyMessage">
            <summary>
            Represents the timestamp reply message in ICMP protocol.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.TimestampReplyMessage.#ctor">
            <summary>
            Creates a new instance of TimestampReplyMessage with default parameters.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampReplyMessage.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampReplyMessage.OriginateTimestamp">
            <summary>
            Gets or sets originate timestamp.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampReplyMessage.ReceiveTimestamp">
            <summary>
            Gets or sets receive timestamp.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampReplyMessage.SequenceNumber">
            <summary>
            Gets or sets sequence number.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampReplyMessage.TransmitTimestamp">
            <summary>
            Gets or sets transmit timestamp.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.TimestampMessage">
            <summary>
            Represents the timstamp message in ICMP protocol.
            </summary>
        </member>
        <member name="M:Aspose.Network.Icmp.TimestampMessage.#ctor">
            <summary>
            Creates a new instance of TimestampMessage with default parameters.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampMessage.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampMessage.OriginateTimestamp">
            <summary>
            Gets or sets originate timestamp.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampMessage.ReceiveTimestamp">
            <summary>
            Gets or sets receive timestamp.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampMessage.SequenceNumber">
            <summary>
            Gets or sets sequence number.
            </summary>
        </member>
        <member name="P:Aspose.Network.Icmp.TimestampMessage.TransmitTimestamp">
            <summary>
            Gets or sets transmit timestamp.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.IcmpException">
            <summary>
            Defines the base class for predefined exceptions in the Aspose.Network.Icmp namespace.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiMessageParseException">
            <summary>
            This exception is thrown when errors occur in parsing MapiMessage.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageParseException.#ctor">
            <summary>
            Initializes a new instance of the MapiMessageParseException class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MapiMessageParseException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiMessageParseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MapiMessageParseException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Aspose.Network.Dns.PXResourceRecord">
            <summary>
            Represents a PX DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.PXResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.PXResourceRecord">PXResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.PXResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.PXResourceRecord">PXResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.PXResourceRecord.Preference">
            <summary>
            Gets or sets the preference
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.PXResourceRecord.MapX400">
            <summary>
            Gets or sets the MapX400
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.PXResourceRecord.Map822">
            <summary>
            Gets or sets the Map822
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.NullResourceRecord">
            <summary>
            Represents a NULL DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.NullResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.NullResourceRecord">NullResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.NullResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.NullResourceRecord">NullResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="T:Aspose.Network.Dns.MINFOResourceRecord">
            <summary>
            Represents a MINFO DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MINFOResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MINFOResourceRecord">MINFOResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MINFOResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MINFOResourceRecord">MINFOResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.MINFOResourceRecord.ErrorMailbox">
            <summary>
            Gets or sets the error mail box
            </summary>
        </member>
        <member name="P:Aspose.Network.Dns.MINFOResourceRecord.ResponsibleMailbox">
            <summary>
            Gets or sets the responsible mail box
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiRecipientPropertyStream">
            <summary>
            Represents the property stream of recipient object.
            </summary>
        </member>
        <member name="M:Aspose.Network.Outlook.MapiRecipientPropertyStream.GetContent">
            <summary>
            Gets the content.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Aspose.Network.Mail.MailSensitivity">
            <summary>
            Mail Priority can be "normal", "urgent" or "non-urgent" and can influence transmission speed and delivery. 
            Defined in RFC 1327
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MailSensitivity.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MailSensitivity.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MailSensitivity.Personal">
            <summary>
            Personal.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MailSensitivity.Private">
            <summary>
            Private.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.MailSensitivity.CompanyConfidential">
            <summary>
            CompanyConfidential.
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern">
            <summary>
            Represents the monly recurrence pattern.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern"/> class.
            </summary>
            <param name="startOffset">The start offset.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="M:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern.#ctor(Aspose.Network.Mail.Calendaring.DayPosition,Aspose.Network.Mail.Calendaring.CalendarDay,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern"/> class.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="startDay">The start day.</param>
            <param name="interval">The interval.</param>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern.StartDay">
            <summary>
            Gets or sets the start day.
            </summary>
            <value>The start day.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern.StartOffset">
            <summary>
            Gets or sets the start offset.
            </summary>
            <value>The start offset.</value>
        </member>
        <member name="P:Aspose.Network.Mail.Calendaring.MonthlyRecurrencePattern.StartPosition">
            <summary>
            Gets or sets the start position.
            </summary>
            <value>The start position.</value>
        </member>
        <member name="T:Aspose.Network.Mail.Calendaring.CalendarDay">
            <summary>
            Represents calendar day.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.Day">
             <summary>
            Day. 
             </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.Friday">
            <summary>
            Friday.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.Monday">
            <summary>
            Monday.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.Saturday">
            <summary>
            Saturday.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.Sunday">
            <summary>
            Sunday.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.Thursday">
            <summary>
            Thursday.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.Tuesday">
            <summary>
            Tuesday.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.Wednesday">
            <summary>
            Wednesday.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.WeekDay">
            <summary>
            WeekDay.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.Calendaring.CalendarDay.WeekendDay">
            <summary>
            WeekendDay.
            </summary>
        </member>
        <member name="T:Aspose.Windows.Forms.License">
            <summary>
            Provides methods to license the component.
            </summary>
            <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code>
            </ms>
            
            <java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code>
            </java>
            
            </example>
        </member>
        <member name="M:Aspose.Windows.Forms.License.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Windows.Forms.License"/> class.
            </summary>
        </member>
        <member name="M:Aspose.Windows.Forms.License.SetLicense(System.IO.Stream)">
            <summary>
            Sets the license.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Aspose.Windows.Forms.License.SetLicense(System.String)">
            <summary>
            Sets the license.
            </summary>
            <param name="licenseName">Name of the license.</param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Recur">
            <summary> Defines a recurrence.</summary>
            <version>  2.0
            </version>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Recur.#ctor(System.String)">
            <summary>
            Constructs a new instance from the specified string value.
            </summary>
            <param name="value">The value.</param>
            <throws>  ParseException thrown when the specified string contains an invalid representation of an UNTIL date value </throws>
            <throws>  IllegalArgumentException if the <code>frequency</code> is <code>null</code> or unrecognized. </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Recur.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Recur"/> class.
            </summary>
            <param name="frequency">The frequency.</param>
            <param name="until">The until.</param>
            <throws>  IllegalArgumentException if the <code>frequency</code> is <code>null</code> or unrecognized. </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Recur.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Recur"/> class.
            </summary>
            <param name="frequency">The frequency.</param>
            <param name="count">The count.</param>
            <throws>  IllegalArgumentException if the <code>frequency</code> is <code>null</code> or unrecognized. </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Recur.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.DayList">
            <summary>
            Gets the day list.
            </summary>
            <value>The day list.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.HourList">
            <summary>
            Gets the hour list.
            </summary>
            <value>The hour list.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.MinuteList">
            <summary>
            Gets the minute list.
            </summary>
            <value>The minute list.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.MonthDayList">
            <summary>
            Gets the month day list.
            </summary>
            <value>The month day list.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.MonthList">
            <summary>
            Gets the month list.
            </summary>
            <value>The month list.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.SecondList">
            <summary>
            Gets the second list.
            </summary>
            <value>The second list.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.SetPosList">
            <summary>
            Gets the set pos list.
            </summary>
            <value>The set pos list.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.WeekNoList">
            <summary>
            Gets the week no list.
            </summary>
            <value>The week no list.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.YearDayList">
            <summary>
            Gets the year day list.
            </summary>
            <value>The year day list.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.ExperimentalValues">
            <summary>
            Gets the experimental values.
            </summary>
            <value>The experimental values.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.Frequency">
            <summary>
            Gets or sets the frequency.
            </summary>
            <value>The frequency.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.Interval">
            <summary>
            Gets or sets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.Until">
            <summary>
            Gets or sets the until.
            </summary>
            <value>The until.</value>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.Recur.WeekStartDay">
            <summary>
            Gets or sets the week start day.
            </summary>
            <value>The week start day.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Transp">
            <summary> Defines a TRANSP iCalendar component property.
            
            <pre>
            4.8.2.7 Time Transparency
            
            Property Name: TRANSP
            
            Purpose: This property defines whether an event is transparent or not
            to busy time searches.
            
            Value Type: TEXT
            
            Property Parameters: Non-standard property parameters can be
            specified on this property.
            
            Conformance: This property can be specified once in a &quot;VEVENT&quot;
            calendar component.
            
            Description: Time Transparency is the characteristic of an event that
            determines whether it appears to consume time on a calendar. Events
            that consume actual time for the individual or resource associated
            with the calendar SHOULD be recorded as OPAQUE, allowing them to be
            detected by free-busy time searches. Other events, which do not take
            up the individual's (or resource's) time SHOULD be recorded as
            TRANSPARENT, making them invisible to free-busy time searches.
            
            Format Definition: The property is specified by the following
            notation:
            
            transp     = &quot;TRANSP&quot; tranparam &quot;:&quot; transvalue CRLF
            
            tranparam  = *(&quot;;&quot; xparam)
            
            transvalue = &quot;OPAQUE&quot;      ;Blocks or opaque on busy time searches.
            / &quot;TRANSPARENT&quot; ;Transparent on busy time searches.
            ;Default value is OPAQUE
            
            Example: The following is an example of this property for an event
            that is transparent or does not block on free/busy time searches:
            
            TRANSP:TRANSPARENT
            
            The following is an example of this property for an event that is
            opaque or blocks on free/busy time searches:
            
            TRANSP:OPAQUE
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Transp.Opaque">
            <summary>
            Opaque.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Properties.Transp.Transparent">
            <summary>
            Transparent.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Transp.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Transp.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Transp"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Transp.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Transp"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Transp.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Transp.GetValue">
            <summary>
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Transp.ImmutableTransp.#ctor(System.String)">
            <param name="value">
            </param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.RecurrenceId">
            <summary> Defines a RECURRENCE-ID iCalendar component property.
            
            <pre>
            4.8.4.4 Recurrence ID
            
            Property Name: RECURRENCE-ID
            
            Purpose: This property is used in conjunction with the &quot;UID&quot; and
            &quot;SEQUENCE&quot; property to identify a specific instance of a recurring
            &quot;VEVENT&quot;, &quot;VTODO&quot; or &quot;VJOURNAL&quot; calendar component. The property
            value is the effective value of the &quot;DTSTART&quot; property of the
            recurrence instance.
            
            Value Type: The default value type for this property is DATE-TIME.
            The time format can be any of the valid forms defined for a DATE-TIME
            value type. See DATE-TIME value type definition for specific
            interpretations of the various forms. The value type can be set to
            DATE.
            
            Property Parameters: Non-standard property, value data type, time
            zone identifier and recurrence identifier range parameters can be
            specified on this property.
            
            Conformance: This property can be specified in an iCalendar object
            containing a recurring calendar component.
            
            Description: The full range of calendar components specified by a
            recurrence set is referenced by referring to just the &quot;UID&quot; property
            value corresponding to the calendar component. The &quot;RECURRENCE-ID&quot;
            property allows the reference to an individual instance within the
            recurrence set.
            
            If the value of the &quot;DTSTART&quot; property is a DATE type value, then the
            value MUST be the calendar date for the recurrence instance.
            
            The date/time value is set to the time when the original recurrence
            instance would occur; meaning that if the intent is to change a
            Friday meeting to Thursday, the date/time is still set to the
            original Friday meeting.
            
            The &quot;RECURRENCE-ID&quot; property is used in conjunction with the &quot;UID&quot;
            and &quot;SEQUENCE&quot; property to identify a particular instance of a
            recurring event, to-do or journal. For a given pair of &quot;UID&quot; and
            &quot;SEQUENCE&quot; property values, the &quot;RECURRENCE-ID&quot; value for a
            recurrence instance is fixed. When the definition of the recurrence
            set for a calendar component changes, and hence the &quot;SEQUENCE&quot;
            property value changes, the &quot;RECURRENCE-ID&quot; for a given recurrence
            instance might also change.The &quot;RANGE&quot; parameter is used to specify
            the effective range of recurrence instances from the instance
            specified by the &quot;RECURRENCE-ID&quot; property value. The default value
            for the range parameter is the single recurrence instance only. The
            value can also be &quot;THISANDPRIOR&quot; to indicate a range defined by the
            given recurrence instance and all prior instances or the value can be
            &quot;THISANDFUTURE&quot; to indicate a range defined by the given recurrence
            instance and all subsequent instances.
            
            Format Definition: The property is defined by the following notation:
            
            recurid    = &quot;RECURRENCE-ID&quot; ridparam &quot;:&quot; ridval CRLF
            
            ridparam   = *(
            
            ; the following are optional,
            ; but MUST NOT occur more than once
            
            (&quot;;&quot; &quot;VALUE&quot; &quot;=&quot; (&quot;DATE-TIME&quot; / &quot;DATE)) /
            (&quot;;&quot; tzidparam) / (&quot;;&quot; rangeparam) /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            (&quot;;&quot; xparam)
            
            )
            
            ridval     = date-time / date
            ;Value MUST match value type
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RecurrenceId.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RecurrenceId.#ctor(Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new RECURRENCE_ID property initialised with the specified timezone.
            </summary>
            <param name="timezone">initial timezone</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RecurrenceId.#ctor(System.String)">
            <summary>
            Creates a new instance initialised with the parsed value.
            </summary>
            <param name="value">the RECURRENCE_ID value string to parse</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RecurrenceId.#ctor(System.String,Aspose.Network.iCalendar.ObjectModel.TimeZone)">
            <summary>
            Creates a new RECURRENCE_ID property initialised with the specified timezone and value.
            </summary>
            <param name="value">a string representation of a RECURRENCE_ID value</param>
            <param name="timezone">initial timezone</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RecurrenceId.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RecurrenceId"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RecurrenceId.#ctor(Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RecurrenceId.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.Date)">
            <summary>
            Constructor. Date or Date-Time format is determined based on the presence of a VALUE parameter.
            </summary>
            <param name="list">The list.</param>
            <param name="date">The date.</param>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Country">
            <summary> Defines a REGION iCalendar component property.</summary>
            <author> 
            </author>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Country.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Country.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Country"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Country.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Country"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Country.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Country.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.XParameter">
            <summary>
            Defines an extension parameter.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.XParameter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.XParameter"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.XParameter.GetValue">
            <summary>
            Get the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.FbType">
            <summary> Defines a Free/Busy Time Type parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.FbType.Free">
            <summary>
            Free.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.FbType.Busy">
            <summary>
            Busy.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.FbType.BusyUnavailable">
            <summary>
            BusyUnavailable.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.FbType.BusyTentative">
            <summary>
            BusyTentative.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.FbType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.FbType"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.FbType.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.IndexedComponentList">
            <summary> Provides indexing of components on a specific property.</summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.IndexedComponentList.#ctor(Aspose.Network.iCalendar.ObjectModel.ComponentCollection,System.String)">
            <summary> Creates a new instance indexed on properties with the specified name.</summary>
            <param name="list">a list of components
            </param>
            <param name="propertyName">the name of the properties to index on
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.IndexedComponentList.GetComponents(System.String)">
            <summary> Returns a list of components containing a property with the
            specified value.
            </summary>
            <param name="propertyValue">the value of the property contained in the
            returned components
            </param>
            <returns> a component list
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.IndexedComponentList.GetComponent(System.String)">
            <summary>
            Returns the first component containing a property with the specified
            value.
            </summary>
            <param name="propertyValue">the value of the property identified in the returned
            component</param>
            <returns>
            a component or null if no component is found containing a property
            with the specified value
            </returns>
        </member>
        <member name="T:Aspose.Network.Verify.ValidationPolicy">
            <summary>
            Presents the policy of validating email address.
            </summary>
        </member>
        <member name="F:Aspose.Network.Verify.ValidationPolicy.SyntaxOnly">
            <summary>
            Validating the syntax of the email address.
            </summary>
        </member>
        <member name="F:Aspose.Network.Verify.ValidationPolicy.SyntaxAndDomain">
            <summary>
            Validating the syntax of the email address firstly, and then validate the domain of the email.
            </summary>
        </member>
        <member name="F:Aspose.Network.Verify.ValidationPolicy.MailServer">
            <summary>
            Validating the email address by trying to connet to the mail server. 
            </summary>
        </member>
        <member name="T:Aspose.Network.Mail.SmtpSslSecurityMode">
            <summary>
            Represents the SSL security mode for SmtpClient.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.SmtpSslSecurityMode.Explicit">
            <summary>
            Explicit mode.
            </summary>
        </member>
        <member name="F:Aspose.Network.Mail.SmtpSslSecurityMode.Implicit">
            <summary>
            Implicit mode.
            </summary>
        </member>
        <member name="T:Aspose.Network.Logging.LoggerManager">
            <summary>
            Static manager that controls the creation of loggers. 
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.LoggerManager.GetLogger(System.String)">
            <summary>
            Gets a logger by the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns>The logger.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.LoggerManager.AddLogger(System.String,Aspose.Network.Logging.Logger)">
            <summary>
            Adds a logger to the LoggerManager with specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Aspose.Network.Logging.LoggerManager.RemoveLogger(System.String)">
            <summary>
            Removes a logger with the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Aspose.Network.Logging.LoggerManager.CreateLogger(System.String,Aspose.Network.Logging.Appender)">
            <summary>
            Creates a logger with specified name and appender.
            </summary>
            <param name="name">The name.</param>
            <param name="appender">The appender.</param>
            <returns>The created logger.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.LoggerManager.CreateLogger(System.String,Aspose.Network.Logging.LogLevel,Aspose.Network.Logging.Appender)">
            <summary>
            Creates a logger with specified name and appender.
            </summary>
            <param name="name">The name.</param>
            <param name="severity">The severity.</param>
            <param name="appender">The appender.</param>
            <returns>The created logger.</returns>
        </member>
        <member name="T:Aspose.Network.Logging.SimpleFormatter">
            <summary>
            Represents the default implementation of IFormatter interface.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.SimpleFormatter.#ctor">
            <summary>
            Creates a new SimpleFormatter instance.
            </summary>
        </member>
        <member name="M:Aspose.Network.Logging.SimpleFormatter.#ctor(System.String,System.String)">
            <summary>
            Creates a new SimpleFormatter instance.
            </summary>
            <param name="header">The header.</param>
            <param name="footer">The footer.</param>
        </member>
        <member name="M:Aspose.Network.Logging.SimpleFormatter.Format(Aspose.Network.Logging.LogEntry)">
            <summary>
            Formats a log entry and return a string to be outputted.
            </summary>
            <param name="entry">Log entry to format.</param>
            <returns>String representing the log entry.</returns>
        </member>
        <member name="M:Aspose.Network.Logging.SimpleFormatter.Format(System.DateTime)">
            <summary>
            Formats a datetime and return a string to be outputted.
            </summary>
            <param name="date">The datetime.</param>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.Readonly">
            <summary>
            Read-only
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.Hidden">
            <summary>
            Hidden
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.Archive">
            <summary>
            File should be archived.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.Device">
            <summary>
            Device
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.Temporary">
            <summary>
            File is temporary (should be kept in cache and not 
            written to disk if possible)
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.SparseFile">
            <summary>
            Sparse file.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.ReparsePoint">
            <summary>
            Reparse point.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.Compressed">
            <summary>
            Compress file contents.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.NotContentIndexed">
            <summary>
            File should not be indexed by the content indexing service. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.Encrypted">
            <summary>
            Encrypt file.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.WriteThrough">
            <summary>
            The system writes through any intermediate cache and goes directly to disk. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.NoBuffering">
            <summary>
            The system opens a file with no system caching
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.DeleteOnClose">
            <summary>
            Delete file after it is closed.
            </summary>
        </member>
        <member name="F:Aspose.Network.Logging.Win32FileAttributes.PosixSemantics">
            <summary>
            A file is accessed according to POSIX rules.
            </summary>
        </member>
        <member name="T:Aspose.Network.Icmp.SendCompletedEventHandler">
            <summary>
            Represents the method that will handle the SendCompleted event of an IcmpClient object.
            </summary>
        </member>
        <member name="T:Aspose.Network.Ftp.TransferProgressEventArgs">
            <summary>
            Represents the event in the progress of transfering.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.TransferProgressEventArgs.TransferingBytes">
            <summary>
            Gets the number of bytes transfering.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.TransferProgressEventArgs.TotalTransferedBytes">
            <summary>
            Gets the total number of bytes transfered.
            </summary>
        </member>
        <member name="P:Aspose.Network.Ftp.TransferProgressEventArgs.TransferStatus">
            <summary>
            Gets the transfer status of the event.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiRecipientType">
            <summary>
            Represent the PR_RECIPIENT_TYPE property which contains the recipient type for a message recipient.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiRecipientType.MAPI_BCC">
            <summary>
            The recipient is a blind carbon copy (BCC) recipient. Primary and carbon copy recipients are unaware of the existence of BCC recipients.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiRecipientType.MAPI_CC">
            <summary>
            The recipient is a carbon copy (CC) recipient, a recipient that receives a message in addition to the primary recipients.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiRecipientType.MAPI_ORIG">
            <summary>
            The recipient sent the message.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiRecipientType.MAPI_P1">
            <summary>
            The recipient did not successfully receive the message on the previous attempt. This is a resend of an earlier transmission.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiRecipientType.MAPI_SUBMITTED">
            <summary>
            The recipient has already received the message and does not need to receive it again. This is a resend of an earlier transmission. This flag is set in conjunction with the MAPI_TO, MAPI_CC, and MAPI_BCC values.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiRecipientType.MAPI_TO">
            <summary>
            The recipient is a primary (To) recipient. Clients are required to handle primary recipients; all other types are optional.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiRecipientType.Unknown">
            <summary>
            Unknow.
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiObjectType">
            <summary>
            Represents the mapi object type.
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_ABCONT">
            <summary>
            MAPI_ABCONT
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_ADDRBOOK">
            <summary>
            MAPI_ADDRBOOK
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_ATTACH">
            <summary>
            MAPI_ATTACH
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_DISTLIST">
            <summary>
            MAPI_DISTLIST
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_FOLDER">
            <summary>
            MAPI_FOLDER
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_FORMINFO">
            <summary>
            MAPI_FORMINFO
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_MAILUSER">
            <summary>
            MAPI_MAILUSER
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_MESSAGE">
            <summary>
            MAPI_MESSAGE
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_PROFSECT">
            <summary>
            MAPI_PROFSECT
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_SESSION">
            <summary>
            MAPI_SESSION
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_STATUS">
            <summary>
            MAPI_STATUS
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.MAPI_STORE">
            <summary>
            MAPI_STORE
            </summary>
        </member>
        <member name="F:Aspose.Network.Outlook.MapiObjectType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Aspose.Network.Outlook.MapiRecipient">
            <summary>
            Represents the recipient information in the Microsoft Outlook Message.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiRecipient.DisplayName">
            <summary>
            The display name of the message recipient or sender. 
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiRecipient.AddressType">
            <summary>
            The type of the address of the message recipient or sender.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiRecipient.EmailAddress">
            <summary>
            The email address of the message recipient or sender.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiRecipient.OrganizationEmailAddress">
            <summary>
            Gets the organization email address.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiRecipient.RecipientType">
            <summary>
            The type of the recipient or sender.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiRecipient.RecipientClass">
            <summary>
            Gets the type of recipent.
            </summary>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiRecipient.PropertyStream">
            <summary>
            Gets the property stream.
            </summary>
            <value>The property stream.</value>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiRecipient.SubStorages">
            <summary>
            Gets the sub storages.
            </summary>
            <value>The sub storages.</value>
        </member>
        <member name="P:Aspose.Network.Outlook.MapiRecipient.Content">
            <summary>
            Gets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:Aspose.Network.Dns.MRResourceRecord">
            <summary>
            Represents a MR DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MRResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MRResourceRecord">MRResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MRResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MRResourceRecord">MRResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.MRResourceRecord.NewName">
            <summary>
            Gets or sets the new name
            </summary>
        </member>
        <member name="T:Aspose.Network.Dns.MGResourceRecord">
            <summary>
            Represents a MG DNS resource record
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MGResourceRecord.#ctor">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MGResourceRecord">MGResourceRecord</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Dns.MGResourceRecord.#ctor(System.Byte[],System.Int32@,System.Int32@)">
            <summary>
            Initialize a new instance of class <see cref="T:Aspose.Network.Dns.MGResourceRecord">MGResourceRecord</see>.
            </summary>
            <param name="buffer">The arry of unsigned bytes from which to create.</param>
            <param name="index">The index into buffer at which this resource record begins</param>
            <param name="count">The length of the bytes to create this resource record</param>
        </member>
        <member name="P:Aspose.Network.Dns.MGResourceRecord.MailBox">
            <summary>
            Gets or sets the mail box
            </summary>
        </member>
        <member name="T:Aspose.Network.Pop3.Pop3Client">
            <summary>
            <p>The Pop3Client calss allows applications to manage E-Mail box by using the Post Office Protocol Version 3 (POP3).</p>
            
            <p>The Pop3Client class fully supports the Pop3 commands and functions.</p>
            
            <p>The Pop3Client class fully supports the Asynchronous and Synchronous programming model.</p>
            
            <p>The Pop3Client the major entry for the developers who want to add Pop3 management to their .Net applications.</p>
            </summary>
            <example>
            <p>The following exmaple demonstrates how to use Pop3Client class to fetch e-mail messages from the server.</p>
            [C#]
            <code>
            //create Pop3client with specified server, username and password.
            Pop3client client = new Pop3client("pop3.yourdomain.com", "username", "password");
            try
            {
            	//connect and login to the pop3 server
            	client.Connect(true);
            	//save the message
            	client.SaveMessage(1, "file.eml");
            }
            catch (Pop3Exception ex)
            {
            	System.Diagnostics.Debug.WriteLine(ex.ToString());
            }
            </code>
            [VB.NET]
            <code>
            'create Pop3client with specified server, username and password.
            Dim client As Pop3client =  New Pop3client("pop3.yourdomain.com","username","password") 
            Try
            	'connect and login to the pop3 server
            	client.Connect(True)
            	'save the message
            	client.SaveMessage(1, "file.eml")
            Catch ex As Pop3Exception
            	System.Diagnostics.Debug.WriteLine(ex.ToString())
            End Try
            </code>
            </example>
            <note>
            Post Office Protocol Version 3 (POP3) is defined in RFC 1939, which is available at http://www.ietf.org.
            </note>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.#ctor">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Pop3.Pop3Client">Pop3Client</see>.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.#ctor(System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Pop3.Pop3Client">Pop3Client</see>.
            </summary>
            <param name="host">The host address of the Pop3 server</param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.#ctor(System.String,System.Int32)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Pop3.Pop3Client">Pop3Client</see>.
            </summary>
            <param name="host">The host address of the Pop3 server</param>
            <param name="port">The port of the Pop3 server</param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Pop3.Pop3Client">Pop3Client</see>.
            </summary>
            <param name="host">The host address of the Pop3 server</param>
            <param name="username">The username used to log into the Pop3 server</param>
            <param name="password">The password used to log into the Pop3 server</param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Initialize a new instance of the class <see cref="T:Aspose.Network.Pop3.Pop3Client">Pop3Client</see>.
            </summary>
            <param name="host">The host address of the Pop3 server</param>
            <param name="port">The port of the Pop3 server</param>
            <param name="username">The username used to log into the Pop3 server</param>
            <param name="password">The password used to log into the Pop3 server</param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Connect">
            <summary>
            Set up a connection between local client and the remote Pop3 server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Connect(System.Boolean)">
            <summary>
            Set up a connection between local client and the reomote Pop3 server.
            </summary>
            <param name="autoLogin">Determines whether to login the Pop3 server, after connected.</param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.DeleteAllMessages">
            <summary>
            Marks deleted to all the messages in the mailbox 
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.DeleteMessage(System.Int32)">
            <summary>
            Marks deleted to the message in the mailbox.
            </summary>
            <param name="sequenceNumber"></param>   
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.KeepAlive">
            <summary>
            Keeps the connection alive
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Disconnect">
            <summary>
            Diconnect to the Pop3 Server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.GetMailboxSize">
            <summary>
            Gets the size of the mailbox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.GetMailboxInfo">
            <summary>
            Gets the mailbox status info.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.FetchMessage(System.Int32)">
             <summary>
             Fetch mail messages from pop3 server
             </summary>
             <example>
             <p>The example demonstrates how to fetch E-Mail messages from Pop3 server.</p>
             [C#]
             <code>
            	Aspose.Network.Pop3.Pop3Client client = null;
            	client = new Aspose.Network.Pop3.Pop3Client();
            	client.Host = "www.your.pop3.host";
            	client.Username = "user";
            	client.Password = "password";
            
            	Aspose.Network.Mail.MailMessage msg = null;        
            	client.Connect(true);
            	int messageCount = client.GetMessageCount();
            	for (int i = 1; i &lt;= messageCount; i++)
            	{
            	    msg = client.FetchMessage(i);
            	    msg.Save("test.eml");
            	}
            	</code>
            	[VB.NET]
            	<code>
            	Dim client As Aspose.Network.Pop3.Pop3Client
            	client = New Aspose.Network.Pop3.Pop3Client()
            	client.Host = "gzmail.bamboonetworks.com"
            	client.Username = "andrew.chen"
            	client.Password = "12345678"
            
            	Dim msg As Aspose.Network.Mail.MailMessage
            	client.Connect(True)
            	Dim messageCount As Integer = client.GetMessageCount()
            	For i As Integer = 1 To messageCount
            	    msg = client.FetchMessage(messageCount)
            	    msg.Save("test.eml")
            	Next
             </code>
             </example>
             <param name="sequenceNumber">an identifier stands for this message</param>
             <returns>Aspose.Network.Mail.MailMessage</returns>        
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.SaveMessage(System.Int32,System.IO.Stream)">
            <summary>
            Save message to a stream
            </summary>
            <param name="sequenceNumber">an identifier stands for the message</param>
            <param name="output"></param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.SaveMessage(System.Int32,System.String)">
             <summary>
             Save message to a file
             </summary>
             <param name="sequenceNumber">an identifier stands for the message</param>
             <param name="fileName">the file name you want to save</param>
             <example>
             <code>
             [C#]
                Aspose.Network.Pop3.Pop3Client client = null;
                client = new Aspose.Network.Pop3.Pop3Client();
                client.Host = "www.your.pop3.host";
                client.Username = "username";
                client.Password = "password";
                client.Connect(true);
            
                int messageCount = client.GetMessageCount();
            
                for (int i = 1; i &lt;= messageCount; i++)
                {
                    client.SaveMessage(i, "test" + i + ".eml");
                }
             
             [VB.NET]
                Dim client As Aspose.Network.Pop3.Pop3Client
                client = New Aspose.Network.Pop3.Pop3Client()
                client.Host = "www.your.pop3.host"
                client.Username = "username"
                client.Password = "password"
                client.Connect(True)
            
                Dim messageCount As Integer = client.GetMessageCount()
            
                For i As Integer = 1 To messageCount
                  client.SaveMessage(i, "test" + i + ".eml")
                Next
             
             </code>
             </example>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.GetMessageCount">
            <summary>
            Get total mail messges number, starting from 1
            </summary>
            <returns>mail messages number</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.GetMessageHeaders(System.Int32)">
            <summary>
            Get a mail message's headers
            </summary>
            <param name="sequenceNumber">an identifier stands for this message</param>
            <returns>MimeHeaderCollection</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.ListMessage(System.Int32)">
            <summary>
            Get infomation about a specific mail message
            </summary>
            <param name="sequenceNumber">an identifier stands for this mail message</param>
            <returns>A Pop3MessageInfo contains the information of the message.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.ListMessage(System.Int32,System.Boolean)">
            <summary>
            Get infomation about a specific mail message
            </summary>
            <param name="sequenceNumber">an identifier stands for this mail message</param>
            <param name="ignoreHeaders">whether to retrieve headers</param>
            <returns>A Pop3MessageInfo contains the information of the message.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.GetMessageSize(System.Int32)">
            <summary>
            Get the size of an mail message with specified sequence number, measured in bytes
            </summary>
            <param name="sequenceNumber">The sequence number of the mail message.</param>
            <returns>The size of the message.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.RetrieveMessageSize(System.Int32)">
            <summary>
            Get the size of an mail message with specified sequence number, measured in bytes
            </summary>
            <param name="sequenceNumber">The sequence number of the mail message.</param>
            <returns>The size of the message.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.ListMessages(System.Boolean)">
            <summary>
            Get infomation about all the mail messages
            </summary>
            <param name="ignoreHeaders">Whether to include headers</param>
            <returns>A collection of message.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.ListMessages">
            <summary>
            Get the infomation about all the mail messages, including headers.
            </summary>
            <returns>A collection of message.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.GetMessageUniqueId(System.Int32)">
            <summary>
            Get the unique id of the message with specified sequence number.
            </summary>
            <param name="sequenceNumber">The sequence number of the message.</param>
            <returns>A string contains the unique id.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.ListIdentifier(System.Int32)">
            <summary>
            Obsoleted. Use the GetMessageUniqueId method instead.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.ListIdentifiers">
            <summary>
            Obsoleted. Use ListMessages method instead.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Login">
            <summary>
            Log in to Pop3 server
            </summary>  
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Login(Aspose.Network.Pop3.Pop3Authentication)">
            <summary>
            Log in to Pop3 server with specified authentication method
            </summary>
            <param name="authenticationMethod"></param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.CommitDeletes">
            <summary>
            Commit the deletes to the Pop3 server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.CommitDeletes(System.Int32)">
            <summary>
            Commit the deletes to the Pop3 server.
            </summary>
            <param name="sleep">The amount of time to sleep.</param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.CancelDeletes">
            <summary>
            Cancel the delete opertions.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.UndeleteMessages">
            <summary>
            Cancel the pending deletes.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Logout">
            <summary>
            Obsoleted. Use Disconnect method instead.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.CheckMessages">
            <summary>
            Obsoleted. Use GetMessageCount method instead.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Quit">
            <summary>
            Sends the QUIT command to the Pop3 server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Reset">
            <summary>
            Sends the RESET command to the Pop3 server.
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Top(System.Int32,System.Int32)">
            <summary>
            Sends the TOP command with specified sequence number and line count.
            </summary>
            <param name="sequenceNumber">The sequence number of the message.</param>
            <param name="lines">The line count.</param>
            <returns>A string contains the top lines.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Pop3Client, and optionally disposes of the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to releases only unmanaged resources.</param>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginConnect(System.AsyncCallback,System.Object)">
            <summary>
            Begin async request connecting to pop3 server
            </summary>
            <param name="callback">the method you want to be called when connect complete</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginConnect(System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of connecting to pop3 server
            </summary>
            <param name="autoLogin">whether login when connected</param>
            <param name="callback">the method you want to be called when connect complete</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginDeleteMessage(System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of deleting a mail message
            </summary>
            <param name="sequenceNumber">an identifier stands for this mail message</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of disconnecting from pop3 server 
            </summary>
            <param name="rollbackChanges">whether cancel former operations</param>
            <param name="callback">the method you want to be called when disconnect complete</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginGetMailboxSize(System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of getting mail box size
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginFetchMessage(System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of fetching mail messages from pop3 server
            </summary>
            <param name="sequenceNumber">an identifier stands for this mail message</param>
            <param name="callback">the method you want to be called when fetch complete</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginSaveMessage(System.Int32,System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of fetching mail message and save it to output stream
            </summary>
            <param name="sequenceNumber">an identifier stands for this mail</param>
            <param name="output">the output stream</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginSaveMessage(System.Int32,System.String,System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of fetching mail message and save it to file
            </summary>
            <param name="sequenceNumber">an identifier stands for this mail</param>
            <param name="fileName">the file name you want to save as</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginGetMessageCount(System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of getting mail message's number
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginListMessage(System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Begins an async request of listing the mail message, paried with EndListMessage.
            </summary>
            <param name="sequenceNumber">The sequence number of the mail message.</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginListMessages(System.AsyncCallback,System.Object)">
            <summary>
            Begins an async request of listing the mail message, paried with EndListMessages.
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginLogin(Aspose.Network.Pop3.Pop3Authentication,System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of logging onto pop3 server
            </summary>
            <param name="method">pop3 authentication method</param>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginLogin(System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of logging onto pop3 server
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.BeginCancelDeletes(System.AsyncCallback,System.Object)">
            <summary>
            Begin async request of sending the command of cancel delete
            </summary>
            <param name="callback">The AsyncCallback delegate.</param>
            <param name="state">A state object, specified by the application, that contains information associated with the asynchronous operation. </param>
            <returns>The IAsyncResult that identifies the posted asynchronous request.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndConnect(System.IAsyncResult)">
            <summary>
            End async request of Connect, paired with BeginConnect
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndDelete(System.IAsyncResult)">
            <summary>
            End async request of Delete, paired with BeginDelete
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndDisconnect(System.IAsyncResult)">
            <summary>
            End async request of disconnect, paired with BeginDisconnect
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndGetMailboxSize(System.IAsyncResult)">
            <summary>
            End async request of getting mailbox's size, paired with BeginGetMailboxSize
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndFetchMessage(System.IAsyncResult)">
            <summary>
            End async request of fetching mail message, paired with BeginFetchMessage
            </summary>
            <returns>A <see cref="T:Aspose.Network.Mail.MailMessage">MailMessage</see> that fetched from the Pop3 server.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndSaveMessage(System.IAsyncResult)">
            <summary>
            End async request of saving mail message, paired with BeginSaveMessage
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndGetMessageCount(System.IAsyncResult)">
            <summary>
            End async request of getting the number of mail message, paired with BeginGetMessageCount
            </summary>
            <returns>The number of E-Mail messages</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndListMessage(System.IAsyncResult)">
            <summary>
            End async request of listing the mail message, paired with BeginListMessage.
            </summary>
            <returns>A Pop3MessageInfo contains the information of the message.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndListMessages(System.IAsyncResult)">
            <summary>
            End async request of listing a set of mail messages, paired with BeginListMessages.
            </summary>
            <returns>A Pop3MessageInfo Collection contains the information of the messages.</returns>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndLogin(System.IAsyncResult)">
            <summary>
            End async request of log in, paired with BeginLogin
            </summary>
        </member>
        <member name="M:Aspose.Network.Pop3.Pop3Client.EndCancelDeletes(System.IAsyncResult)">
            <summary>
            End async request of cancel deletes, paired with BeginCancelDeletes
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Client.Encoding">
            <summary>
            Gets or sets the encoding to getting strings from Pop3 server.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Client.State">
            <summary>
            Gets the connection state.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Client.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Client.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Client.AuthenticationMethod">
            <summary>
            Gets or sets the authencation method.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Client.SecurityMode">
            <summary>
            Specifies which security mode will be used when Secure Sockets Layer (SSL) to encrypt the connection.
            </summary>
        </member>
        <member name="P:Aspose.Network.Pop3.Pop3Client.EnableSsl">
            <summary>
            Specify whether the PopClient uses Secure Sockets Layer (SSL) to encrypt the connection.
            </summary>
            <example>
            <p>The following exmaple demonstrates how to use Pop3Client class to fetch e-mail messages from gmail.</p>
            [C#]
            <code>
            //create Pop3client with specified server, username and password.
            Pop3client client = new Pop3client("pop.gmail.com", 995, "username@gmail.com", "password");
               //enable ssl
               client.EnableSsl = true;
               client.SecurityMode = Pop3SslSecurityMode.Implicit;
            try
            {
            	//connect and login to the pop3 server
            	client.Connect(true);
            	//get message count
            	int count = client.GetMessageCount();
                   //save message
                   client.Save(1, "file.eml");
            }
            catch (Pop3Exception ex)
            {
            	System.Diagnostics.Debug.WriteLine(ex.ToString());
            }
            </code>
            [VB.NET]
            <code>
            'create Pop3client with specified server, username and password.
            Pop3client client = new Pop3client("pop.gmail.com", 995, "username@gmail.com", "password");
               client.EnableSsl = true
               client.SecurityMode = Pop3SslSecurityMode.Implicit
            Try
            	'connect and login to the pop3 server
            	client.Connect(True)
            	'save the message
            	client.SaveMessage(1, "file.eml")
            Catch ex As Pop3Exception
            	System.Diagnostics.Debug.WriteLine(ex.ToString())
            End Try
            </code>
            </example>
        </member>
        <member name="P:Aspose.Network.Mime.MessageIdCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Aspose.Network.Mime.MessageId"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Aspose.Network.ConnectionState">
            <summary>
            Describes the current state of the connection to a data source.
            <p>This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.</p>
            </summary>
        </member>
        <member name="F:Aspose.Network.ConnectionState.Broken">
            <summary>
            The connection to the data source is broken. This can occur only after the connection has been opened. A connection in this state may be closed and then re-opened. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="F:Aspose.Network.ConnectionState.Closed">
            <summary>
            The connection is closed.
            </summary>
        </member>
        <member name="F:Aspose.Network.ConnectionState.Connecting">
            <summary>
            The connection object is connecting to the data source. 
            </summary>
        </member>
        <member name="F:Aspose.Network.ConnectionState.Executing">
            <summary>
            The connection object is executing a command. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="F:Aspose.Network.ConnectionState.Fetching">
            <summary>
            The connection object is retrieving data. (This value is reserved for future versions of the product.)
            </summary>
        </member>
        <member name="F:Aspose.Network.ConnectionState.Open">
            <summary>
            The connection is open.
            </summary>
        </member>
        <member name="T:Aspose.Network.Imap.ImapSslSecurityMode">
            <summary>
            Represents the SSL security mode for ImapClient
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.ImapSslSecurityMode.Explicit">
            <summary>
            Explicit mode.
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.ImapSslSecurityMode.Implicit">
            <summary>
            Implicit mode.
            </summary>
        </member>
        <member name="T:Aspose.Network.Imap.MessageFlags">
            <summary>
            IMAP message flags. 
            This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.MessageFlags.Answered">
            <summary>
            Message has been answered.
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.MessageFlags.Deleted">
            <summary>
            Message is marked as deleted for removal by Purge.
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.MessageFlags.Draft">
            <summary>
            Message is a draft - not fully composed yet.
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.MessageFlags.Flagged">
            <summary>
            Message is flagged for special attention.
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.MessageFlags.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.MessageFlags.Recent">
            <summary>
            Message has recently arrived and this is the first and only session notified about this. This flag cannot be modified by the client. 
            </summary>
        </member>
        <member name="F:Aspose.Network.Imap.MessageFlags.Readed">
            <summary>
            Message has been read
            </summary>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.WeekDay">
            <summary> Defines a day of the week with a possible offset related to
            a MONTHLY or YEARLY occurrence.
            
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.WeekDay.Sunday">
            <summary>
            Sunday.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.WeekDay.Monday">
            <summary>
            Monday.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.WeekDay.Tuesday">
            <summary>
            Tuesday.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.WeekDay.Wednesday">
            <summary>
            Wednesday
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.WeekDay.Thursday">
            <summary>
            Thursday.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.WeekDay.Friday">
            <summary>
            Friday.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.WeekDay.Saturday">
            <summary>
            Saturday.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDay.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.WeekDay"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDay.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.WeekDay"/> class.
            </summary>
            <param name="day">The day.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDay.#ctor(Aspose.Network.iCalendar.ObjectModel.WeekDay,System.Int32)">
            <summary>
            Constructs a new weekday instance based on the specified
            instance and offset.
            </summary>
            <param name="weekDay">The week day.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDay.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDay.ToWeekDay(System.Int32)">
            <summary>
            Returns the corresponding day constant to the specified
            java.util.Calendar.DAY_OF_WEEK property.
            </summary>
            <param name="calDay">The cal day.</param>
            <returns>
            a string, or null if an invalid DAY_OF_WEEK property is
            specified
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDay.GetCalendarDay(Aspose.Network.iCalendar.ObjectModel.WeekDay)">
            <summary>
            Returns the corresponding <code>java.util.Calendar.DAY_OF_WEEK</code>
            constant for the specified <code>WeekDay</code>.
            </summary>
            <param name="weekday">The weekday.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDay.Equals(System.Object)">
            <summary>
            Equalses the specified arg0.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.WeekDay.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.WeekDay.Offset">
            <returns> Returns the offset.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.WeekDay.Day">
            <summary>
            Gets the day.
            </summary>
            <value>The day.</value>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.RelatedTo">
            <summary> Defines a RELATED-TO iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RelatedTo.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RelatedTo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RelatedTo"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RelatedTo.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.RelatedTo"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RelatedTo.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.RelatedTo.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Postalcode">
            <summary> Defines a POSTALCODE iCalendar component property.</summary>
            <author> 
            </author>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Postalcode.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Postalcode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Postalcode"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Postalcode.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Postalcode"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Postalcode.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
            <throws>  IOException possibly thrown by setting the value of certain properties </throws>
            <throws>  URISyntaxException possibly thrown by setting the value of certain properties </throws>
            <throws>  ParseException possibly thrown by setting the value of certain properties </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Postalcode.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Comment">
            <summary> Defines a COMMENT iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Comment.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Comment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Comment"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Comment.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Comment"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Comment.SetValue(System.String)">
            <summary>
            Sets the current value of the property.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Comment.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Properties.Categories">
            <summary> Defines a CATEGORIES iCalendar component property.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Categories.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Categories.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Categories"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Categories.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Categories"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Categories.#ctor(Aspose.Network.iCalendar.ObjectModel.CategoryCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Categories"/> class.
            </summary>
            <param name="categories">The categories.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Categories.#ctor(Aspose.Network.iCalendar.ObjectModel.ParameterCollection,Aspose.Network.iCalendar.ObjectModel.CategoryCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Properties.Categories"/> class.
            </summary>
            <param name="list">The list.</param>
            <param name="categories">The categories.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Categories.SetValue(System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="aValue">A value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Categories.GetCategories">
            <summary>
            Gets the categories.
            </summary>
            <returns>Returns the categories.</returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Properties.Categories.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Value">
            <summary> Defines a Value Data Type parameter.</summary>
            <author>  
            </author>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Binary">
            <summary>
            Binary.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Boolean">
            <summary>
            Boolean.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.CalAddress">
            <summary>
            CalAddress.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Date">
            <summary>
            Date.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.DateTime">
            <summary>
            DateTime.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Duration">
            <summary>
            Duration.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Float">
            <summary>
            Float.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Integer">
            <summary>
            Integer.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Period">
            <summary>
            Period.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Recur">
            <summary>
            Recur.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Text">
            <summary>
            Text.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.Time">
            <summary>
            Time.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.URI">
            <summary>
            URI.
            </summary>
        </member>
        <member name="F:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.UtcOffset">
            <summary>
            UtcOffset.
            </summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Value"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Value.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.FmtType">
            <summary> Defines a Format Type parameter.</summary>
            <author> 
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.FmtType.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.FmtType"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.FmtType.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Abbrev">
            <summary> Defines an Abbreviation parameter.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Abbrev.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Aspose.Network.iCalendar.ObjectModel.Parameters.Abbrev"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.Parameters.Abbrev.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns>Returns the value.</returns>
        </member>
        <member name="T:Aspose.Network.iCalendar.ObjectModel.VTimeZone">
            <summary> Defines an iCalendar VTIMEZONE component.
            
            <pre>
            4.6.5 Time Zone Component
            
            Component Name: VTIMEZONE
            
            Purpose: Provide a grouping of component properties that defines a
            time zone.
            
            Formal Definition: A &quot;VTIMEZONE&quot; calendar component is defined by the
            following notation:
            
            timezonec  = &quot;BEGIN&quot; &quot;:&quot; &quot;VTIMEZONE&quot; CRLF
            
            2*(
            
            ; 'tzid' is required, but MUST NOT occur more
            ; than once
            
            tzid /
            
            ; 'last-mod' and 'tzurl' are optional,
            but MUST NOT occur more than once
            
            last-mod / tzurl /
            
            ; one of 'standardc' or 'daylightc' MUST occur
            ..; and each MAY occur more than once.
            
            standardc / daylightc /
            
            ; the following is optional,
            ; and MAY occur more than once
            
            x-prop
            
            )
            
            &quot;END&quot; &quot;:&quot; &quot;VTIMEZONE&quot; CRLF
            
            standardc  = &quot;BEGIN&quot; &quot;:&quot; &quot;STANDARD&quot; CRLF
            
            tzprop
            
            &quot;END&quot; &quot;:&quot; &quot;STANDARD&quot; CRLF
            
            daylightc  = &quot;BEGIN&quot; &quot;:&quot; &quot;DAYLIGHT&quot; CRLF
            
            tzprop
            
            &quot;END&quot; &quot;:&quot; &quot;DAYLIGHT&quot; CRLF
            
            tzprop     = 3*(
            
            ; the following are each REQUIRED,
            ; but MUST NOT occur more than once
            
            dtstart / tzoffsetto / tzoffsetfrom /
            
            ; the following are optional,
            ; and MAY occur more than once
            
            comment / rdate / rrule / tzname / x-prop
            
            )
            </pre>
            
            </summary>
            <author>  
            </author>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VTimeZone.#ctor">
            <summary> Default constructor.</summary>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VTimeZone.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection)">
            <summary> Constructs a new instance containing the specified properties.</summary>
            <param name="properties">a list of properties
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VTimeZone.#ctor(Aspose.Network.iCalendar.ObjectModel.ComponentCollection)">
            <summary> Constructs a new vtimezone component with no properties and the specified list of type components.</summary>
            <param name="observances">a list of type components
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VTimeZone.#ctor(Aspose.Network.iCalendar.ObjectModel.PropertyCollection,Aspose.Network.iCalendar.ObjectModel.ComponentCollection)">
            <summary> Constructor.</summary>
            <param name="properties">a list of properties
            </param>
            <param name="observances">a list of timezone types
            </param>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VTimeZone.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VTimeZone.Validate(System.Boolean)">
            <summary>
            Perform validation on a component.
            </summary>
            <param name="recurse">indicates whether to validate the component's properties</param>
            <throws>  ValidationException where the component is not in a valid state </throws>
        </member>
        <member name="M:Aspose.Network.iCalendar.ObjectModel.VTimeZone.Copy">
            <summary> Overrides default copy method to add support for copying observance sub-components.</summary>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VTimeZone.Observances">
            <returns> Returns the types.
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VTimeZone.TimeZoneId">
            <returns> the mandatory timezone identifier property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VTimeZone.LastModified">
            <returns> the optional last-modified property
            </returns>
        </member>
        <member name="P:Aspose.Network.iCalendar.ObjectModel.VTimeZone.TimeZoneUrl">
            <returns> the optional timezone url property
            </returns>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags">
            <summary>
            Defines how the certificate key can be used. If this value is not defined, the key can be used for any purpose.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.CrlSign">
            <summary>
            The key can be used to sign a certificate revocation list (CRL).
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.DataEncipherment">
            <summary>
            The key can be used for data encryption.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.DecipherOnly">
            <summary>
            The key can be used for decryption only.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.DigitalSignature">
            <summary>
            The key can be used as a digital signature.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.EncipherOnly">
            <summary>
            The key can be used for encryption only.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.KeyAgreement">
            <summary>
            The key can be used to determine key agreement, such as a key created using the Diffie-Hellman key agreement algorithm.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.KeyCertSign">
            <summary>
            The key can be used to sign certificates.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.KeyEncipherment">
            <summary>
            The key can be used for key encryption.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.NonRepudiation">
            <summary>
            The key can be used for authentication.
            </summary>
        </member>
        <member name="F:Aspose.Network.Security.Cryptography.X509Certificates.X509KeyUsageFlags.None">
            <summary>
            No key usage parameters.
            </summary>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X500DistinguishedName">
            <summary>
            Represents the distinguished name of an X509 certificate. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the FileAppender class.
            </summary>
            <param name="encodedDistinguishedName">A byte array that contains distinguished name information.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="distinguishedName">A string that represents the distinguished name.</param>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X500DistinguishedName.ToString">
            <summary>
            Returns a string representation of this instance.
            </summary>
            <returns>String that contains the contents of this X500DistinguishName.</returns>
        </member>
        <member name="T:Aspose.Network.Security.Cryptography.X509Certificates.X509Extension">
            <summary>
            Represents an X509 extension.
            </summary>
        </member>
        <member name="M:Aspose.Network.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.String,System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the X509Extension class.
            </summary>
            <param name="oid">The object identifier used to identify the extension.</param>
            <param name="rawData">The non-encoded data used to create the extension.</param>
            <param name="critical">true if the extension is critical; otherwise false.</param>
        </member>
        <member name="P:Aspose.Network.Security.Cryptography.X509Certificates.X509Extension.Critical">
            <summary>
            Gets a Boolean value indicating whether the extension is critical.
            </summary>
        </member>
    </members>
</doc>
