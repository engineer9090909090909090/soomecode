<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAu7u7Bru7uzK7u7syu7u7ULu7u2a7u7tou7u7mbu7u5m7u7u1u7u7zbu7
        u827u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u+u7u7vNu7u7zbu7u6W7u7uZu7u7kbu7
        u2a7u7tmu7u7SLu7uzK7u7syAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMqJyJjKicnoyonLBMqJy5TKicv84q3z/MqJy/zKicuUyonLBMqJyejKiciYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMqJyPDKicsk5q3z/QruO/0LClf89wpX/OcGT/zfAkv83wJL/OcCS/zy/kf8+uoz/N6x8/zKi
        cskyonI8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMaNzEjGjc6s5rH7/R8KX/z7Gmf81w5T/MMKS/y3BkP8swJD/LMCP/y2/j/8uv4//ML+P/zO/
        kP83v5H/Pb6R/zetfv8xo3OrMaNzEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADCkdCQwpHTbRr2S/0TKnv80xZb/LMOS/yjCkf8mwY//JsCP/yXAjv8lwI7/Jr+O/ye/
        jv8pv47/K7+O/y2/j/8xv5D/N8CS/z67jf8wpHTbMKR0JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAvpXUkMKZ27U7HnP9CzJ7/L8aW/yfEkv8lw5H/I8OQ/yTCkP8kwo//JMGP/yXB
        j/8lwY//JsCO/ybAjv8nwI7/KL+O/yq/jv8uv4//NcCR/z2/kf8xp3fvL6V1JAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALqd2Di6ndttQyJ3/RM6i/y3Hl/8kxZL/I8SS/yLEkf8jw5H/I8OR/yTD
        kf8kwpD/JMKQ/yXCkP8lwZD/JsGP/ybAj/8mwI//J8CO/ynAj/8twJD/NMGS/z6/kv8up3bbLqd2DgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtqHevSsKW/03UqP8vypn/JMeU/yLGk/8ixpP/IsWT/yLF
        kv8jxZL/I8SS/yTEkv8kw5H/JMOR/yXDkf8lwpD/JcKQ/ybCkP8mwZD/J8GP/yjAkP8twZH/NsKT/z28
        jv8tqHevAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALKl4PDKufv9c2bH/OM6f/yTJlv8iyJX/IsiV/yLH
        lP8ix5T/TdKo/xxTO/8bUTn/G1E5/xtROf8aUTr/G1E6/xpROv9NyaH/JsOR/ybDkf8nwpH/J8KQ/ynC
        kf8vwpL/OsOV/zOwgf8sqXg8AAAAAAAAAAAAAAAAAAAAAAAAAAArq3rHV8+l/0vWqv8py5r/IsmW/yHJ
        lv8iyZb/IsiW/yLIlf880KL/JGhN/xtROf8bUjn/HFI6/xtSOf8bUTn/IF1D/0jPpf8mxJP/JsSS/ybD
        kv8nw5L/KMOR/yvDkv8zw5T/PcGU/yuresMAAAAAAAAAAAAAAAAAAAAAKqx7MjGxgf9o4rr/PNOk/yTL
        mf8iy5j/IsuY/yPKl/8jypf/I8qX/yrLmv81jGz/HFM7/xxUOv8cUzr/HFM7/xxTOv8ufWD/N8qc/ybG
        lP8mxpT/J8WT/yfFk/8nxJP/KcST/y/ElP87xZf/MrSE/yqsezIAAAAAAAAAAAAAAAAorXyHTMec/13g
        t/8z0qH/JM2a/yPNmv8jzZn/JMyZ/yTMmf8ky5j/JMuY/0Sui/8cVTv/HVU7/x1WPP8dVjz/HFQ8/0Kk
        gv8nyZf/J8iV/yfHlf8nx5X/J8aV/yjGlP8oxpT/LMaV/zbGl/89wJP/KK18hwAAAAAAAAAAAAAAACev
        fcNh2bD/U92y/yzRn/8jz5v/JM6b/yTOm/8kzpr/JM2a/yTNmv8lzZr/Ssmh/x1XPf8eVz7/Hlg9/x1X
        Pf8cVj3/Sr+a/ybKl/8nyZf/J8mX/yfJlv8nyJb/KMiW/yjHlf8qx5b/M8eY/z7Fl/8nr33DAAAAAAAA
        AAAAAAAAJrB/8W/kvv9O3bH/KtGf/yXQnf8lz53/Jc+c/yXPnP8lzpz/Js6c/ybOm/9M1qz/IGNH/x5Z
        P/8dWT//Hlk//x5dQv9O0qj/J8uZ/yjKmf8oypj/KMqY/yjJmP8oyZf/KciX/yrIl/8xyJj/Psib/yaw
        f/MAAAAAAAAAACSygAwksoD/euzI/0/esv8s06H/KdKg/ynSn/8p0Z//KdGf/yjRnv8o0J7/KNCd/zrV
        pv8vhWX/HltA/x9bQP8eW0D/Knla/0PVqf8ozZv/Kcya/ynMmv8pzJr/KcuZ/ynLmf8pypn/KsqY/zHK
        mv8/ypz/J7SC/ySygAwAAAAAI7OCEiOzgv987cr/UuC2/zHWpf8t1aP/LNSi/yzUov8s1KH/K9Oh/yvT
        of8r0aD/JJJs/yBfQ/8fXUL/H15C/x9dQv8fXkL/JItn/yrOnP8pzpz/Kc6c/ynNm/8pzZv/Ks2b/yrM
        mv8qzJr/Mcub/z/Lnv8ot4b/I7OCEgAAAAAitYMMIrWD/3zuy/9b5Lr/ONmo/zHXpf8x16X/MNal/zDW
        pP8w1qT/MNWk/ympf/8gYEP/IF9D/yBgQ/8gYEP/IGBD/yBfQ/8gX0P/J6J5/y3Rn/8t0Z//LdCe/yzQ
        nv8sz53/LM6d/yzOnP80zZ3/Qs6g/yS3hf8itYMMAAAAAAAAAAAgt4TtcujD/2fnwP9C3K3/Ntio/zbY
        qP822Kj/Ndin/zXXp/8016f/JHpZ/yFhRf8gYkX/IWJF/yBiRf8hYkX/IGJF/yFhRf8jclP/MdOi/zHS
        ov8w0qH/MNKh/zDRoP8w0aD/MNCf/zjPoP9H0KT/ILeE8QAAAAAAAAAAAAAAAB+4hsNj37f/c+zG/03f
        tP872qv/O9qr/zraqv862qr/Odqq/znZqv8ja03/IWNG/yFjRv8hY0b/IWNG/yFjRv8hY0b/IWNG/yFm
        SP811qb/NNWl/zTVpf801KT/M9Sj/zPTo/8106P/PtKk/0jOo/8fuIbDAAAAAAAAAAAAAAAAHrqHh0nR
        pv9+8c3/XOW7/0Xer/9A3K3/QNyt/z/crf8/3K3/Ptus/zGEZP8iZUf/ImVH/yJlR/8iZUf/ImVH/yJl
        R/8iZUf/KndY/z7bq/852Kj/Odio/zjXp/8416f/N9am/zvWpv9H1aj/QMue/x66h4cAAAAAAAAAAAAA
        AAAcu4gyIb6M/4Dxzv9v68X/UuK2/0besP9F3rD/Rd6w/0Ter/9E3q//T7mW/yJmSP8iZkj/ImZI/yJm
        SP8iZkj/ImZI/yJmSP9Ks47/QNus/z7bq/8+2qv/Pdqq/z3Zqv8+2ar/Q9iq/1XasP8mwI//HLuIMgAA
        AAAAAAAAAAAAAAAAAAAbvInDWNyy/3/xzv9k6MD/T+G1/0rfs/9J37L/Sd+y/0jfsv9m5b7/NIhn/yNo
        Sf8jaEn/I2hJ/yNoSf8jaEn/MIBf/2jlv/9D3a//Q92v/0Lcrv9C3K7/Qtut/0Xbrv9P26//TNSp/xu8
        icMAAAAAAAAAAAAAAAAAAAAAAAAAABq+izwev47/gPDN/3jvyv9g573/UuK3/0/htf9O4bX/TuG1/1Li
        tv947cn/ULeT/yVsTf8jaUr/JGtM/02xjv957cr/T+G1/0jfsv9I37L/R9+x/0fesf9J3rH/UN6y/1/g
        t/8kw5H/Gr6LPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABm/jK8+0aT/hPPQ/3Xuyf9i6L//VuS5/1Pj
        uP9S47f/UuO3/1Tkuf9v7Mb/g/PQ/3rsyf+D89H/ce3H/1Ljt/9O4bX/TeG1/0zhtP9M4bT/TeG0/1Ph
        tv9i47r/PtGj/xm/jK8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGMCNDhjAjdlS27H/hPTR/3fu
        yv9m6cH/W+a8/1jkuv9X5Lr/VuS6/1Xkuf9V5Ln/Xue+/1XjuP9T47j/U+O4/1LjuP9S47f/UuK3/1Pi
        t/9Z47n/ZeW+/1HZr/8YwI3ZGMCNDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF8KOJBfC
        ju1R3LH/hPPR/3vwzP9u68X/ZOnA/17nvf9b5rz/Wua7/1rmu/9Z5bv/WeW7/1jluv9Y5br/V+W6/1fk
        uf9a5Lr/Yea9/23pwv9R27D/F8KO7RfCjiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFsOPJBbDj9s+1Kb/f/HO/4Hyz/9478r/b+zF/2nqwv9l6cH/YujA/2Dnvv9f577/YOe+/2Hn
        vv9j6L//Z+jB/27qw/9z68b/Q9ap/xbDj9sWw48kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFcSQDBXEkKsaxpP/WOC3/4Lyz/+C8s//ffHN/3jvyv907cj/cuzH/3Hs
        xv9x7Mf/dO3H/3fuyf957sr/WuG4/xzHlP8VxJCrFcSQDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTFkTYUxZHHFMWR/0DXqv9k5r//du3J/3ju
        yv+A8c7/d+3J/3btyP9j5b3/Qter/xbGkv8UxZHHFMWRNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUxZEwFMWRhRTF
        kcMUxZHhFMWR/xTFkf8UxZH/FMWR4RTFkcMUxZGFFMWRMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>