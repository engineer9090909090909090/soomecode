<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<head>
		<title>KindEditor</title>
        <meta http-equiv="pragma" content="no-cache" />
        <meta http-equiv="Cache-Control" content="no-store, must-revalidate" />
        <meta http-equiv="expires" content="Wed, 26 Feb 1997 08:21:57 GMT" />
        <meta http-equiv="expires" content="0" /> 

        <script language="javascript" type="text/javascript" charset="utf-8" src="kindeditor-min.js"></script>
        <script language="javascript" type="text/javascript">
            KE.lang['photobank'] = "图片银行";
            KE.plugin['photobank'] = {
                click: function (id) {
                    window.external.ShowPhotobank();
                }
            }

            KE.lang['charmap'] = "插入特殊字符";
            KE.plugin['charmap'] = {
                click: function (id) {
                    KE.util.selection(id);
                    var dialog = new KE.dialog({
                        id: id,
                        cmd: 'charmap',
                        file: 'charmap.html',
                        width: 452,
                        height: 250,
                        title: KE.lang['charmap'],
                        yesButton: null,
                        noButton: null
                    });
                    dialog.show();
                },
                check: function (id) {
                    return true;
                },
                exec: function (id) {
                    KE.util.select(id);
                    var iframeDoc = KE.g[id].iframeDoc;
                    var dialogDoc = KE.util.getIframeDoc(KE.g[id].dialog);
                    if (!this.check(id)) return false;
                    var url = KE.$('url', dialogDoc).value;
                    var title = KE.$('imgTitle', dialogDoc).value;
                    var width = KE.$('imgWidth', dialogDoc).value;
                    var height = KE.$('imgHeight', dialogDoc).value;
                    var border = KE.$('imgBorder', dialogDoc).value;
                    this.insert(id, url, title, width, height, border);
                },
                insert: function (id, url, title, width, height, border) {
                    var html = '<img src="' + url + '" ';
                    if (width > 0) html += 'width="' + width + '" ';
                    if (height > 0) html += 'height="' + height + '" ';
                    if (title) html += 'title="' + title + '" ';
                    html += 'alt="' + title + '" ';
                    html += 'border="' + border + '" />';
                    KE.util.insertHtml(id, html);
                    KE.layout.hide(id);
                    KE.util.focus(id);
                }
            };
        </script>
        <script language="javascript" type="text/javascript">
            var YL = {
                isArray: function (D) {
                    if (D) {
                        return YL.isNumber(D.length) && YL.isFunction(D.splice);
                    }
                    return false;
                },
                isBoolean: function (D) {
                    return typeof D === "boolean";
                },
                isFunction: function (D) {
                    return typeof D === "function";
                },
                isNull: function (D) {
                    return D === null;
                },
                isNumber: function (D) {
                    return typeof D === "number" && isFinite(D);
                },
                isObject: function (D) {
                    return (D && (typeof D === "object" || A.isFunction(D))) || false;
                },
                isString: function (D) {
                    return typeof D === "string";
                },
                isUndefined: function (D) {
                    return typeof D === "undefined";
                }
            };

        </script>
        <script language="javascript" type="text/javascript">
            var tinymceSer = {
                entity_encoding: 'named',
                entities: '160,nbsp,161,iexcl,162,cent,163,pound,164,curren,165,yen,166,brvbar,167,sect,168,uml,169,copy,170,ordf,171,laquo,172,not,173,shy,174,reg,175,macr,176,deg,177,plusmn,178,sup2,179,sup3,180,acute,181,micro,182,para,183,middot,184,cedil,185,sup1,186,ordm,187,raquo,188,frac14,189,frac12,190,frac34,191,iquest,192,Agrave,193,Aacute,194,Acirc,195,Atilde,196,Auml,197,Aring,198,AElig,199,Ccedil,200,Egrave,201,Eacute,202,Ecirc,203,Euml,204,Igrave,205,Iacute,206,Icirc,207,Iuml,208,ETH,209,Ntilde,210,Ograve,211,Oacute,212,Ocirc,213,Otilde,214,Ouml,215,times,216,Oslash,217,Ugrave,218,Uacute,219,Ucirc,220,Uuml,221,Yacute,222,THORN,223,szlig,224,agrave,225,aacute,226,acirc,227,atilde,228,auml,229,aring,230,aelig,231,ccedil,232,egrave,233,eacute,234,ecirc,235,euml,236,igrave,237,iacute,238,icirc,239,iuml,240,eth,241,ntilde,242,ograve,243,oacute,244,ocirc,245,otilde,246,ouml,247,divide,248,oslash,249,ugrave,250,uacute,251,ucirc,252,uuml,253,yacute,254,thorn,255,yuml,402,fnof,913,Alpha,914,Beta,915,Gamma,916,Delta,917,Epsilon,918,Zeta,919,Eta,920,Theta,921,Iota,922,Kappa,923,Lambda,924,Mu,925,Nu,926,Xi,927,Omicron,928,Pi,929,Rho,931,Sigma,932,Tau,933,Upsilon,934,Phi,935,Chi,936,Psi,937,Omega,945,alpha,946,beta,947,gamma,948,delta,949,epsilon,950,zeta,951,eta,952,theta,953,iota,954,kappa,955,lambda,956,mu,957,nu,958,xi,959,omicron,960,pi,961,rho,962,sigmaf,963,sigma,964,tau,965,upsilon,966,phi,967,chi,968,psi,969,omega,977,thetasym,978,upsih,982,piv,8226,bull,8230,hellip,8242,prime,8243,Prime,8254,oline,8260,frasl,8472,weierp,8465,image,8476,real,8482,trade,8501,alefsym,8592,larr,8593,uarr,8594,rarr,8595,darr,8596,harr,8629,crarr,8656,lArr,8657,uArr,8658,rArr,8659,dArr,8660,hArr,8704,forall,8706,part,8707,exist,8709,empty,8711,nabla,8712,isin,8713,notin,8715,ni,8719,prod,8721,sum,8722,minus,8727,lowast,8730,radic,8733,prop,8734,infin,8736,ang,8743,and,8744,or,8745,cap,8746,cup,8747,int,8756,there4,8764,sim,8773,cong,8776,asymp,8800,ne,8801,equiv,8804,le,8805,ge,8834,sub,8835,sup,8836,nsub,8838,sube,8839,supe,8853,oplus,8855,otimes,8869,perp,8901,sdot,8968,lceil,8969,rceil,8970,lfloor,8971,rfloor,9001,lang,9002,rang,9674,loz,9824,spades,9827,clubs,9829,hearts,9830,diams,338,OElig,339,oelig,352,Scaron,353,scaron,376,Yuml,710,circ,732,tilde,8194,ensp,8195,emsp,8201,thinsp,8204,zwnj,8205,zwj,8206,lrm,8207,rlm,8211,ndash,8212,mdash,8216,lsquo,8217,rsquo,8218,sbquo,8220,ldquo,8221,rdquo,8222,bdquo,8224,dagger,8225,Dagger,8240,permil,8249,lsaquo,8250,rsaquo,8364,euro',
                setEntities: function (s) {
                    var t = this, a, i, l = {}, re = '', v;

                    // No need to setup more than once
                    if (t.entityLookup)
                        return;

                    // Build regex and lookup array
                    a = s.split(',');
                    for (i = 0; i < a.length; i += 2) {
                        v = a[i];

                        // Don't add default &amp; &quot; etc.
                        if (v == 34 || v == 38 || v == 60 || v == 62)
                            continue;

                        l[String.fromCharCode(a[i])] = a[i + 1];

                        v = parseInt(a[i]).toString(16);
                        re += '\\u' + '0000'.substring(v.length) + v;
                    }

                    if (!re) {
                        t.entity_encoding = 'raw';
                        return;
                    }

                    t.entitiesRE = new RegExp('[' + re + ']', 'g');
                    t.entityLookup = l;
                },
                _encode: function (h) {
                    var t = this, s = t, l;

                    // Entity encode
                    if (s.entity_encoding !== 'raw') {
                        if (s.entity_encoding.indexOf('named') != -1) {
                            t.setEntities(s.entities);
                            l = t.entityLookup;

                            h = h.replace(t.entitiesRE, function (a) {
                                var v;

                                if (v = l[a])
                                    a = '&' + v + ';';

                                return a;
                            });
                        }

                        if (s.entity_encoding.indexOf('numeric') != -1) {
                            h = h.replace(/[\u007E-\uFFFF]/g, function (a) {
                                return '&#' + a.charCodeAt(0) + ';';
                            });
                        }
                    }
                    return h;
                },

                encode: function (s) {
                    return s ? ('' + s).replace(/[<>&\"]/g, function (c, b) {
                        switch (c) {
                            case '&':
                                return '&amp;';

                            case '"':
                                return '&quot;';

                            case '<':
                                return '&lt;';

                            case '>':
                                return '&gt;';
                        }

                        return c;
                    }) : s;
                }
            };
        </script>
        <script language="javascript" type="text/javascript">
            var encodeConvert = {
                formatPool: {
                    'stringToHTML': [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;']],
                    'punctuationToEnglish': [[/\uff10/g, '0'], [/\uff11/g, '1'], [/\uff12/g, '2'], [/\uff13/g, '3'], [/\uff14/g, '4'], [/\uff15/g, '5'], [/\uff16/g, '6'], [/\uff17/g, '7'], [/\uff18/g, '8'], [/\uff19/g, '9'], [/\uff0e/g, '.'], [/\uff0c/g, ','], [/\u2014/g, '-'], [/\uff5c/g, '|'], [/\uff3b/g, '['], [/\uff3d/g, ']'], [/\uff08/g, '('], [/\uff09/g, ')'], [/\uff0f/g, '/'], [/\uff3c/g, '\\'], [/\uff5e/g, '~'], [/\uff0b/g, '+'], [/\uff0d/g, '-'], [/\uff0a/g, '*'], [/\uff05/g, '%'], [/\uff1d/g, '='], [/\uff01/g, '!'], [/\u3000/g, ' '], [/\u3002/g, '.'], [/\u3010/g, '['], [/\u3011/g, ']'], [/\u3001/g, ',']]
                },
                encode: function (str, encodeName) {
                    var f = this.formatPool[encodeName];
                    if (!YL.isString(str) || !f) {
                        return str;
                    }
                    if (YL.isArray(f)) {
                        return this._batchReplace(str, f);
                    }
                    else
                        if (YL.isFunction(f)) {
                            return f();
                        }
                    return str;
                },
                addEncode: function (encodeName, encodeFormat) {
                    this.formatPool[encodeName] = encodeFormat;
                },
                _batchReplace: function (str, arrRe) {
                    for (var i = 0, j = arrRe.length; i < j; i++) {
                        str = str.replace(arrRe[i][0], arrRe[i][1]);
                    };
                    return str;
                }
            };
            //替换中文符号
             function replaceWords(str) {
                var words = {
                    "\\u201C": 34,
                    "\\u201D": 34,
                    "\\u2018": 39,
                    "\\u2019": 39,
                    "\\u3002": 46,
                    "\\u3001": 44,
                    "\\u3000": 32,
                    "\\u2022": 45,
                    "\\u2013": 45,
                    "\\u2026": 46
                };
                var rxp;
                rxp = /[\uFF00-\uFF5F]/g;
                str = str.replace(rxp, function (s) {
                    return String.fromCharCode(str.charCodeAt(str.indexOf(s)) - 65248);
                });
                for (var w in words) {
                    rxp = eval('/' + w + '/g');
                    str = str.replace(rxp, String.fromCharCode(words[w]));
                }
                return str;
            }
            //清除外部粘贴文本垃圾属性
            function  _clearWordTag(value) {
                //style中含有mso-属性的标签，例：<table xxxx style="mso-xxxxx:xxxxx" xxxxx>
                var wordMsoReg = /<[a-zA-Z]+[^<>]*\s+style="[^<>"]*mso-[^<>"]*"[^<>]*>/g;
                //style中含有font-family属性的标签，例：<td xxxx style="font-family:中文;" xxxxx>
                var fontFamilyReg = /<[a-zA-Z]+[^<>]*\s+style="[^<>"]*font-family:[^<>"]*"[^<>]*>/gi;
                value = value.replace(wordMsoReg, function (word) {
                    //当前标签style中所有的mso-xxx:xxx;属性替换为空
                    return word = word.replace(/mso-[^:;<>'"]+:[^:;<>"]*;?([^:";<>]+;)*/g, '');
                });
                value = value.replace(fontFamilyReg, function (word) {
                    //当前标签style中所有font-family不为配置字体的属性全部替换为空
                    return word.replace(/font-family:(?!\s*(Arial|Arial Black|Book Antiqua|Courier new|Verdana|Tahoma|Georgia|Helvetica|Times New Roman|Trebuchet MS);?)[^:;<>"]*;?([^:";<>]+;)*/gi, '');
                });
                return value; //value.replace(/\s+/g, ' ');
            }
            //内容变化
            function afterChanged(id){
                var sc, rtt;
                sc = rtt = KE.html('content');
                rtt = _clearWordTag(rtt);
                rtt = replaceWords(rtt);
                rtt = encodeConvert.encode(rtt, "punctuationToEnglish");
                if (sc != rtt) {
                    KE.html('content', rtt);
                }
            }
            function ShowEditor() {
                KE.show({ id: 'content',
                        resizeMode: '0',
                        allowUpload:false,
                        items: ['source', '|', 'undo', 'redo', 'cut', 'copy', 'paste',
'plainpaste', 'wordpaste', '|', 'justifyleft', 'justifycenter', 'justifyright',
'justifyfull', 'insertorderedlist', 'insertunorderedlist', 'indent', 'outdent', 'subscript',
'superscript', '|', 'selectall', '-', 'fontname', 'fontsize', '|', 'textcolor', 'bgcolor', 'bold',
'italic', 'underline', 'strikethrough', 'removeformat', 'charmap', '|', 'advtable', '|', 'photobank', '|', 'about'],
                        afterChange:afterChanged
                    });
                }
                ShowEditor();
            function SetData(val) {
                //document.getElementById("content").value = val;
                KE.html('content', val);
            }

            function GetData() {
                var rtt = KE.html('content')
                rtt = tinymceSer._encode(rtt);
                //rtt = tinymceSer.encode(rtt);
                return rtt;
            }

            function InsertImage(val) {
                KE.insertHtml('content', '<img src="'+val+'" />');
            }

            function Resize(width, height) {
                KE.util.resize('content',width, height,true,true);
            }
            function insertChar(chr,customChar) {
                KE.util.insertHtml('content', customChar ? chr : ('&#' + chr + ';'));
                KE.layout.hide('content');
                KE.util.focus('content');
            }
		</script>

	</head>
	<body style="margin:0; padding:0;">
	    <textarea id="content" name="content" style="width:872px;height:576px;visibility:hidden;"></textarea>
	</body>
</html>